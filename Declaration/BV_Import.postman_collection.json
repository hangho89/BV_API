{
	"info": {
		"_postman_id": "2c00b326-b60e-4dfa-8b00-d5664e28f5f5",
		"name": "BV_Import",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "5028081",
		"_collection_link": "https://gold-water-3014.postman.co/workspace/My-Workspace~94bdcccb-b1e9-44a7-84db-0990b4b1f82f/collection/5028081-2c00b326-b60e-4dfa-8b00-d5664e28f5f5?action=share&source=collection_link&creator=5028081"
	},
	"item": [
		{
			"name": "TemporaryIMOneline",
			"item": [
				{
					"name": "CreateDec_TemporaryIMOneline_U001",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();\r",
									"if(pm.response.to.have.status(200))\r",
									"{ \r",
									"    pm.execution.setNextRequest(\"ValidationDec_TemporaryIMOneline\");\r",
									"    pm.environment.set(\"IDReference_TemporaryIMdraft\", data.data.id);\r",
									"    pm.environment.set(\"Reference_TemporaryIMdraft\", data.data.reference);\r",
									"    pm.environment.set(\"Reference_LineTemporaryIMdraft\", data.data.lines[0].hash);\r",
									"    pm.environment.set(\"IDReference_LineTemporaryIMedraft\", data.data.lines[0].id);\r",
									"    pm.environment.set(\"TemporaryIM_commodityClassification\", data.data.lines[0].commodityClassification);\r",
									"    pm.environment.set(\"TemporaryIM_governmentProcedure\", data.data.lines[0].governmentProcedure);\r",
									"    pm.environment.set(\"TemporaryIM_numberPackages\", data.data.lines[0].numberPackages); \r",
									"    pm.environment.set(\"TemporaryIM_grossWeight\", data.data.lines[0].grossWeight);\r",
									"    pm.environment.set(\"TemporaryIM_netWeight\", data.data.lines[0].netWeight);  \r",
									"    pm.environment.set(\"TemporaryIM_supplementaryQuantity\", data.data.lines[0].supplementaryQuantity);\r",
									"    pm.environment.set(\"TemporaryIM_permitReferences\", data.data.lines[0].permitReferences[0]); \r",
									"    pm.environment.set(\"TemporaryIM_facilityCode1\", data.data.facilities[0].code);\r",
									"    pm.environment.set(\"TemporaryIM_facilityName1\", data.data.facilities[0].name); \r",
									"}\r",
									"else\r",
									"{\r",
									"     pm.execution.setNextRequest(null);\r",
									"}\r",
									"pm.test(\"Status is DRAFT\", function () {\r",
									"    pm.expect(data.data.status).to.include(\"DRAFT\");\r",
									"});\r",
									"pm.test(\"line array has a length of 1\", function () {\r",
									"    pm.expect(data.data.lines).to.have.lengthOf(1);\r",
									"});\r",
									"\r",
									"pm.test(\"Response status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const evn = pm.variables.get(\"evn\");\r",
									"const realms = pm.variables.get(\"realms\");\r",
									"pm.sendRequest({\r",
									"      url: `${evn}/apps/keycloak/realms/${realms}/protocol/openid-connect/token`,\r",
									"      method: 'POST',\r",
									"       header: {\r",
									"    'Content-Type': 'application/x-www-form-urlencoded',\r",
									"  },\r",
									"      body: {\r",
									"          mode: 'urlencoded',\r",
									"          urlencoded: [\r",
									"            {key: \"grant_type\", value: \"password\"},\r",
									"            {key: \"client_id\", value: \"BV_SWAGGER_UI\"},\r",
									"            {key: \"username\", value: \"atlas.officer@yopmail.com\"},\r",
									"            {key: \"password\", value: \"@Ttek1234\"},\r",
									"        ]\r",
									"      }\r",
									"  }, \r",
									"  function (err, response) {\r",
									"    console.log(\"token\",response.json().access_token);\r",
									"        pm.environment.set(\"tokenIMEX\", response.json().access_token);\r",
									"  });\r",
									"  pm.environment.set(\"LPCO\", \"2100003083\");\r",
									"  pm.environment.set(\"guarantee\",\"100001764BGC24082024-TI\");\r",
									" pm.environment.set(\"facilityCode\",\"DU001\");\r",
									"  pm.environment.set(\"facilityName\", \"U001\");\r",
									"//  pm.environment.set(\"LPCO\", \"2100001392\");\r",
									"//   pm.environment.set(\"guarantee\",\"100001498BGC23072024-TI\");\r",
									"//  pm.environment.set(\"facilityCode\",\"WHO001\");\r",
									"//   pm.environment.set(\"facilityName\", \"Warahouse001\");\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenIMEX}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"type\": \"SUBMISSION\",\r\n    \"data\": {\r\n        \"status\": \"DRAFT\",\r\n        \"regimeCode\": \"2\",\r\n        \"agentName\": \"Atlas World Logistics\",\r\n        \"agentTaxId\": \"90184561\",\r\n        \"agentBizFunction\": \"IM\",\r\n        \"agentCommunication\": \"EM\",\r\n        \"agentCommunicationRef\": \"atlas@yopmail.com\",\r\n        \"agentAddress\": {\r\n            \"id\": \"f6968f7d-5643-4f47-a1f7-e1d9f1ca1368\",\r\n            \"street\": \"Jeddah 7777\",\r\n            \"city\": \"Jeddah\",\r\n            \"poBoxNumber\": \"10101010\",\r\n            \"countryCode\": \"SA\",\r\n            \"address1\": \"111111\",\r\n            \"address2\": \"111111\",\r\n            \"address3\": \"11111\",\r\n            \"country\": \"SA\"\r\n        },\r\n        \"agentCountry\": \"SA\",\r\n        \"carrierName\": \"44440001 - Da Hua\",\r\n        \"traderName\": \"Atlas World Logistics\",\r\n        \"traderTaxId\": \"90184561\",\r\n        \"traderBizFunction\": \"IM\",\r\n        \"traderCommunication\": \"EM\",\r\n        \"traderCommunicationRef\": \"atlas@yopmail.com\",\r\n        \"traderAddress\": {\r\n            \"id\": \"f6968f7d-5643-4f47-a1f7-e1d9f1ca1368\",\r\n            \"street\": \"Jeddah 7777\",\r\n            \"city\": \"Jeddah\",\r\n            \"poBoxNumber\": \"10101010\",\r\n            \"countryCode\": \"SA\",\r\n            \"address1\": \"111111\",\r\n            \"address2\": \"111111\",\r\n            \"address3\": \"11111\"\r\n        },\r\n        \"traderCountry\": \"SA\",\r\n        \"procedureCode\": \"5\",\r\n        \"transportModeCode\": \"1\",\r\n        \"lines\": [\r\n            {\r\n                \"id\": \"fe2855fd-a7f2-41b7-b32a-163ddbf361b0\",\r\n                \"commodityClassification\": \"01061200\",\r\n                \"commercialGoodsDesc\": \"Other\",\r\n                \"supplementaryQuantity\": 100,\r\n                \"permitReferences\": [\r\n                    \"{{LPCO}}\"\r\n                ],\r\n                \"goodsStatusCode\": \"1\",\r\n                \"countryOriginCode\": \"AD\",\r\n                \"regionOriginCode\": \"\",\r\n                \"declaredValue\": 1018737.987,\r\n                \"dutyAssessmentValue\": 1018737.987,\r\n                \"freightCharge\": 135831.732,\r\n                \"insuranceCharge\": 135831.732,\r\n                \"tariffPreferenceClaimedCode\": null,\r\n                \"govtProcedureClaimedCode\": null,\r\n                \"containerReferences\": [\r\n                    \"MSCU2092276\",\r\n                    \"IPXU2148384\"\r\n                ],\r\n                \"numberPackages\": 10000,\r\n                \"grossWeight\": 10000,\r\n                \"netWeight\": null,\r\n                \"vehicles\": [],\r\n                \"containers\": [\r\n                    {\r\n                        \"seals\": \"4000001, 4000002, 4000003, 4000004\",\r\n                        \"containerType\": \"20R0\",\r\n                        \"containerNumber\": \"MSCU2092276\"\r\n                    },\r\n                    {\r\n                        \"seals\": \"5000001, 5000002, 5000003, 5000004\",\r\n                        \"containerType\": \"20R0\",\r\n                        \"containerNumber\": \"IPXU2148384\"\r\n                    }\r\n                ],\r\n                \"manufacture\": \"Godi Cheese With Vegetable Oil\",\r\n                \"shippingMark\": \"Oranges contained in two container\",\r\n                \"modelVehicles\": [],\r\n                \"insuranceLocal\": 135831.732,\r\n                \"packageOfVolM3\": 1,\r\n                \"deductionsLocal\": 0,\r\n                \"extFreightLocal\": 135831.732,\r\n                \"insuranceFxRate\": 67.91586582541548,\r\n                \"otherCostsLocal\": 0,\r\n                \"valuationMethod\": \"1\",\r\n                \"deductedQuantity\": null,\r\n                \"deductionsFxRate\": 0,\r\n                \"descriptionGoods\": \"-- Whales, dolphins and porpoises (mammals of the order Cetacea); manatees and dugongs (mammals of the order Sirenia); seals, sea lions and walruses (mammals of the suborder Pinnipedia)\",\r\n                \"extFreightFxRate\": 67.91586582541548,\r\n                \"insuranceForeign\": 2000,\r\n                \"lineCurrencyCode\": \"USD\",\r\n                \"lineExchangeRate\": 67.91586582541548,\r\n                \"netWeightUOMCode\": null,\r\n                \"otherCostsFxRate\": 0,\r\n                \"deductionsForeign\": 0,\r\n                \"extFreightForeign\": 2000,\r\n                \"otherCostsForeign\": 0,\r\n                \"grossWeightUOMCode\": \"KGM\",\r\n                \"governmentProcedure\": \"5100\",\r\n                \"linePackageTypeCode\": \"4A\",\r\n                \"statisticalQuantity\": 1018737.987,\r\n                \"statisticalUnitCode\": \"MND\",\r\n                \"valuationMethodCode\": \"1\",\r\n                \"supplierRelationCode\": \"135\",\r\n                \"valueForeignCurrency\": 15000,\r\n                \"insuranceCurrencyCode\": \"USD\",\r\n                \"deductionsCurrencyCode\": 0,\r\n                \"extFreightCurrencyCode\": \"USD\",\r\n                \"otherCostsCurrencyCode\": 0,\r\n                \"associatedGovtProcedure\": true,\r\n                \"valuationAdjustmentRate\": 1,\r\n                \"valuationAdjustmentValue\": 0,\r\n                \"commodityClassificationRef\": null,\r\n                \"commodityClassificationCode\": null,\r\n                \"valuationAdjustmentTypeCode\": null\r\n            }\r\n        ],\r\n        \"containers\": [\r\n            {\r\n                \"seals\": \"4000001, 4000002, 4000003, 4000004\",\r\n                \"containerType\": \"20R0\",\r\n                \"containerNumber\": \"MSCU2092276\"\r\n            },\r\n            {\r\n                \"seals\": \"5000001, 5000002, 5000003, 5000004\",\r\n                \"containerType\": \"20R0\",\r\n                \"containerNumber\": \"IPXU2148384\"\r\n            }\r\n        ],\r\n        \"attachments\": [],\r\n        \"totalNetWeight\": 0,\r\n        \"totalVehicles\": 0,\r\n        \"totalContainers\": 2,\r\n        \"facilities\": [\r\n            {\r\n                \"code\": \"{{facilityCode}}\",\r\n                \"name\": \"{{facilityName}}\"\r\n            }\r\n        ],\r\n        \"securityDetails\": \"{{guarantee}}\",\r\n        \"selfDeclared\": true,\r\n        \"agentId\": \"7d4e0dcb-0e3e-4fbb-87fb-acb555ae4edd\",\r\n        \"agentBlacklistedLatest\": false,\r\n        \"id\": \"94eef91f-873b-4c33-9822-d2feff7ebee9\",\r\n        \"reference\": null,\r\n        \"reasons\": [],\r\n        \"rejectReasons\": null,\r\n        \"cancelReasons\": null,\r\n        \"inquiries\": null,\r\n        \"errorReason\": null,\r\n        \"\": null,\r\n        \"parties\": [\r\n            {\r\n                \"name\": \"Godi Cheese With Vegetable Oil\",\r\n                \"type\": \"NOTIFY_PARTIES\",\r\n                \"address\": \"1001 Industry Rd, Suite AKenner, LA 70062\",\r\n                \"communication\": \"TE\",\r\n                \"communicationReference\": \"973172696\"\r\n            }\r\n        ],\r\n        \"remarks\": null,\r\n        \"packages\": [\r\n            {\r\n                \"total\": 1000,\r\n                \"packageType\": \"1A\"\r\n            }\r\n        ],\r\n        \"traderId\": \"7d4e0dcb-0e3e-4fbb-87fb-acb555ae4edd\",\r\n        \"consignor\": \"7258461309\",\r\n        \"check10000\": null,\r\n        \"expiryDate\": \"2025-02-24T09:37:01.134Z\",\r\n        \"totalLines\": 1,\r\n        \"arrivalDate\": \"2022-08-13T00:00:00.000Z\",\r\n        \"carrierCode\": \"44440001\",\r\n        \"incotermCode\": \"CFR\",\r\n        \"totalFreight\": 135831.732,\r\n        \"consignorName\": \"Avis\",\r\n        \"totalPackages\": 10000,\r\n        \"totalDocuments\": 0,\r\n        \"totalInsurance\": 135831.732,\r\n        \"ecvrOptionalFee\": false,\r\n        \"invoiceDocument\": [],\r\n        \"officeEntryCode\": \"SAJED\",\r\n        \"traderReference\": \"Direct Import\",\r\n        \"agentBlacklisted\": false,\r\n        \"consignorAddress\": \"Vietnam\",\r\n        \"consignorCountry\": \"AE\",\r\n        \"hlevyOptionalFee\": false,\r\n        \"loadingPlaceCode\": \"GHABK\",\r\n        \"officeExportCode\": \"SAJED\",\r\n        \"securityTypeCode\": \"BON\",\r\n        \"totalGrossWeight\": 10000,\r\n        \"typeMeansTavCode\": \"1\",\r\n        \"completionTempDec\": false,\r\n        \"countryExportCode\": \"IN\",\r\n        \"goodsLocationCode\": \"889911CCA\",\r\n        \"htt001OptionalFee\": false,\r\n        \"incotermPlaceCode\": \"SAJED\",\r\n        \"incotermPlaceName\": \"Jeddah\",\r\n        \"traderBlacklisted\": false,\r\n        \"additionalDocument\": [],\r\n        \"placeDischargeCode\": \"SAJED\",\r\n        \"previousDocumentNo\": null,\r\n        \"totalInvoiceAmount\": 15000,\r\n        \"transportDocuments\": [],\r\n        \"nationalMeansTavCode\": \"IN\",\r\n        \"previousDocumentDate\": null,\r\n        \"natureTransactionCode\": \"1\",\r\n        \"officeDeclarationCode\": \"GHABK\",\r\n        \"totalInsuranceForeign\": 2000,\r\n        \"consignorCommunication\": \"AH\",\r\n        \"freightApportQualifier\": \"VOL\",\r\n        \"identificationMeansTav\": \"SA578\",\r\n        \"totalExtFreightForeign\": 2000,\r\n        \"declarationCurrencyCode\": \"AFN\",\r\n        \"traderBlacklistedLatest\": false,\r\n        \"freightApportQualifierCode\": null,\r\n        \"consignorCommunicationReference\": \"67777\",\r\n        \"version\": 0\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{evn}}/api/gateway/v1/decman/requests",
							"host": [
								"{{evn}}"
							],
							"path": [
								"api",
								"gateway",
								"v1",
								"decman",
								"requests"
							]
						}
					},
					"response": []
				},
				{
					"name": "CreateDec_TemporaryIMOneline_U002",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();\r",
									"if(pm.response.to.have.status(200))\r",
									"{ \r",
									"    pm.execution.setNextRequest(\"ValidationDec_TemporaryIMOneline\");\r",
									"    pm.environment.set(\"IDReference_TemporaryIMdraft\", data.data.id);\r",
									"    pm.environment.set(\"Reference_TemporaryIMdraft\", data.data.reference);\r",
									"    pm.environment.set(\"Reference_LineTemporaryIMdraft\", data.data.lines[0].hash);\r",
									"    pm.environment.set(\"IDReference_LineTemporaryIMedraft\", data.data.lines[0].id);\r",
									"    pm.environment.set(\"TemporaryIM_commodityClassification\", data.data.lines[0].commodityClassification);\r",
									"    pm.environment.set(\"TemporaryIM_governmentProcedure\", data.data.lines[0].governmentProcedure);\r",
									"    pm.environment.set(\"TemporaryIM_numberPackages\", data.data.lines[0].numberPackages); \r",
									"    pm.environment.set(\"TemporaryIM_grossWeight\", data.data.lines[0].grossWeight);\r",
									"    pm.environment.set(\"TemporaryIM_netWeight\", data.data.lines[0].netWeight);  \r",
									"    pm.environment.set(\"TemporaryIM_supplementaryQuantity\", data.data.lines[0].supplementaryQuantity);\r",
									"    pm.environment.set(\"TemporaryIM_permitReferences\", data.data.lines[0].permitReferences[0]); \r",
									"    pm.environment.set(\"TemporaryIM_facilityCode2\", data.data.facilities[0].code);\r",
									"    pm.environment.set(\"TemporaryIM_facilityName2\", data.data.facilities[0].name); \r",
									"}\r",
									"else\r",
									"{\r",
									"     pm.execution.setNextRequest(null);\r",
									"}\r",
									"pm.test(\"Status is DRAFT\", function () {\r",
									"    pm.expect(data.data.status).to.include(\"DRAFT\");\r",
									"});\r",
									"pm.test(\"line array has a length of 1\", function () {\r",
									"    pm.expect(data.data.lines).to.have.lengthOf(1);\r",
									"});\r",
									"\r",
									"pm.test(\"Response status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const evn = pm.variables.get(\"evn\");\r",
									"const realms = pm.variables.get(\"realms\");\r",
									"pm.sendRequest({\r",
									"      url: `${evn}/apps/keycloak/realms/${realms}/protocol/openid-connect/token`,\r",
									"      method: 'POST',\r",
									"       header: {\r",
									"    'Content-Type': 'application/x-www-form-urlencoded',\r",
									"  },\r",
									"      body: {\r",
									"          mode: 'urlencoded',\r",
									"          urlencoded: [\r",
									"            {key: \"grant_type\", value: \"password\"},\r",
									"            {key: \"client_id\", value: \"BV_SWAGGER_UI\"},\r",
									"            {key: \"username\", value: \"atlas.officer@yopmail.com\"},\r",
									"            {key: \"password\", value: \"@Ttek1234\"},\r",
									"        ]\r",
									"      }\r",
									"  }, \r",
									"  function (err, response) {\r",
									"    console.log(\"token\",response.json().access_token);\r",
									"        pm.environment.set(\"tokenIMEX\", response.json().access_token);\r",
									"  });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenIMEX}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"type\": \"SUBMISSION\",\r\n    \"data\": {\r\n        \"status\": \"DRAFT\",\r\n        \"regimeCode\": \"2\",\r\n        \"agentName\": \"Atlas World Logistics\",\r\n        \"agentTaxId\": \"90184561\",\r\n        \"agentBizFunction\": \"IM\",\r\n        \"agentCommunication\": \"EM\",\r\n        \"agentCommunicationRef\": \"atlas@yopmail.com\",\r\n        \"agentAddress\": {\r\n            \"id\": \"f6968f7d-5643-4f47-a1f7-e1d9f1ca1368\",\r\n            \"street\": \"Jeddah 7777\",\r\n            \"city\": \"Jeddah\",\r\n            \"poBoxNumber\": \"10101010\",\r\n            \"countryCode\": \"SA\",\r\n            \"address1\": \"111111\",\r\n            \"address2\": \"111111\",\r\n            \"address3\": \"11111\",\r\n            \"country\": \"SA\"\r\n        },\r\n        \"agentCountry\": \"SA\",\r\n        \"carrierName\": \"44440001 - Da Hua\",\r\n        \"traderName\": \"Atlas World Logistics\",\r\n        \"traderTaxId\": \"90184561\",\r\n        \"traderBizFunction\": \"IM\",\r\n        \"traderCommunication\": \"EM\",\r\n        \"traderCommunicationRef\": \"atlas@yopmail.com\",\r\n        \"traderAddress\": {\r\n            \"id\": \"f6968f7d-5643-4f47-a1f7-e1d9f1ca1368\",\r\n            \"street\": \"Jeddah 7777\",\r\n            \"city\": \"Jeddah\",\r\n            \"poBoxNumber\": \"10101010\",\r\n            \"countryCode\": \"SA\",\r\n            \"address1\": \"111111\",\r\n            \"address2\": \"111111\",\r\n            \"address3\": \"11111\"\r\n        },\r\n        \"traderCountry\": \"SA\",\r\n        \"procedureCode\": \"5\",\r\n        \"transportModeCode\": \"1\",\r\n        \"lines\": [\r\n            {\r\n                \"id\": \"e91b0b55-c4a5-4805-b1cc-2068fb24d98a\",\r\n                \"commodityClassification\": \"01061200\",\r\n                \"commercialGoodsDesc\": \"Other\",\r\n                \"supplementaryQuantity\": 100,\r\n                \"permitReferences\": [\r\n                    \"2100003083\"\r\n                ],\r\n                \"goodsStatusCode\": \"1\",\r\n                \"countryOriginCode\": \"AD\",\r\n                \"regionOriginCode\": \"\",\r\n                \"declaredValue\": 1018737.987,\r\n                \"dutyAssessmentValue\": 1018737.987,\r\n                \"freightCharge\": 135831.732,\r\n                \"insuranceCharge\": 135831.732,\r\n                \"tariffPreferenceClaimedCode\": null,\r\n                \"govtProcedureClaimedCode\": null,\r\n                \"containerReferences\": [\r\n                    \"MSCU2092276\",\r\n                    \"IPXU2148384\"\r\n                ],\r\n                \"numberPackages\": 10000,\r\n                \"grossWeight\": 10000,\r\n                \"netWeight\": null,\r\n                \"vehicles\": [],\r\n                \"containers\": [\r\n                    {\r\n                        \"seals\": \"4000001, 4000002, 4000003, 4000004\",\r\n                        \"containerType\": \"20R0\",\r\n                        \"containerNumber\": \"MSCU2092276\"\r\n                    },\r\n                    {\r\n                        \"seals\": \"5000001, 5000002, 5000003, 5000004\",\r\n                        \"containerType\": \"20R0\",\r\n                        \"containerNumber\": \"IPXU2148384\"\r\n                    }\r\n                ],\r\n                \"manufacture\": \"Godi Cheese With Vegetable Oil\",\r\n                \"shippingMark\": \"Oranges contained in two container\",\r\n                \"modelVehicles\": [],\r\n                \"insuranceLocal\": 135831.732,\r\n                \"packageOfVolM3\": 1,\r\n                \"deductionsLocal\": 0,\r\n                \"extFreightLocal\": 135831.732,\r\n                \"insuranceFxRate\": 67.91586582541548,\r\n                \"otherCostsLocal\": 0,\r\n                \"valuationMethod\": \"1\",\r\n                \"deductedQuantity\": null,\r\n                \"deductionsFxRate\": 0,\r\n                \"descriptionGoods\": \"-- Whales, dolphins and porpoises (mammals of the order Cetacea); manatees and dugongs (mammals of the order Sirenia); seals, sea lions and walruses (mammals of the suborder Pinnipedia)\",\r\n                \"extFreightFxRate\": 67.91586582541548,\r\n                \"insuranceForeign\": 2000,\r\n                \"lineCurrencyCode\": \"USD\",\r\n                \"lineExchangeRate\": 67.91586582541548,\r\n                \"netWeightUOMCode\": null,\r\n                \"otherCostsFxRate\": 0,\r\n                \"deductionsForeign\": 0,\r\n                \"extFreightForeign\": 2000,\r\n                \"otherCostsForeign\": 0,\r\n                \"grossWeightUOMCode\": \"KGM\",\r\n                \"governmentProcedure\": \"5100\",\r\n                \"linePackageTypeCode\": \"4A\",\r\n                \"statisticalQuantity\": 1018737.987,\r\n                \"statisticalUnitCode\": \"MND\",\r\n                \"valuationMethodCode\": \"1\",\r\n                \"supplierRelationCode\": \"135\",\r\n                \"valueForeignCurrency\": 15000,\r\n                \"insuranceCurrencyCode\": \"USD\",\r\n                \"deductionsCurrencyCode\": 0,\r\n                \"extFreightCurrencyCode\": \"USD\",\r\n                \"otherCostsCurrencyCode\": 0,\r\n                \"associatedGovtProcedure\": true,\r\n                \"valuationAdjustmentRate\": 1,\r\n                \"valuationAdjustmentValue\": 0,\r\n                \"commodityClassificationRef\": null,\r\n                \"commodityClassificationCode\": null,\r\n                \"valuationAdjustmentTypeCode\": null\r\n            }\r\n        ],\r\n        \"containers\": [\r\n            {\r\n                \"seals\": \"4000001, 4000002, 4000003, 4000004\",\r\n                \"containerType\": \"20R0\",\r\n                \"containerNumber\": \"MSCU2092276\"\r\n            },\r\n            {\r\n                \"seals\": \"5000001, 5000002, 5000003, 5000004\",\r\n                \"containerType\": \"20R0\",\r\n                \"containerNumber\": \"IPXU2148384\"\r\n            }\r\n        ],\r\n        \"attachments\": [],\r\n        \"totalNetWeight\": 0,\r\n        \"totalVehicles\": 0,\r\n        \"totalContainers\": 2,\r\n        \"facilities\": [\r\n            {\r\n                \"code\": \"U002\",\r\n                \"name\": \"U002\"\r\n            }\r\n        ],\r\n        \"securityDetails\": \"100001764BGC24082024-TI\",\r\n        \"selfDeclared\": true,\r\n        \"agentId\": \"7d4e0dcb-0e3e-4fbb-87fb-acb555ae4edd\",\r\n        \"agentBlacklistedLatest\": false,\r\n        \"id\": \"7d0296ff-86f0-4059-9faa-ab3dc6bfba8c\",\r\n        \"reference\": null,\r\n        \"reasons\": [],\r\n        \"rejectReasons\": null,\r\n        \"cancelReasons\": null,\r\n        \"inquiries\": null,\r\n        \"errorReason\": null,\r\n        \"\": null,\r\n        \"parties\": [\r\n            {\r\n                \"name\": \"Godi Cheese With Vegetable Oil\",\r\n                \"type\": \"NOTIFY_PARTIES\",\r\n                \"address\": \"1001 Industry Rd, Suite AKenner, LA 70062\",\r\n                \"communication\": \"TE\",\r\n                \"communicationReference\": \"973172696\"\r\n            }\r\n        ],\r\n        \"remarks\": null,\r\n        \"packages\": [\r\n            {\r\n                \"total\": 1000,\r\n                \"packageType\": \"1A\"\r\n            }\r\n        ],\r\n        \"traderId\": \"7d4e0dcb-0e3e-4fbb-87fb-acb555ae4edd\",\r\n        \"consignor\": \"7258461309\",\r\n        \"check10000\": null,\r\n        \"expiryDate\": \"2025-02-24T09:37:01.134Z\",\r\n        \"totalLines\": 1,\r\n        \"arrivalDate\": \"2022-08-13T00:00:00.000Z\",\r\n        \"carrierCode\": \"44440001\",\r\n        \"incotermCode\": \"CFR\",\r\n        \"totalFreight\": 135831.732,\r\n        \"consignorName\": \"Avis\",\r\n        \"totalPackages\": 10000,\r\n        \"totalDocuments\": 0,\r\n        \"totalInsurance\": 135831.732,\r\n        \"ecvrOptionalFee\": false,\r\n        \"invoiceDocument\": [],\r\n        \"officeEntryCode\": \"SAJED\",\r\n        \"traderReference\": \"Direct Import\",\r\n        \"agentBlacklisted\": false,\r\n        \"consignorAddress\": \"Vietnam\",\r\n        \"consignorCountry\": \"AE\",\r\n        \"hlevyOptionalFee\": false,\r\n        \"loadingPlaceCode\": \"GHABK\",\r\n        \"officeExportCode\": \"SAJED\",\r\n        \"securityTypeCode\": \"BON\",\r\n        \"totalGrossWeight\": 10000,\r\n        \"typeMeansTavCode\": \"1\",\r\n        \"completionTempDec\": false,\r\n        \"countryExportCode\": \"IN\",\r\n        \"goodsLocationCode\": \"889911CCA\",\r\n        \"htt001OptionalFee\": false,\r\n        \"incotermPlaceCode\": \"SAJED\",\r\n        \"incotermPlaceName\": \"Jeddah\",\r\n        \"traderBlacklisted\": false,\r\n        \"additionalDocument\": [],\r\n        \"placeDischargeCode\": \"SAJED\",\r\n        \"previousDocumentNo\": null,\r\n        \"totalInvoiceAmount\": 15000,\r\n        \"transportDocuments\": [],\r\n        \"nationalMeansTavCode\": \"IN\",\r\n        \"previousDocumentDate\": null,\r\n        \"natureTransactionCode\": \"1\",\r\n        \"officeDeclarationCode\": \"GHABK\",\r\n        \"totalInsuranceForeign\": 2000,\r\n        \"consignorCommunication\": \"AH\",\r\n        \"freightApportQualifier\": \"VOL\",\r\n        \"identificationMeansTav\": \"SA578\",\r\n        \"totalExtFreightForeign\": 2000,\r\n        \"declarationCurrencyCode\": \"AFN\",\r\n        \"traderBlacklistedLatest\": false,\r\n        \"freightApportQualifierCode\": null,\r\n        \"consignorCommunicationReference\": \"67777\",\r\n        \"version\": 0\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{evn}}/api/gateway/v1/decman/requests",
							"host": [
								"{{evn}}"
							],
							"path": [
								"api",
								"gateway",
								"v1",
								"decman",
								"requests"
							]
						}
					},
					"response": []
				},
				{
					"name": "ValidationDec_TemporaryIMOneline",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data;\r",
									"data = pm.response.json();\r",
									"if(pm.response.to.have.status(200))\r",
									"{\r",
									"   pm.environment.set(\"errorCount\", data.data.errorCount);  \r",
									"}\r",
									"if (data.data.errorCount == 0)\r",
									"{\r",
									"     pm.execution.setNextRequest(\"SubmitDecTemporaryIM\");\r",
									"      pm.test(\"Check if the error count is 0\", function () {\r",
									"    pm.expect(pm.environment.get(\"errorCount\")).to.equal(0);\r",
									"});\r",
									"   \r",
									"}\r",
									"else\r",
									"{\r",
									"    pm.execution.setNextRequest(null)\r",
									"      pm.test(\"Check if the error count is more than 0\", function () {\r",
									"    pm.expect(data.data.errorCount).to.be.greaterThan(0);\r",
									"});\r",
									"}\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"\r",
									"\r",
									"//   setTimeout(function(){\r",
									"//           console.log(\"Sleeping for 3 seconds before next request.\");\r",
									"//   }, 3000);\r",
									"\r",
									"//   pm.execution.skipRequest(\"ValidationDec_TemporaryIMOneline\");\r",
									" //pm.execution.skipRequest()\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenIMEX}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"status\": \"DRAFT\",\r\n    \"regimeCode\": \"2\",\r\n    \"agentName\": \"Atlas World Logistics\",\r\n    \"agentTaxId\": \"90184561\",\r\n    \"agentBizFunction\": \"IM\",\r\n    \"agentCommunication\": \"EM\",\r\n    \"agentCommunicationRef\": \"atlas@yopmail.com\",\r\n    \"agentAddress\": {\r\n        \"id\": \"f6968f7d-5643-4f47-a1f7-e1d9f1ca1368\",\r\n        \"street\": \"Jeddah 7777\",\r\n        \"city\": \"Jeddah\",\r\n        \"poBoxNumber\": \"10101010\",\r\n        \"countryCode\": \"SA\",\r\n        \"address1\": \"111111\",\r\n        \"address2\": \"111111\",\r\n        \"address3\": \"11111\",\r\n        \"country\": \"SA\"\r\n    },\r\n    \"agentCountry\": \"SA\",\r\n    \"carrierName\": \"44440001 - Da Hua\",\r\n    \"traderName\": \"Atlas World Logistics\",\r\n    \"traderTaxId\": \"90184561\",\r\n    \"traderBizFunction\": \"IM\",\r\n    \"traderCommunication\": \"EM\",\r\n    \"traderCommunicationRef\": \"atlas@yopmail.com\",\r\n    \"traderAddress\": {\r\n        \"id\": \"f6968f7d-5643-4f47-a1f7-e1d9f1ca1368\",\r\n        \"street\": \"Jeddah 7777\",\r\n        \"city\": \"Jeddah\",\r\n        \"poBoxNumber\": \"10101010\",\r\n        \"countryCode\": \"SA\",\r\n        \"address1\": \"111111\",\r\n        \"address2\": \"111111\",\r\n        \"address3\": \"11111\"\r\n    },\r\n    \"traderCountry\": \"SA\",\r\n    \"procedureCode\": \"5\",\r\n    \"transportModeCode\": \"1\",\r\n    \"lines\": [\r\n        {\r\n            \"id\": \"{{IDReference_LineTemporaryIMedraft}}\",\r\n            \"commodityClassification\": \"01061200\",\r\n            \"commercialGoodsDesc\": \"Other\",\r\n            \"supplementaryQuantity\": 100,\r\n            \"permitReferences\": [\r\n                \"2100003083\"\r\n            ],\r\n            \"goodsStatusCode\": \"1\",\r\n            \"countryOriginCode\": \"AD\",\r\n            \"regionOriginCode\": \"\",\r\n            \"declaredValue\": 1018737.987,\r\n            \"dutyAssessmentValue\": 1018737.987,\r\n            \"freightCharge\": 135831.732,\r\n            \"insuranceCharge\": 135831.732,\r\n            \"tariffPreferenceClaimedCode\": null,\r\n            \"govtProcedureClaimedCode\": null,\r\n            \"containerReferences\": [\r\n                \"MSCU2092276\",\r\n                \"IPXU2148384\"\r\n            ],\r\n            \"numberPackages\": 10000,\r\n            \"grossWeight\": 10000,\r\n            \"netWeight\": null,\r\n            \"seqNumber\": 1,\r\n            \"hash\": {{Reference_LineTemporaryIMdraft}},\r\n            \"vehicles\": [],\r\n            \"containers\": [\r\n                {\r\n                    \"seals\": \"4000001, 4000002, 4000003, 4000004\",\r\n                    \"containerType\": \"20R0\",\r\n                    \"containerNumber\": \"MSCU2092276\"\r\n                },\r\n                {\r\n                    \"seals\": \"5000001, 5000002, 5000003, 5000004\",\r\n                    \"containerType\": \"20R0\",\r\n                    \"containerNumber\": \"IPXU2148384\"\r\n                }\r\n            ],\r\n            \"manufacture\": \"Godi Cheese With Vegetable Oil\",\r\n            \"shippingMark\": \"Oranges contained in two container\",\r\n            \"modelVehicles\": [],\r\n            \"insuranceLocal\": 135831.732,\r\n            \"packageOfVolM3\": 1,\r\n            \"deductionsLocal\": 0,\r\n            \"extFreightLocal\": 135831.732,\r\n            \"insuranceFxRate\": 67.91586582541548,\r\n            \"otherCostsLocal\": 0,\r\n            \"valuationMethod\": \"1\",\r\n            \"deductedQuantity\": null,\r\n            \"deductionsFxRate\": 0,\r\n            \"descriptionGoods\": \"-- Whales, dolphins and porpoises (mammals of the order Cetacea); manatees and dugongs (mammals of the order Sirenia); seals, sea lions and walruses (mammals of the suborder Pinnipedia)\",\r\n            \"extFreightFxRate\": 67.91586582541548,\r\n            \"insuranceForeign\": 2000,\r\n            \"lineCurrencyCode\": \"USD\",\r\n            \"lineExchangeRate\": 67.91586582541548,\r\n            \"netWeightUOMCode\": null,\r\n            \"otherCostsFxRate\": 0,\r\n            \"deductionsForeign\": 0,\r\n            \"extFreightForeign\": 2000,\r\n            \"otherCostsForeign\": 0,\r\n            \"grossWeightUOMCode\": \"KGM\",\r\n            \"governmentProcedure\": \"5100\",\r\n            \"linePackageTypeCode\": \"4A\",\r\n            \"statisticalQuantity\": 1018737.987,\r\n            \"statisticalUnitCode\": \"MND\",\r\n            \"valuationMethodCode\": \"1\",\r\n            \"supplierRelationCode\": \"135\",\r\n            \"valueForeignCurrency\": 15000,\r\n            \"insuranceCurrencyCode\": \"USD\",\r\n            \"deductionsCurrencyCode\": 0,\r\n            \"extFreightCurrencyCode\": \"USD\",\r\n            \"otherCostsCurrencyCode\": 0,\r\n            \"associatedGovtProcedure\": true,\r\n            \"valuationAdjustmentRate\": 1,\r\n            \"valuationAdjustmentValue\": 0,\r\n            \"commodityClassificationRef\": null,\r\n            \"commodityClassificationCode\": null,\r\n            \"valuationAdjustmentTypeCode\": null\r\n        }\r\n    ],\r\n    \"containers\": [\r\n        {\r\n            \"seals\": \"4000001, 4000002, 4000003, 4000004\",\r\n            \"containerType\": \"20R0\",\r\n            \"containerNumber\": \"MSCU2092276\"\r\n        },\r\n        {\r\n            \"seals\": \"5000001, 5000002, 5000003, 5000004\",\r\n            \"containerType\": \"20R0\",\r\n            \"containerNumber\": \"IPXU2148384\"\r\n        }\r\n    ],\r\n    \"attachments\": [],\r\n    \"totalNetWeight\": 0,\r\n    \"totalVehicles\": 0,\r\n    \"totalContainers\": 2,\r\n    \"facilities\": [\r\n        {\r\n            \"code\": \"{{TemporaryIM_facilityCode}}\",\r\n            \"name\": \"{{TemporaryIM_facilityName}}\"\r\n        }\r\n    ],\r\n    \"securityDetails\": \"100001764BGC24082024-TI\",\r\n    \"selfDeclared\": true,\r\n    \"agentId\": \"7d4e0dcb-0e3e-4fbb-87fb-acb555ae4edd\",\r\n    \"agentBlacklistedLatest\": false,\r\n    \"id\": \"{{IDReference_TemporaryIMdraft}}\",\r\n    \"reference\": {{Reference_TemporaryIMdraft}},\r\n    \"reasons\": [],\r\n    \"rejectReasons\": null,\r\n    \"cancelReasons\": null,\r\n    \"inquiries\": null,\r\n    \"errorReason\": null,\r\n    \"\": null,\r\n    \"parties\": [\r\n        {\r\n            \"name\": \"Godi Cheese With Vegetable Oil\",\r\n            \"type\": \"NOTIFY_PARTIES\",\r\n            \"address\": \"1001 Industry Rd, Suite AKenner, LA 70062\",\r\n            \"communication\": \"TE\",\r\n            \"communicationReference\": \"973172696\"\r\n        }\r\n    ],\r\n    \"remarks\": null,\r\n    \"packages\": [\r\n        {\r\n            \"total\": 1000,\r\n            \"packageType\": \"1A\"\r\n        }\r\n    ],\r\n    \"traderId\": \"7d4e0dcb-0e3e-4fbb-87fb-acb555ae4edd\",\r\n    \"consignor\": \"7258461309\",\r\n    \"check10000\": null,\r\n    \"expiryDate\": \"2025-02-24T09:37:01.134Z\",\r\n    \"totalLines\": 1,\r\n    \"arrivalDate\": \"2022-08-13T00:00:00.000Z\",\r\n    \"carrierCode\": \"44440001\",\r\n    \"incotermCode\": \"CFR\",\r\n    \"totalFreight\": 135831.732,\r\n    \"consignorName\": \"Avis\",\r\n    \"totalPackages\": 10000,\r\n    \"totalDocuments\": 0,\r\n    \"totalInsurance\": 135831.732,\r\n    \"ecvrOptionalFee\": false,\r\n    \"invoiceDocument\": [],\r\n    \"officeEntryCode\": \"SAJED\",\r\n    \"traderReference\": \"Direct Import\",\r\n    \"agentBlacklisted\": false,\r\n    \"consignorAddress\": \"Vietnam\",\r\n    \"consignorCountry\": \"AE\",\r\n    \"hlevyOptionalFee\": false,\r\n    \"loadingPlaceCode\": \"GHABK\",\r\n    \"officeExportCode\": \"SAJED\",\r\n    \"securityTypeCode\": \"BON\",\r\n    \"totalGrossWeight\": 10000,\r\n    \"typeMeansTavCode\": \"1\",\r\n    \"completionTempDec\": false,\r\n    \"countryExportCode\": \"IN\",\r\n    \"goodsLocationCode\": \"889911CCA\",\r\n    \"htt001OptionalFee\": false,\r\n    \"incotermPlaceCode\": \"SAJED\",\r\n    \"incotermPlaceName\": \"Jeddah\",\r\n    \"traderBlacklisted\": false,\r\n    \"additionalDocument\": [],\r\n    \"placeDischargeCode\": \"SAJED\",\r\n    \"previousDocumentNo\": null,\r\n    \"totalInvoiceAmount\": 15000,\r\n    \"transportDocuments\": [],\r\n    \"nationalMeansTavCode\": \"IN\",\r\n    \"previousDocumentDate\": null,\r\n    \"natureTransactionCode\": \"1\",\r\n    \"officeDeclarationCode\": \"GHABK\",\r\n    \"totalInsuranceForeign\": 2000,\r\n    \"consignorCommunication\": \"AH\",\r\n    \"freightApportQualifier\": \"VOL\",\r\n    \"identificationMeansTav\": \"SA578\",\r\n    \"totalExtFreightForeign\": 2000,\r\n    \"declarationCurrencyCode\": \"AFN\",\r\n    \"traderBlacklistedLatest\": false,\r\n    \"freightApportQualifierCode\": null,\r\n    \"consignorCommunicationReference\": \"67777\",\r\n    \"version\": 0,\r\n    \"type\": \"SUBMISSION\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://bv-core-dev.ttekglobal.com/api/gateway/v1/decman/forms/3/validations?",
							"protocol": "https",
							"host": [
								"bv-core-dev",
								"ttekglobal",
								"com"
							],
							"path": [
								"api",
								"gateway",
								"v1",
								"decman",
								"forms",
								"3",
								"validations"
							],
							"query": [
								{
									"key": "",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "SubmitDec_TemporaryIM",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();\r",
									"\r",
									"if(pm.response.to.have.status(200))\r",
									"{  \r",
									"    pm.execution.setNextRequest(\"SearchDecTemporaryIM\");\r",
									"    pm.environment.set(\"RegistrationReference_TemporaryIM\", data.data.registrationReference);\r",
									"     pm.globals.set(\"RegistrationReference\", data.data.registrationReference);\r",
									"    pm.environment.set(\"IDRegistrationReference_TemporaryIM\", data.data.request.applyTo);\r",
									"    const lineid = pm.variables.get(\"IDReference_LineTemporaryIMedraft\");\r",
									"    if(data.data.lines && data.data.lines.length > 0 && data.data.lines[0].id === lineid)\r",
									"    {\r",
									"        pm.environment.set(\"TemporaryIM_referenceLine\", data.data.lines[0].reference);\r",
									"    }\r",
									"}\r",
									"else\r",
									"{\r",
									"     pm.execution.setNextRequest(null);\r",
									"}\r",
									"pm.test(\"Status is SUBMITTED\", function () {\r",
									"    pm.expect(data.data.request.status).to.include(\"SUBMITTED\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Check the declaration after submitting it successfully.\", function () {\r",
									"    pm.expect(data.data.registrationReference).to.include(pm.variables.get(\"RegistrationReference_TemporaryIM\"));\r",
									"    if(data.data.lines && data.data.lines.length > 0){\r",
									"        pm.expect(data.data.lines[0].id).to.include(pm.variables.get(\"IDReference_LineTemporaryIMedraft\"));\r",
									"        pm.expect(data.data.lines[0].commodityClassification).to.include(pm.variables.get(\"TemporaryIM_commodityClassification\"));\r",
									"        pm.expect(data.data.lines[0].governmentProcedure).to.include(pm.variables.get(\"TemporaryIM_governmentProcedure\"));\r",
									"        pm.expect(data.data.lines[0].numberPackages).to.equal(pm.variables.get(\"TemporaryIM_numberPackages\")); \r",
									"        pm.expect(data.data.lines[0].grossWeight).to.equale(pm.variables.get(\"TemporaryIM_grossWeight\"));\r",
									"        pm.expect(data.data.lines[0].netWeight).to.equal(pm.variables.get(\"TemporaryIM_netWeight\"));  \r",
									"        pm.expect(data.data.lines[0].supplementaryQuantity).to.equal(pm.variables.get(\"TemporaryIM_supplementaryQuantity\"));\r",
									"        pm.expect(data.data.lines[0].permitReferences[0]).to.include(pm.variables.get(\"TemporaryIM_permitReferences\"));\r",
									"    }\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const evn = pm.variables.get(\"evn\");\r",
									"const realms = pm.variables.get(\"realms\");\r",
									"pm.sendRequest({\r",
									"      url: `${evn}/apps/keycloak/realms/${realms}/protocol/openid-connect/token`,\r",
									"      method: 'POST',\r",
									"       header: {\r",
									"    'Content-Type': 'application/x-www-form-urlencoded',\r",
									"  },\r",
									"      body: {\r",
									"          mode: 'urlencoded',\r",
									"          urlencoded: [\r",
									"            {key: \"grant_type\", value: \"password\"},\r",
									"            {key: \"client_id\", value: \"BV_SWAGGER_UI\"},\r",
									"            {key: \"username\", value: \"atlas.officer@yopmail.com\"},\r",
									"            {key: \"password\", value: \"@Ttek1234\"},\r",
									"        ]\r",
									"      }\r",
									"  }, \r",
									"  function (err, response) {\r",
									"    console.log(\"token\",response.json().access_token);\r",
									"        pm.environment.set(\"tokenIMEX\", response.json().access_token);\r",
									"  });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenIMEX}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{evn}}/api/gateway/v1/decman/requests/{{IDReference_TemporaryIMdraft}}/submit",
							"host": [
								"{{evn}}"
							],
							"path": [
								"api",
								"gateway",
								"v1",
								"decman",
								"requests",
								"{{IDReference_TemporaryIMdraft}}",
								"submit"
							]
						}
					},
					"response": []
				},
				{
					"name": "SearchDecTemporaryIM_1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();\r",
									"\r",
									"if(pm.response.to.have.status(200))\r",
									"{\r",
									"pm.execution.setNextRequest(\"SearchinvoidceDec\");\r",
									"}\r",
									"else\r",
									"{\r",
									"     pm.execution.setNextRequest(null);\r",
									"}\r",
									"pm.test(\"Response success is true\", function () {\r",
									"   pm.expect(data.success).to.be.true;\r",
									"});\r",
									" pm.test(\"Compare data after searching based on the Declaration document.\", function () {\r",
									"\r",
									"     pm.expect(data.data.content[0].reference).to.include(pm.variables.get(\"RegistrationReference_TemporaryIM\"));\r",
									"     pm.environment.set(\"ReferenceDecTemporary_1\", data.data.content[0].reference);\r",
									"     \r",
									"\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const evn = pm.variables.get(\"evn\");\r",
									"const realms = pm.variables.get(\"realms\");\r",
									"pm.sendRequest({\r",
									"      url: `${evn}/apps/keycloak/realms/${realms}/protocol/openid-connect/token`,\r",
									"      method: 'POST',\r",
									"       header: {\r",
									"    'Content-Type': 'application/x-www-form-urlencoded',\r",
									"  },\r",
									"      body: {\r",
									"          mode: 'urlencoded',\r",
									"          urlencoded: [\r",
									"            {key: \"grant_type\", value: \"password\"},\r",
									"            {key: \"client_id\", value: \"BV_SWAGGER_UI\"},\r",
									"            {key: \"username\", value: \"atlas.officer@yopmail.com\"},\r",
									"            {key: \"password\", value: \"@Ttek1234\"},\r",
									"        ]\r",
									"      }\r",
									"  }, \r",
									"  function (err, response) {\r",
									"    console.log(\"token\",response.json().access_token);\r",
									"        pm.environment.set(\"tokenIMEX\", response.json().access_token);\r",
									"  });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenIMEX}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{evn}}/api/gateway/v1/decman/declarations?page=0&size=10&reference={{RegistrationReference_TemporaryIM}}",
							"host": [
								"{{evn}}"
							],
							"path": [
								"api",
								"gateway",
								"v1",
								"decman",
								"declarations"
							],
							"query": [
								{
									"key": "page",
									"value": "0"
								},
								{
									"key": "size",
									"value": "10"
								},
								{
									"key": "reference",
									"value": "{{RegistrationReference_TemporaryIM}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "SearchDecTemporaryIM_2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();\r",
									"\r",
									"if(pm.response.to.have.status(200))\r",
									"{\r",
									"pm.execution.setNextRequest(\"SearchinvoidceDec\");\r",
									"}\r",
									"else\r",
									"{\r",
									"     pm.execution.setNextRequest(null);\r",
									"}\r",
									"pm.test(\"Response success is true\", function () {\r",
									"   pm.expect(data.success).to.be.true;\r",
									"});\r",
									" pm.test(\"Compare data after searching based on the Declaration document.\", function () {\r",
									"\r",
									"     pm.expect(data.data.content[0].reference).to.include(pm.variables.get(\"RegistrationReference_TemporaryIM\"));\r",
									"     pm.environment.set(\"ReferenceDecTemporary_2\", data.data.content[0].reference);\r",
									"     \r",
									"\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const evn = pm.variables.get(\"evn\");\r",
									"const realms = pm.variables.get(\"realms\");\r",
									"pm.sendRequest({\r",
									"      url: `${evn}/apps/keycloak/realms/${realms}/protocol/openid-connect/token`,\r",
									"      method: 'POST',\r",
									"       header: {\r",
									"    'Content-Type': 'application/x-www-form-urlencoded',\r",
									"  },\r",
									"      body: {\r",
									"          mode: 'urlencoded',\r",
									"          urlencoded: [\r",
									"            {key: \"grant_type\", value: \"password\"},\r",
									"            {key: \"client_id\", value: \"BV_SWAGGER_UI\"},\r",
									"            {key: \"username\", value: \"atlas.officer@yopmail.com\"},\r",
									"            {key: \"password\", value: \"@Ttek1234\"},\r",
									"        ]\r",
									"      }\r",
									"  }, \r",
									"  function (err, response) {\r",
									"    console.log(\"token\",response.json().access_token);\r",
									"        pm.environment.set(\"tokenIMEX\", response.json().access_token);\r",
									"  });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenIMEX}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{evn}}/api/gateway/v1/decman/declarations?page=0&size=10&reference={{RegistrationReference_TemporaryIM}}",
							"host": [
								"{{evn}}"
							],
							"path": [
								"api",
								"gateway",
								"v1",
								"decman",
								"declarations"
							],
							"query": [
								{
									"key": "page",
									"value": "0"
								},
								{
									"key": "size",
									"value": "10"
								},
								{
									"key": "reference",
									"value": "{{RegistrationReference_TemporaryIM}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "SearchinvoidceDec",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var dec = pm.response.json();\r",
									"\r",
									"if (pm.response.to.have.status(200)) {\r",
									"    pm.environment.set(\"InvoiceDec\", dec.data.content[0].id);\r",
									"    let status = dec.data.content[0].status;\r",
									"    console.log(status)\r",
									"    if (status === \"CREATED\") {\r",
									"    pm.execution.setNextRequest(\"Payment_DecTemporaryIM\");\r",
									"    }\r",
									"    else\r",
									"    {\r",
									"        pm.execution.setNextRequest(null)\r",
									"    }\r",
									"}\r",
									"\r",
									"pm.test(\"Check RegistrationReference_TemporaryIM\", function () {\r",
									"    pm.expect(dec.data.content[0].referenceDocument).to.include(pm.variables.get(\"RegistrationReference_TemporaryIM\"));\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.expect(dec.data.content[0].status).to.eql(\"CREATED\"); // Updated condition for 'CREATED' status\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const evn = pm.variables.get(\"evn\");\r",
									"const realms = pm.variables.get(\"realms\");\r",
									"pm.sendRequest({\r",
									"      url: `${evn}/apps/keycloak/realms/${realms}/protocol/openid-connect/token`,\r",
									"      method: 'POST',\r",
									"       header: {\r",
									"    'Content-Type': 'application/x-www-form-urlencoded',\r",
									"  },\r",
									"      body: {\r",
									"          mode: 'urlencoded',\r",
									"          urlencoded: [\r",
									"            {key: \"grant_type\", value: \"password\"},\r",
									"            {key: \"client_id\", value: \"BV_SWAGGER_UI\"},\r",
									"            {key: \"username\", value: \"atlas.cashier@yopmail.com\"},\r",
									"            {key: \"password\", value: \"@Ttek1234\"},\r",
									"        ]\r",
									"      }\r",
									"  }, \r",
									"  function (err, response) {\r",
									"    console.log(\"tokencashierCompany\",response.json().access_token);\r",
									"        pm.environment.set(\"tokencashierCompany\", response.json().access_token);\r",
									"  });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokencashierCompany}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{evn}}/api/gateway/v1/revman/invoices?&page=0&size=10&referenceDocument={{RegistrationReference_TemporaryIM}}",
							"host": [
								"{{evn}}"
							],
							"path": [
								"api",
								"gateway",
								"v1",
								"revman",
								"invoices"
							],
							"query": [
								{
									"key": null,
									"value": null
								},
								{
									"key": "page",
									"value": "0"
								},
								{
									"key": "size",
									"value": "10"
								},
								{
									"key": "referenceDocument",
									"value": "{{RegistrationReference_TemporaryIM}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Payment_DecTemporaryIM",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data;\r",
									"dataDec = pm.response.json();\r",
									"if(pm.response.to.have.status(200))\r",
									"{\r",
									"   pm.execution.setNextRequest(\"Releasing_DecTemporary\");\r",
									"   \r",
									"}\r",
									"else\r",
									"{\r",
									"    pm.execution.setNextRequest(null)\r",
									"}\r",
									" pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									" pm.test(\"Payment success\", function () {\r",
									"   pm.expect(dataDec.success).to.eql(true);\r",
									" })"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const evn = pm.variables.get(\"evn\");\r",
									"const realms = pm.variables.get(\"realms\");\r",
									"pm.sendRequest({\r",
									"      url: `${evn}/apps/keycloak/realms/${realms}/protocol/openid-connect/token`,\r",
									"      method: 'POST',\r",
									"       header: {\r",
									"    'Content-Type': 'application/x-www-form-urlencoded',\r",
									"  },\r",
									"      body: {\r",
									"          mode: 'urlencoded',\r",
									"          urlencoded: [\r",
									"            {key: \"grant_type\", value: \"password\"},\r",
									"            {key: \"client_id\", value: \"BV_SWAGGER_UI\"},\r",
									"            {key: \"username\", value: \"atlas.cashier@yopmail.com\"},\r",
									"            {key: \"password\", value: \"@Ttek1234\"},\r",
									"        ]\r",
									"      }\r",
									"  }, \r",
									"  function (err, response) {\r",
									"    console.log(\"tokencashierCompany\",response.json().access_token);\r",
									"        pm.environment.set(\"tokencashierCompany\", response.json().access_token);\r",
									"  });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokencashierCompany}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"paymentMethod\": \"2\",\r\n    \"bankGuarantorCode\": null,\r\n    \"bankAccountNo\": \"\",\r\n    \"receiptReference\": \"\",\r\n    \"notes\": \"6666\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{evn}}/api/gateway/v1/revman/invoices/{{InvoiceDec}}/payments/requests",
							"host": [
								"{{evn}}"
							],
							"path": [
								"api",
								"gateway",
								"v1",
								"revman",
								"invoices",
								"{{InvoiceDec}}",
								"payments",
								"requests"
							]
						}
					},
					"response": []
				},
				{
					"name": "Releasing_DecTemporary",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var dataDec = pm.response.json();\r",
									"if(dataDec.success == true)\r",
									"{\r",
									"  pm.execution.setNextRequest(\"Release_DecTemporary\");\r",
									"   \r",
									"}\r",
									"else\r",
									"{\r",
									"    pm.execution.setNextRequest(null)\r",
									"}\r",
									" pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									" pm.test(\"Releasing success\", function () {\r",
									"   pm.expect(dataDec.success).to.eql(true);\r",
									" })"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const evn = pm.variables.get(\"evn\");\r",
									"const realms = pm.variables.get(\"realms\");\r",
									"pm.sendRequest({\r",
									"      url: `${evn}/apps/keycloak/realms/${realms}/protocol/openid-connect/token`,\r",
									"      method: 'POST',\r",
									"       header: {\r",
									"    'Content-Type': 'application/x-www-form-urlencoded',\r",
									"  },\r",
									"      body: {\r",
									"          mode: 'urlencoded',\r",
									"          urlencoded: [\r",
									"            {key: \"grant_type\", value: \"password\"},\r",
									"            {key: \"client_id\", value: \"BV_SWAGGER_UI\"},\r",
									"            {key: \"username\", value: \"customs.officer@yopmail.com\"},\r",
									"            {key: \"password\", value: \"@Ttek1234\"},\r",
									"        ]\r",
									"      }\r",
									"  }, \r",
									"  function (err, response) {\r",
									"    console.log(\"tokencustomofficer\",response.json().access_token);\r",
									"        pm.environment.set(\"tokencustomofficer\", response.json().access_token);\r",
									"  });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokencustomofficer}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{evn}}/api/gateway/v1/decman/declarations/{{IDRegistrationReference_TemporaryIM}}/releasing",
							"host": [
								"{{evn}}"
							],
							"path": [
								"api",
								"gateway",
								"v1",
								"decman",
								"declarations",
								"{{IDRegistrationReference_TemporaryIM}}",
								"releasing"
							]
						}
					},
					"response": []
				},
				{
					"name": "Release_DecTemporary",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var dataDec = pm.response.json();\r",
									"const a = pm.variables.get(\"RegistrationReference_TemporaryIM\");\r",
									"const b =pm.globals.get(\"RegistrationReference\");\r",
									"if(dataDec.success == true)\r",
									"{\r",
									"  pm.execution.setNextRequest(\"ReEXFull\");\r",
									"   \r",
									"}\r",
									"else\r",
									"{\r",
									"     pm.execution.setNextRequest(null)\r",
									"}\r",
									" pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									" pm.test(\"Release success\", function () {\r",
									"   pm.expect(dataDec.success).to.eql(true);\r",
									" })\r",
									"  pm.test(\"Check the declaration after release success.\", function () {\r",
									"\r",
									"     //pm.expect(dataDec.data.declarationReference).to.include(a);\r",
									"    //   pm.expect(dataDec.data.declarationReference).to.include(b);\r",
									"     pm.expect(dataDec.data.releasedReference).to.is.not.null;\r",
									"\r",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const a = pm.variables.get(\"RegistrationReference_TemporaryIM\");\r",
									"const evn = pm.variables.get(\"evn\");\r",
									"const realms = pm.variables.get(\"realms\");\r",
									"pm.sendRequest({\r",
									"      url: `${evn}/apps/keycloak/realms/${realms}/protocol/openid-connect/token`,\r",
									"      method: 'POST',\r",
									"       header: {\r",
									"    'Content-Type': 'application/x-www-form-urlencoded',\r",
									"  },\r",
									"      body: {\r",
									"          mode: 'urlencoded',\r",
									"          urlencoded: [\r",
									"            {key: \"grant_type\", value: \"password\"},\r",
									"            {key: \"client_id\", value: \"BV_SWAGGER_UI\"},\r",
									"            {key: \"username\", value: \"customs.officer@yopmail.com\"},\r",
									"            {key: \"password\", value: \"@Ttek1234\"},\r",
									"        ]\r",
									"      }\r",
									"  }, \r",
									"  function (err, response) {\r",
									"    console.log(\"tokencustomofficer\",response.json().access_token);\r",
									"        pm.environment.set(\"tokencustomofficer\", response.json().access_token);\r",
									"  });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokencustomofficer}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{evn}}/api/gateway/v1/decman/declarations/{{IDRegistrationReference_TemporaryIM}}/release-orders",
							"host": [
								"{{evn}}"
							],
							"path": [
								"api",
								"gateway",
								"v1",
								"decman",
								"declarations",
								"{{IDRegistrationReference_TemporaryIM}}",
								"release-orders"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "TemporaryIM2line",
			"item": [
				{
					"name": "CreateDec_TemporaryIM2line_U001",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();\r",
									"if(pm.response.to.have.status(200))\r",
									"{ \r",
									"    pm.execution.setNextRequest(\"ValidationDec_TemporaryIMOneline\");\r",
									"    pm.environment.set(\"IDReference_TemporaryIMdraft\", data.data.id);\r",
									"    pm.environment.set(\"Reference_TemporaryIMdraft\", data.data.reference);\r",
									"    pm.environment.set(\"Reference_LineTemporaryIMdraft\", data.data.lines[0].hash);\r",
									"    pm.environment.set(\"IDReference_LineTemporaryIMedraft\", data.data.lines[0].id);\r",
									"    pm.environment.set(\"TemporaryIM_commodityClassification\", data.data.lines[0].commodityClassification);\r",
									"    pm.environment.set(\"TemporaryIM_governmentProcedure\", data.data.lines[0].governmentProcedure);\r",
									"    pm.environment.set(\"TemporaryIM_numberPackages\", data.data.lines[0].numberPackages); \r",
									"    pm.environment.set(\"TemporaryIM_grossWeight\", data.data.lines[0].grossWeight);\r",
									"    pm.environment.set(\"TemporaryIM_netWeight\", data.data.lines[0].netWeight);  \r",
									"    pm.environment.set(\"TemporaryIM_supplementaryQuantity\", data.data.lines[0].supplementaryQuantity);\r",
									"    pm.environment.set(\"TemporaryIM_permitReferences\", data.data.lines[0].permitReferences[0]); \r",
									"    pm.environment.set(\"TemporaryIM_facilityCode1\", data.data.facilities[0].code);\r",
									"    pm.environment.set(\"TemporaryIM_facilityName1\", data.data.facilities[0].name); \r",
									"}\r",
									"else\r",
									"{\r",
									"     pm.execution.setNextRequest(null);\r",
									"}\r",
									"pm.test(\"Status is DRAFT\", function () {\r",
									"    pm.expect(data.data.status).to.include(\"DRAFT\");\r",
									"});\r",
									"pm.test(\"line array has a length of 1\", function () {\r",
									"    pm.expect(data.data.lines).to.have.lengthOf(1);\r",
									"});\r",
									"\r",
									"pm.test(\"Response status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const evn = pm.variables.get(\"evn\");\r",
									"const realms = pm.variables.get(\"realms\");\r",
									"pm.sendRequest({\r",
									"      url: `${evn}/apps/keycloak/realms/${realms}/protocol/openid-connect/token`,\r",
									"      method: 'POST',\r",
									"       header: {\r",
									"    'Content-Type': 'application/x-www-form-urlencoded',\r",
									"  },\r",
									"      body: {\r",
									"          mode: 'urlencoded',\r",
									"          urlencoded: [\r",
									"            {key: \"grant_type\", value: \"password\"},\r",
									"            {key: \"client_id\", value: \"BV_SWAGGER_UI\"},\r",
									"            {key: \"username\", value: \"atlas.officer@yopmail.com\"},\r",
									"            {key: \"password\", value: \"@Ttek1234\"},\r",
									"        ]\r",
									"      }\r",
									"  }, \r",
									"  function (err, response) {\r",
									"    console.log(\"token\",response.json().access_token);\r",
									"        pm.environment.set(\"tokenIMEX\", response.json().access_token);\r",
									"  });\r",
									"  pm.environment.set(\"LPCO\", \"2100003083\");\r",
									"  pm.environment.set(\"guarantee\",\"100001764BGC24082024-TI\");\r",
									" pm.environment.set(\"facilityCode\",\"DU001\");\r",
									"  pm.environment.set(\"facilityName\", \"U001\");\r",
									"//  pm.environment.set(\"LPCO\", \"2100001392\");\r",
									"//   pm.environment.set(\"guarantee\",\"100001498BGC23072024-TI\");\r",
									"//  pm.environment.set(\"facilityCode\",\"WHO001\");\r",
									"//   pm.environment.set(\"facilityName\", \"Warahouse001\");\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenIMEX}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"type\": \"SUBMISSION\",\r\n    \"data\": {\r\n        \"status\": \"DRAFT\",\r\n        \"regimeCode\": \"2\",\r\n        \"agentName\": \"Atlas World Logistics\",\r\n        \"agentTaxId\": \"90184561\",\r\n        \"agentBizFunction\": \"IM\",\r\n        \"agentCommunication\": \"EM\",\r\n        \"agentCommunicationRef\": \"atlas@yopmail.com\",\r\n        \"agentAddress\": {\r\n            \"id\": \"f6968f7d-5643-4f47-a1f7-e1d9f1ca1368\",\r\n            \"street\": \"Jeddah 7777\",\r\n            \"city\": \"Jeddah\",\r\n            \"poBoxNumber\": \"10101010\",\r\n            \"countryCode\": \"SA\",\r\n            \"address1\": \"111111\",\r\n            \"address2\": \"111111\",\r\n            \"address3\": \"11111\",\r\n            \"country\": \"SA\"\r\n        },\r\n        \"agentCountry\": \"SA\",\r\n        \"carrierName\": \"44440001 - Da Hua\",\r\n        \"traderName\": \"Atlas World Logistics\",\r\n        \"traderTaxId\": \"90184561\",\r\n        \"traderBizFunction\": \"IM\",\r\n        \"traderCommunication\": \"EM\",\r\n        \"traderCommunicationRef\": \"atlas@yopmail.com\",\r\n        \"traderAddress\": {\r\n            \"id\": \"f6968f7d-5643-4f47-a1f7-e1d9f1ca1368\",\r\n            \"street\": \"Jeddah 7777\",\r\n            \"city\": \"Jeddah\",\r\n            \"poBoxNumber\": \"10101010\",\r\n            \"countryCode\": \"SA\",\r\n            \"address1\": \"111111\",\r\n            \"address2\": \"111111\",\r\n            \"address3\": \"11111\"\r\n        },\r\n        \"traderCountry\": \"SA\",\r\n        \"procedureCode\": \"5\",\r\n        \"transportModeCode\": \"1\",\r\n        \"lines\": [\r\n            {\r\n                \"id\": \"fe2855fd-a7f2-41b7-b32a-163ddbf361b0\",\r\n                \"commodityClassification\": \"01061200\",\r\n                \"commercialGoodsDesc\": \"Other\",\r\n                \"supplementaryQuantity\": 100,\r\n                \"permitReferences\": [\r\n                    \"{{LPCO}}\"\r\n                ],\r\n                \"goodsStatusCode\": \"1\",\r\n                \"countryOriginCode\": \"AD\",\r\n                \"regionOriginCode\": \"\",\r\n                \"declaredValue\": 1018737.987,\r\n                \"dutyAssessmentValue\": 1018737.987,\r\n                \"freightCharge\": 135831.732,\r\n                \"insuranceCharge\": 135831.732,\r\n                \"tariffPreferenceClaimedCode\": null,\r\n                \"govtProcedureClaimedCode\": null,\r\n                \"containerReferences\": [\r\n                    \"MSCU2092276\",\r\n                    \"IPXU2148384\"\r\n                ],\r\n                \"numberPackages\": 10000,\r\n                \"grossWeight\": 10000,\r\n                \"netWeight\": null,\r\n                \"vehicles\": [],\r\n                \"containers\": [\r\n                    {\r\n                        \"seals\": \"4000001, 4000002, 4000003, 4000004\",\r\n                        \"containerType\": \"20R0\",\r\n                        \"containerNumber\": \"MSCU2092276\"\r\n                    },\r\n                    {\r\n                        \"seals\": \"5000001, 5000002, 5000003, 5000004\",\r\n                        \"containerType\": \"20R0\",\r\n                        \"containerNumber\": \"IPXU2148384\"\r\n                    }\r\n                ],\r\n                \"manufacture\": \"Godi Cheese With Vegetable Oil\",\r\n                \"shippingMark\": \"Oranges contained in two container\",\r\n                \"modelVehicles\": [],\r\n                \"insuranceLocal\": 135831.732,\r\n                \"packageOfVolM3\": 1,\r\n                \"deductionsLocal\": 0,\r\n                \"extFreightLocal\": 135831.732,\r\n                \"insuranceFxRate\": 67.91586582541548,\r\n                \"otherCostsLocal\": 0,\r\n                \"valuationMethod\": \"1\",\r\n                \"deductedQuantity\": null,\r\n                \"deductionsFxRate\": 0,\r\n                \"descriptionGoods\": \"-- Whales, dolphins and porpoises (mammals of the order Cetacea); manatees and dugongs (mammals of the order Sirenia); seals, sea lions and walruses (mammals of the suborder Pinnipedia)\",\r\n                \"extFreightFxRate\": 67.91586582541548,\r\n                \"insuranceForeign\": 2000,\r\n                \"lineCurrencyCode\": \"USD\",\r\n                \"lineExchangeRate\": 67.91586582541548,\r\n                \"netWeightUOMCode\": null,\r\n                \"otherCostsFxRate\": 0,\r\n                \"deductionsForeign\": 0,\r\n                \"extFreightForeign\": 2000,\r\n                \"otherCostsForeign\": 0,\r\n                \"grossWeightUOMCode\": \"KGM\",\r\n                \"governmentProcedure\": \"5100\",\r\n                \"linePackageTypeCode\": \"4A\",\r\n                \"statisticalQuantity\": 1018737.987,\r\n                \"statisticalUnitCode\": \"MND\",\r\n                \"valuationMethodCode\": \"1\",\r\n                \"supplierRelationCode\": \"135\",\r\n                \"valueForeignCurrency\": 15000,\r\n                \"insuranceCurrencyCode\": \"USD\",\r\n                \"deductionsCurrencyCode\": 0,\r\n                \"extFreightCurrencyCode\": \"USD\",\r\n                \"otherCostsCurrencyCode\": 0,\r\n                \"associatedGovtProcedure\": true,\r\n                \"valuationAdjustmentRate\": 1,\r\n                \"valuationAdjustmentValue\": 0,\r\n                \"commodityClassificationRef\": null,\r\n                \"commodityClassificationCode\": null,\r\n                \"valuationAdjustmentTypeCode\": null\r\n            }\r\n        ],\r\n        \"containers\": [\r\n            {\r\n                \"seals\": \"4000001, 4000002, 4000003, 4000004\",\r\n                \"containerType\": \"20R0\",\r\n                \"containerNumber\": \"MSCU2092276\"\r\n            },\r\n            {\r\n                \"seals\": \"5000001, 5000002, 5000003, 5000004\",\r\n                \"containerType\": \"20R0\",\r\n                \"containerNumber\": \"IPXU2148384\"\r\n            }\r\n        ],\r\n        \"attachments\": [],\r\n        \"totalNetWeight\": 0,\r\n        \"totalVehicles\": 0,\r\n        \"totalContainers\": 2,\r\n        \"facilities\": [\r\n            {\r\n                \"code\": \"{{facilityCode}}\",\r\n                \"name\": \"{{facilityName}}\"\r\n            }\r\n        ],\r\n        \"securityDetails\": \"{{guarantee}}\",\r\n        \"selfDeclared\": true,\r\n        \"agentId\": \"7d4e0dcb-0e3e-4fbb-87fb-acb555ae4edd\",\r\n        \"agentBlacklistedLatest\": false,\r\n        \"id\": \"94eef91f-873b-4c33-9822-d2feff7ebee9\",\r\n        \"reference\": null,\r\n        \"reasons\": [],\r\n        \"rejectReasons\": null,\r\n        \"cancelReasons\": null,\r\n        \"inquiries\": null,\r\n        \"errorReason\": null,\r\n        \"\": null,\r\n        \"parties\": [\r\n            {\r\n                \"name\": \"Godi Cheese With Vegetable Oil\",\r\n                \"type\": \"NOTIFY_PARTIES\",\r\n                \"address\": \"1001 Industry Rd, Suite AKenner, LA 70062\",\r\n                \"communication\": \"TE\",\r\n                \"communicationReference\": \"973172696\"\r\n            }\r\n        ],\r\n        \"remarks\": null,\r\n        \"packages\": [\r\n            {\r\n                \"total\": 1000,\r\n                \"packageType\": \"1A\"\r\n            }\r\n        ],\r\n        \"traderId\": \"7d4e0dcb-0e3e-4fbb-87fb-acb555ae4edd\",\r\n        \"consignor\": \"7258461309\",\r\n        \"check10000\": null,\r\n        \"expiryDate\": \"2025-02-24T09:37:01.134Z\",\r\n        \"totalLines\": 1,\r\n        \"arrivalDate\": \"2022-08-13T00:00:00.000Z\",\r\n        \"carrierCode\": \"44440001\",\r\n        \"incotermCode\": \"CFR\",\r\n        \"totalFreight\": 135831.732,\r\n        \"consignorName\": \"Avis\",\r\n        \"totalPackages\": 10000,\r\n        \"totalDocuments\": 0,\r\n        \"totalInsurance\": 135831.732,\r\n        \"ecvrOptionalFee\": false,\r\n        \"invoiceDocument\": [],\r\n        \"officeEntryCode\": \"SAJED\",\r\n        \"traderReference\": \"Direct Import\",\r\n        \"agentBlacklisted\": false,\r\n        \"consignorAddress\": \"Vietnam\",\r\n        \"consignorCountry\": \"AE\",\r\n        \"hlevyOptionalFee\": false,\r\n        \"loadingPlaceCode\": \"GHABK\",\r\n        \"officeExportCode\": \"SAJED\",\r\n        \"securityTypeCode\": \"BON\",\r\n        \"totalGrossWeight\": 10000,\r\n        \"typeMeansTavCode\": \"1\",\r\n        \"completionTempDec\": false,\r\n        \"countryExportCode\": \"IN\",\r\n        \"goodsLocationCode\": \"889911CCA\",\r\n        \"htt001OptionalFee\": false,\r\n        \"incotermPlaceCode\": \"SAJED\",\r\n        \"incotermPlaceName\": \"Jeddah\",\r\n        \"traderBlacklisted\": false,\r\n        \"additionalDocument\": [],\r\n        \"placeDischargeCode\": \"SAJED\",\r\n        \"previousDocumentNo\": null,\r\n        \"totalInvoiceAmount\": 15000,\r\n        \"transportDocuments\": [],\r\n        \"nationalMeansTavCode\": \"IN\",\r\n        \"previousDocumentDate\": null,\r\n        \"natureTransactionCode\": \"1\",\r\n        \"officeDeclarationCode\": \"GHABK\",\r\n        \"totalInsuranceForeign\": 2000,\r\n        \"consignorCommunication\": \"AH\",\r\n        \"freightApportQualifier\": \"VOL\",\r\n        \"identificationMeansTav\": \"SA578\",\r\n        \"totalExtFreightForeign\": 2000,\r\n        \"declarationCurrencyCode\": \"AFN\",\r\n        \"traderBlacklistedLatest\": false,\r\n        \"freightApportQualifierCode\": null,\r\n        \"consignorCommunicationReference\": \"67777\",\r\n        \"version\": 0\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{evn}}m/api/gateway/v1/decman/requests",
							"host": [
								"{{evn}}m"
							],
							"path": [
								"api",
								"gateway",
								"v1",
								"decman",
								"requests"
							]
						}
					},
					"response": []
				},
				{
					"name": "CreateDec_TemporaryIMOneline_U002",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();\r",
									"if(pm.response.to.have.status(200))\r",
									"{ \r",
									"    pm.execution.setNextRequest(\"ValidationDec_TemporaryIMOneline\");\r",
									"    pm.environment.set(\"IDReference_TemporaryIMdraft\", data.data.id);\r",
									"    pm.environment.set(\"Reference_TemporaryIMdraft\", data.data.reference);\r",
									"    pm.environment.set(\"Reference_LineTemporaryIMdraft\", data.data.lines[0].hash);\r",
									"    pm.environment.set(\"IDReference_LineTemporaryIMedraft\", data.data.lines[0].id);\r",
									"    pm.environment.set(\"TemporaryIM_commodityClassification\", data.data.lines[0].commodityClassification);\r",
									"    pm.environment.set(\"TemporaryIM_governmentProcedure\", data.data.lines[0].governmentProcedure);\r",
									"    pm.environment.set(\"TemporaryIM_numberPackages\", data.data.lines[0].numberPackages); \r",
									"    pm.environment.set(\"TemporaryIM_grossWeight\", data.data.lines[0].grossWeight);\r",
									"    pm.environment.set(\"TemporaryIM_netWeight\", data.data.lines[0].netWeight);  \r",
									"    pm.environment.set(\"TemporaryIM_supplementaryQuantity\", data.data.lines[0].supplementaryQuantity);\r",
									"    pm.environment.set(\"TemporaryIM_permitReferences\", data.data.lines[0].permitReferences[0]); \r",
									"    pm.environment.set(\"TemporaryIM_facilityCode2\", data.data.facilities[0].code);\r",
									"    pm.environment.set(\"TemporaryIM_facilityName2\", data.data.facilities[0].name); \r",
									"}\r",
									"else\r",
									"{\r",
									"     pm.execution.setNextRequest(null);\r",
									"}\r",
									"pm.test(\"Status is DRAFT\", function () {\r",
									"    pm.expect(data.data.status).to.include(\"DRAFT\");\r",
									"});\r",
									"pm.test(\"line array has a length of 1\", function () {\r",
									"    pm.expect(data.data.lines).to.have.lengthOf(1);\r",
									"});\r",
									"\r",
									"pm.test(\"Response status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const evn = pm.variables.get(\"evn\");\r",
									"const realms = pm.variables.get(\"realms\");\r",
									"pm.sendRequest({\r",
									"      url: `${evn}/apps/keycloak/realms/${realms}/protocol/openid-connect/token`,\r",
									"      method: 'POST',\r",
									"       header: {\r",
									"    'Content-Type': 'application/x-www-form-urlencoded',\r",
									"  },\r",
									"      body: {\r",
									"          mode: 'urlencoded',\r",
									"          urlencoded: [\r",
									"            {key: \"grant_type\", value: \"password\"},\r",
									"            {key: \"client_id\", value: \"BV_SWAGGER_UI\"},\r",
									"            {key: \"username\", value: \"atlas.officer@yopmail.com\"},\r",
									"            {key: \"password\", value: \"@Ttek1234\"},\r",
									"        ]\r",
									"      }\r",
									"  }, \r",
									"  function (err, response) {\r",
									"    console.log(\"token\",response.json().access_token);\r",
									"        pm.environment.set(\"tokenIMEX\", response.json().access_token);\r",
									"  });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenIMEX}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"type\": \"SUBMISSION\",\r\n    \"data\": {\r\n        \"status\": \"DRAFT\",\r\n        \"regimeCode\": \"2\",\r\n        \"agentName\": \"Atlas World Logistics\",\r\n        \"agentTaxId\": \"90184561\",\r\n        \"agentBizFunction\": \"IM\",\r\n        \"agentCommunication\": \"EM\",\r\n        \"agentCommunicationRef\": \"atlas@yopmail.com\",\r\n        \"agentAddress\": {\r\n            \"id\": \"f6968f7d-5643-4f47-a1f7-e1d9f1ca1368\",\r\n            \"street\": \"Jeddah 7777\",\r\n            \"city\": \"Jeddah\",\r\n            \"poBoxNumber\": \"10101010\",\r\n            \"countryCode\": \"SA\",\r\n            \"address1\": \"111111\",\r\n            \"address2\": \"111111\",\r\n            \"address3\": \"11111\",\r\n            \"country\": \"SA\"\r\n        },\r\n        \"agentCountry\": \"SA\",\r\n        \"carrierName\": \"44440001 - Da Hua\",\r\n        \"traderName\": \"Atlas World Logistics\",\r\n        \"traderTaxId\": \"90184561\",\r\n        \"traderBizFunction\": \"IM\",\r\n        \"traderCommunication\": \"EM\",\r\n        \"traderCommunicationRef\": \"atlas@yopmail.com\",\r\n        \"traderAddress\": {\r\n            \"id\": \"f6968f7d-5643-4f47-a1f7-e1d9f1ca1368\",\r\n            \"street\": \"Jeddah 7777\",\r\n            \"city\": \"Jeddah\",\r\n            \"poBoxNumber\": \"10101010\",\r\n            \"countryCode\": \"SA\",\r\n            \"address1\": \"111111\",\r\n            \"address2\": \"111111\",\r\n            \"address3\": \"11111\"\r\n        },\r\n        \"traderCountry\": \"SA\",\r\n        \"procedureCode\": \"5\",\r\n        \"transportModeCode\": \"1\",\r\n        \"lines\": [\r\n            {\r\n                \"id\": \"e91b0b55-c4a5-4805-b1cc-2068fb24d98a\",\r\n                \"commodityClassification\": \"01061200\",\r\n                \"commercialGoodsDesc\": \"Other\",\r\n                \"supplementaryQuantity\": 100,\r\n                \"permitReferences\": [\r\n                    \"2100003083\"\r\n                ],\r\n                \"goodsStatusCode\": \"1\",\r\n                \"countryOriginCode\": \"AD\",\r\n                \"regionOriginCode\": \"\",\r\n                \"declaredValue\": 1018737.987,\r\n                \"dutyAssessmentValue\": 1018737.987,\r\n                \"freightCharge\": 135831.732,\r\n                \"insuranceCharge\": 135831.732,\r\n                \"tariffPreferenceClaimedCode\": null,\r\n                \"govtProcedureClaimedCode\": null,\r\n                \"containerReferences\": [\r\n                    \"MSCU2092276\",\r\n                    \"IPXU2148384\"\r\n                ],\r\n                \"numberPackages\": 10000,\r\n                \"grossWeight\": 10000,\r\n                \"netWeight\": null,\r\n                \"vehicles\": [],\r\n                \"containers\": [\r\n                    {\r\n                        \"seals\": \"4000001, 4000002, 4000003, 4000004\",\r\n                        \"containerType\": \"20R0\",\r\n                        \"containerNumber\": \"MSCU2092276\"\r\n                    },\r\n                    {\r\n                        \"seals\": \"5000001, 5000002, 5000003, 5000004\",\r\n                        \"containerType\": \"20R0\",\r\n                        \"containerNumber\": \"IPXU2148384\"\r\n                    }\r\n                ],\r\n                \"manufacture\": \"Godi Cheese With Vegetable Oil\",\r\n                \"shippingMark\": \"Oranges contained in two container\",\r\n                \"modelVehicles\": [],\r\n                \"insuranceLocal\": 135831.732,\r\n                \"packageOfVolM3\": 1,\r\n                \"deductionsLocal\": 0,\r\n                \"extFreightLocal\": 135831.732,\r\n                \"insuranceFxRate\": 67.91586582541548,\r\n                \"otherCostsLocal\": 0,\r\n                \"valuationMethod\": \"1\",\r\n                \"deductedQuantity\": null,\r\n                \"deductionsFxRate\": 0,\r\n                \"descriptionGoods\": \"-- Whales, dolphins and porpoises (mammals of the order Cetacea); manatees and dugongs (mammals of the order Sirenia); seals, sea lions and walruses (mammals of the suborder Pinnipedia)\",\r\n                \"extFreightFxRate\": 67.91586582541548,\r\n                \"insuranceForeign\": 2000,\r\n                \"lineCurrencyCode\": \"USD\",\r\n                \"lineExchangeRate\": 67.91586582541548,\r\n                \"netWeightUOMCode\": null,\r\n                \"otherCostsFxRate\": 0,\r\n                \"deductionsForeign\": 0,\r\n                \"extFreightForeign\": 2000,\r\n                \"otherCostsForeign\": 0,\r\n                \"grossWeightUOMCode\": \"KGM\",\r\n                \"governmentProcedure\": \"5100\",\r\n                \"linePackageTypeCode\": \"4A\",\r\n                \"statisticalQuantity\": 1018737.987,\r\n                \"statisticalUnitCode\": \"MND\",\r\n                \"valuationMethodCode\": \"1\",\r\n                \"supplierRelationCode\": \"135\",\r\n                \"valueForeignCurrency\": 15000,\r\n                \"insuranceCurrencyCode\": \"USD\",\r\n                \"deductionsCurrencyCode\": 0,\r\n                \"extFreightCurrencyCode\": \"USD\",\r\n                \"otherCostsCurrencyCode\": 0,\r\n                \"associatedGovtProcedure\": true,\r\n                \"valuationAdjustmentRate\": 1,\r\n                \"valuationAdjustmentValue\": 0,\r\n                \"commodityClassificationRef\": null,\r\n                \"commodityClassificationCode\": null,\r\n                \"valuationAdjustmentTypeCode\": null\r\n            }\r\n        ],\r\n        \"containers\": [\r\n            {\r\n                \"seals\": \"4000001, 4000002, 4000003, 4000004\",\r\n                \"containerType\": \"20R0\",\r\n                \"containerNumber\": \"MSCU2092276\"\r\n            },\r\n            {\r\n                \"seals\": \"5000001, 5000002, 5000003, 5000004\",\r\n                \"containerType\": \"20R0\",\r\n                \"containerNumber\": \"IPXU2148384\"\r\n            }\r\n        ],\r\n        \"attachments\": [],\r\n        \"totalNetWeight\": 0,\r\n        \"totalVehicles\": 0,\r\n        \"totalContainers\": 2,\r\n        \"facilities\": [\r\n            {\r\n                \"code\": \"U002\",\r\n                \"name\": \"U002\"\r\n            }\r\n        ],\r\n        \"securityDetails\": \"100001764BGC24082024-TI\",\r\n        \"selfDeclared\": true,\r\n        \"agentId\": \"7d4e0dcb-0e3e-4fbb-87fb-acb555ae4edd\",\r\n        \"agentBlacklistedLatest\": false,\r\n        \"id\": \"7d0296ff-86f0-4059-9faa-ab3dc6bfba8c\",\r\n        \"reference\": null,\r\n        \"reasons\": [],\r\n        \"rejectReasons\": null,\r\n        \"cancelReasons\": null,\r\n        \"inquiries\": null,\r\n        \"errorReason\": null,\r\n        \"\": null,\r\n        \"parties\": [\r\n            {\r\n                \"name\": \"Godi Cheese With Vegetable Oil\",\r\n                \"type\": \"NOTIFY_PARTIES\",\r\n                \"address\": \"1001 Industry Rd, Suite AKenner, LA 70062\",\r\n                \"communication\": \"TE\",\r\n                \"communicationReference\": \"973172696\"\r\n            }\r\n        ],\r\n        \"remarks\": null,\r\n        \"packages\": [\r\n            {\r\n                \"total\": 1000,\r\n                \"packageType\": \"1A\"\r\n            }\r\n        ],\r\n        \"traderId\": \"7d4e0dcb-0e3e-4fbb-87fb-acb555ae4edd\",\r\n        \"consignor\": \"7258461309\",\r\n        \"check10000\": null,\r\n        \"expiryDate\": \"2025-02-24T09:37:01.134Z\",\r\n        \"totalLines\": 1,\r\n        \"arrivalDate\": \"2022-08-13T00:00:00.000Z\",\r\n        \"carrierCode\": \"44440001\",\r\n        \"incotermCode\": \"CFR\",\r\n        \"totalFreight\": 135831.732,\r\n        \"consignorName\": \"Avis\",\r\n        \"totalPackages\": 10000,\r\n        \"totalDocuments\": 0,\r\n        \"totalInsurance\": 135831.732,\r\n        \"ecvrOptionalFee\": false,\r\n        \"invoiceDocument\": [],\r\n        \"officeEntryCode\": \"SAJED\",\r\n        \"traderReference\": \"Direct Import\",\r\n        \"agentBlacklisted\": false,\r\n        \"consignorAddress\": \"Vietnam\",\r\n        \"consignorCountry\": \"AE\",\r\n        \"hlevyOptionalFee\": false,\r\n        \"loadingPlaceCode\": \"GHABK\",\r\n        \"officeExportCode\": \"SAJED\",\r\n        \"securityTypeCode\": \"BON\",\r\n        \"totalGrossWeight\": 10000,\r\n        \"typeMeansTavCode\": \"1\",\r\n        \"completionTempDec\": false,\r\n        \"countryExportCode\": \"IN\",\r\n        \"goodsLocationCode\": \"889911CCA\",\r\n        \"htt001OptionalFee\": false,\r\n        \"incotermPlaceCode\": \"SAJED\",\r\n        \"incotermPlaceName\": \"Jeddah\",\r\n        \"traderBlacklisted\": false,\r\n        \"additionalDocument\": [],\r\n        \"placeDischargeCode\": \"SAJED\",\r\n        \"previousDocumentNo\": null,\r\n        \"totalInvoiceAmount\": 15000,\r\n        \"transportDocuments\": [],\r\n        \"nationalMeansTavCode\": \"IN\",\r\n        \"previousDocumentDate\": null,\r\n        \"natureTransactionCode\": \"1\",\r\n        \"officeDeclarationCode\": \"GHABK\",\r\n        \"totalInsuranceForeign\": 2000,\r\n        \"consignorCommunication\": \"AH\",\r\n        \"freightApportQualifier\": \"VOL\",\r\n        \"identificationMeansTav\": \"SA578\",\r\n        \"totalExtFreightForeign\": 2000,\r\n        \"declarationCurrencyCode\": \"AFN\",\r\n        \"traderBlacklistedLatest\": false,\r\n        \"freightApportQualifierCode\": null,\r\n        \"consignorCommunicationReference\": \"67777\",\r\n        \"version\": 0\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{evn}}/api/gateway/v1/decman/requests",
							"host": [
								"{{evn}}"
							],
							"path": [
								"api",
								"gateway",
								"v1",
								"decman",
								"requests"
							]
						}
					},
					"response": []
				},
				{
					"name": "ValidationDec_TemporaryIMOneline",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data;\r",
									"data = pm.response.json();\r",
									"if(pm.response.to.have.status(200))\r",
									"{\r",
									"   pm.environment.set(\"errorCount\", data.data.errorCount);  \r",
									"}\r",
									"if (data.data.errorCount == 0)\r",
									"{\r",
									"     pm.execution.setNextRequest(\"SubmitDecTemporaryIM\");\r",
									"      pm.test(\"Check if the error count is 0\", function () {\r",
									"    pm.expect(pm.environment.get(\"errorCount\")).to.equal(0);\r",
									"});\r",
									"   \r",
									"}\r",
									"else\r",
									"{\r",
									"    pm.execution.setNextRequest(null)\r",
									"      pm.test(\"Check if the error count is more than 0\", function () {\r",
									"    pm.expect(data.data.errorCount).to.be.greaterThan(0);\r",
									"});\r",
									"}\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const evn = pm.variables.get(\"evn\");\r",
									"const realms = pm.variables.get(\"realms\");\r",
									"pm.sendRequest({\r",
									"      url: `${evn}/apps/keycloak/realms/${realms}/protocol/openid-connect/token`,\r",
									"      method: 'POST',\r",
									"       header: {\r",
									"    'Content-Type': 'application/x-www-form-urlencoded',\r",
									"  },\r",
									"      body: {\r",
									"          mode: 'urlencoded',\r",
									"          urlencoded: [\r",
									"            {key: \"grant_type\", value: \"password\"},\r",
									"            {key: \"client_id\", value: \"BV_SWAGGER_UI\"},\r",
									"            {key: \"username\", value: \"atlas.officer@yopmail.com\"},\r",
									"            {key: \"password\", value: \"@Ttek1234\"},\r",
									"        ]\r",
									"      }\r",
									"  }, \r",
									"  function (err, response) {\r",
									"    console.log(\"token\",response.json().access_token);\r",
									"        pm.environment.set(\"tokenIMEX\", response.json().access_token);\r",
									"  });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenIMEX}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"status\": \"DRAFT\",\r\n    \"regimeCode\": \"2\",\r\n    \"agentName\": \"Atlas World Logistics\",\r\n    \"agentTaxId\": \"90184561\",\r\n    \"agentBizFunction\": \"IM\",\r\n    \"agentCommunication\": \"EM\",\r\n    \"agentCommunicationRef\": \"atlas@yopmail.com\",\r\n    \"agentAddress\": {\r\n        \"id\": \"f6968f7d-5643-4f47-a1f7-e1d9f1ca1368\",\r\n        \"street\": \"Jeddah 7777\",\r\n        \"city\": \"Jeddah\",\r\n        \"poBoxNumber\": \"10101010\",\r\n        \"countryCode\": \"SA\",\r\n        \"address1\": \"111111\",\r\n        \"address2\": \"111111\",\r\n        \"address3\": \"11111\",\r\n        \"country\": \"SA\"\r\n    },\r\n    \"agentCountry\": \"SA\",\r\n    \"carrierName\": \"44440001 - Da Hua\",\r\n    \"traderName\": \"Atlas World Logistics\",\r\n    \"traderTaxId\": \"90184561\",\r\n    \"traderBizFunction\": \"IM\",\r\n    \"traderCommunication\": \"EM\",\r\n    \"traderCommunicationRef\": \"atlas@yopmail.com\",\r\n    \"traderAddress\": {\r\n        \"id\": \"f6968f7d-5643-4f47-a1f7-e1d9f1ca1368\",\r\n        \"street\": \"Jeddah 7777\",\r\n        \"city\": \"Jeddah\",\r\n        \"poBoxNumber\": \"10101010\",\r\n        \"countryCode\": \"SA\",\r\n        \"address1\": \"111111\",\r\n        \"address2\": \"111111\",\r\n        \"address3\": \"11111\"\r\n    },\r\n    \"traderCountry\": \"SA\",\r\n    \"procedureCode\": \"5\",\r\n    \"transportModeCode\": \"1\",\r\n    \"lines\": [\r\n        {\r\n            \"id\": \"{{IDReference_LineTemporaryIMedraft}}\",\r\n            \"commodityClassification\": \"01061200\",\r\n            \"commercialGoodsDesc\": \"Other\",\r\n            \"supplementaryQuantity\": 100,\r\n            \"permitReferences\": [\r\n                \"2100003083\"\r\n            ],\r\n            \"goodsStatusCode\": \"1\",\r\n            \"countryOriginCode\": \"AD\",\r\n            \"regionOriginCode\": \"\",\r\n            \"declaredValue\": 1018737.987,\r\n            \"dutyAssessmentValue\": 1018737.987,\r\n            \"freightCharge\": 135831.732,\r\n            \"insuranceCharge\": 135831.732,\r\n            \"tariffPreferenceClaimedCode\": null,\r\n            \"govtProcedureClaimedCode\": null,\r\n            \"containerReferences\": [\r\n                \"MSCU2092276\",\r\n                \"IPXU2148384\"\r\n            ],\r\n            \"numberPackages\": 10000,\r\n            \"grossWeight\": 10000,\r\n            \"netWeight\": null,\r\n            \"seqNumber\": 1,\r\n            \"hash\": {{Reference_LineTemporaryIMdraft}},\r\n            \"vehicles\": [],\r\n            \"containers\": [\r\n                {\r\n                    \"seals\": \"4000001, 4000002, 4000003, 4000004\",\r\n                    \"containerType\": \"20R0\",\r\n                    \"containerNumber\": \"MSCU2092276\"\r\n                },\r\n                {\r\n                    \"seals\": \"5000001, 5000002, 5000003, 5000004\",\r\n                    \"containerType\": \"20R0\",\r\n                    \"containerNumber\": \"IPXU2148384\"\r\n                }\r\n            ],\r\n            \"manufacture\": \"Godi Cheese With Vegetable Oil\",\r\n            \"shippingMark\": \"Oranges contained in two container\",\r\n            \"modelVehicles\": [],\r\n            \"insuranceLocal\": 135831.732,\r\n            \"packageOfVolM3\": 1,\r\n            \"deductionsLocal\": 0,\r\n            \"extFreightLocal\": 135831.732,\r\n            \"insuranceFxRate\": 67.91586582541548,\r\n            \"otherCostsLocal\": 0,\r\n            \"valuationMethod\": \"1\",\r\n            \"deductedQuantity\": null,\r\n            \"deductionsFxRate\": 0,\r\n            \"descriptionGoods\": \"-- Whales, dolphins and porpoises (mammals of the order Cetacea); manatees and dugongs (mammals of the order Sirenia); seals, sea lions and walruses (mammals of the suborder Pinnipedia)\",\r\n            \"extFreightFxRate\": 67.91586582541548,\r\n            \"insuranceForeign\": 2000,\r\n            \"lineCurrencyCode\": \"USD\",\r\n            \"lineExchangeRate\": 67.91586582541548,\r\n            \"netWeightUOMCode\": null,\r\n            \"otherCostsFxRate\": 0,\r\n            \"deductionsForeign\": 0,\r\n            \"extFreightForeign\": 2000,\r\n            \"otherCostsForeign\": 0,\r\n            \"grossWeightUOMCode\": \"KGM\",\r\n            \"governmentProcedure\": \"5100\",\r\n            \"linePackageTypeCode\": \"4A\",\r\n            \"statisticalQuantity\": 1018737.987,\r\n            \"statisticalUnitCode\": \"MND\",\r\n            \"valuationMethodCode\": \"1\",\r\n            \"supplierRelationCode\": \"135\",\r\n            \"valueForeignCurrency\": 15000,\r\n            \"insuranceCurrencyCode\": \"USD\",\r\n            \"deductionsCurrencyCode\": 0,\r\n            \"extFreightCurrencyCode\": \"USD\",\r\n            \"otherCostsCurrencyCode\": 0,\r\n            \"associatedGovtProcedure\": true,\r\n            \"valuationAdjustmentRate\": 1,\r\n            \"valuationAdjustmentValue\": 0,\r\n            \"commodityClassificationRef\": null,\r\n            \"commodityClassificationCode\": null,\r\n            \"valuationAdjustmentTypeCode\": null\r\n        }\r\n    ],\r\n    \"containers\": [\r\n        {\r\n            \"seals\": \"4000001, 4000002, 4000003, 4000004\",\r\n            \"containerType\": \"20R0\",\r\n            \"containerNumber\": \"MSCU2092276\"\r\n        },\r\n        {\r\n            \"seals\": \"5000001, 5000002, 5000003, 5000004\",\r\n            \"containerType\": \"20R0\",\r\n            \"containerNumber\": \"IPXU2148384\"\r\n        }\r\n    ],\r\n    \"attachments\": [],\r\n    \"totalNetWeight\": 0,\r\n    \"totalVehicles\": 0,\r\n    \"totalContainers\": 2,\r\n    \"facilities\": [\r\n        {\r\n            \"code\": \"{{TemporaryIM_facilityCode}}\",\r\n            \"name\": \"{{TemporaryIM_facilityName}}\"\r\n        }\r\n    ],\r\n    \"securityDetails\": \"100001764BGC24082024-TI\",\r\n    \"selfDeclared\": true,\r\n    \"agentId\": \"7d4e0dcb-0e3e-4fbb-87fb-acb555ae4edd\",\r\n    \"agentBlacklistedLatest\": false,\r\n    \"id\": \"{{IDReference_TemporaryIMdraft}}\",\r\n    \"reference\": {{Reference_TemporaryIMdraft}},\r\n    \"reasons\": [],\r\n    \"rejectReasons\": null,\r\n    \"cancelReasons\": null,\r\n    \"inquiries\": null,\r\n    \"errorReason\": null,\r\n    \"\": null,\r\n    \"parties\": [\r\n        {\r\n            \"name\": \"Godi Cheese With Vegetable Oil\",\r\n            \"type\": \"NOTIFY_PARTIES\",\r\n            \"address\": \"1001 Industry Rd, Suite AKenner, LA 70062\",\r\n            \"communication\": \"TE\",\r\n            \"communicationReference\": \"973172696\"\r\n        }\r\n    ],\r\n    \"remarks\": null,\r\n    \"packages\": [\r\n        {\r\n            \"total\": 1000,\r\n            \"packageType\": \"1A\"\r\n        }\r\n    ],\r\n    \"traderId\": \"7d4e0dcb-0e3e-4fbb-87fb-acb555ae4edd\",\r\n    \"consignor\": \"7258461309\",\r\n    \"check10000\": null,\r\n    \"expiryDate\": \"2025-02-24T09:37:01.134Z\",\r\n    \"totalLines\": 1,\r\n    \"arrivalDate\": \"2022-08-13T00:00:00.000Z\",\r\n    \"carrierCode\": \"44440001\",\r\n    \"incotermCode\": \"CFR\",\r\n    \"totalFreight\": 135831.732,\r\n    \"consignorName\": \"Avis\",\r\n    \"totalPackages\": 10000,\r\n    \"totalDocuments\": 0,\r\n    \"totalInsurance\": 135831.732,\r\n    \"ecvrOptionalFee\": false,\r\n    \"invoiceDocument\": [],\r\n    \"officeEntryCode\": \"SAJED\",\r\n    \"traderReference\": \"Direct Import\",\r\n    \"agentBlacklisted\": false,\r\n    \"consignorAddress\": \"Vietnam\",\r\n    \"consignorCountry\": \"AE\",\r\n    \"hlevyOptionalFee\": false,\r\n    \"loadingPlaceCode\": \"GHABK\",\r\n    \"officeExportCode\": \"SAJED\",\r\n    \"securityTypeCode\": \"BON\",\r\n    \"totalGrossWeight\": 10000,\r\n    \"typeMeansTavCode\": \"1\",\r\n    \"completionTempDec\": false,\r\n    \"countryExportCode\": \"IN\",\r\n    \"goodsLocationCode\": \"889911CCA\",\r\n    \"htt001OptionalFee\": false,\r\n    \"incotermPlaceCode\": \"SAJED\",\r\n    \"incotermPlaceName\": \"Jeddah\",\r\n    \"traderBlacklisted\": false,\r\n    \"additionalDocument\": [],\r\n    \"placeDischargeCode\": \"SAJED\",\r\n    \"previousDocumentNo\": null,\r\n    \"totalInvoiceAmount\": 15000,\r\n    \"transportDocuments\": [],\r\n    \"nationalMeansTavCode\": \"IN\",\r\n    \"previousDocumentDate\": null,\r\n    \"natureTransactionCode\": \"1\",\r\n    \"officeDeclarationCode\": \"GHABK\",\r\n    \"totalInsuranceForeign\": 2000,\r\n    \"consignorCommunication\": \"AH\",\r\n    \"freightApportQualifier\": \"VOL\",\r\n    \"identificationMeansTav\": \"SA578\",\r\n    \"totalExtFreightForeign\": 2000,\r\n    \"declarationCurrencyCode\": \"AFN\",\r\n    \"traderBlacklistedLatest\": false,\r\n    \"freightApportQualifierCode\": null,\r\n    \"consignorCommunicationReference\": \"67777\",\r\n    \"version\": 0,\r\n    \"type\": \"SUBMISSION\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{evn}}/api/gateway/v1/decman/forms/3/validations?",
							"host": [
								"{{evn}}"
							],
							"path": [
								"api",
								"gateway",
								"v1",
								"decman",
								"forms",
								"3",
								"validations"
							],
							"query": [
								{
									"key": "",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "SubmitDec_TemporaryIM",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();\r",
									"\r",
									"if(pm.response.to.have.status(200))\r",
									"{  \r",
									"    pm.execution.setNextRequest(\"SearchDecTemporaryIM\");\r",
									"    pm.environment.set(\"RegistrationReference_TemporaryIM\", data.data.registrationReference);\r",
									"     pm.globals.set(\"RegistrationReference\", data.data.registrationReference);\r",
									"    pm.environment.set(\"IDRegistrationReference_TemporaryIM\", data.data.request.applyTo);\r",
									"    const lineid = pm.variables.get(\"IDReference_LineTemporaryIMedraft\");\r",
									"    if(data.data.lines && data.data.lines.length > 0 && data.data.lines[0].id === lineid)\r",
									"    {\r",
									"        pm.environment.set(\"TemporaryIM_referenceLine\", data.data.lines[0].reference);\r",
									"    }\r",
									"}\r",
									"else\r",
									"{\r",
									"     pm.execution.setNextRequest(null);\r",
									"}\r",
									"pm.test(\"Status is SUBMITTED\", function () {\r",
									"    pm.expect(data.data.request.status).to.include(\"SUBMITTED\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Check the declaration after submitting it successfully.\", function () {\r",
									"    pm.expect(data.data.registrationReference).to.include(pm.variables.get(\"RegistrationReference_TemporaryIM\"));\r",
									"    if(data.data.lines && data.data.lines.length > 0){\r",
									"        pm.expect(data.data.lines[0].id).to.include(pm.variables.get(\"IDReference_LineTemporaryIMedraft\"));\r",
									"        pm.expect(data.data.lines[0].commodityClassification).to.include(pm.variables.get(\"TemporaryIM_commodityClassification\"));\r",
									"        pm.expect(data.data.lines[0].governmentProcedure).to.include(pm.variables.get(\"TemporaryIM_governmentProcedure\"));\r",
									"        pm.expect(data.data.lines[0].numberPackages).to.equal(pm.variables.get(\"TemporaryIM_numberPackages\")); \r",
									"        pm.expect(data.data.lines[0].grossWeight).to.equale(pm.variables.get(\"TemporaryIM_grossWeight\"));\r",
									"        pm.expect(data.data.lines[0].netWeight).to.equal(pm.variables.get(\"TemporaryIM_netWeight\"));  \r",
									"        pm.expect(data.data.lines[0].supplementaryQuantity).to.equal(pm.variables.get(\"TemporaryIM_supplementaryQuantity\"));\r",
									"        pm.expect(data.data.lines[0].permitReferences[0]).to.include(pm.variables.get(\"TemporaryIM_permitReferences\"));\r",
									"    }\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const evn = pm.variables.get(\"evn\");\r",
									"const realms = pm.variables.get(\"realms\");\r",
									"pm.sendRequest({\r",
									"      url: `${evn}/apps/keycloak/realms/${realms}/protocol/openid-connect/token`,\r",
									"      method: 'POST',\r",
									"       header: {\r",
									"    'Content-Type': 'application/x-www-form-urlencoded',\r",
									"  },\r",
									"      body: {\r",
									"          mode: 'urlencoded',\r",
									"          urlencoded: [\r",
									"            {key: \"grant_type\", value: \"password\"},\r",
									"            {key: \"client_id\", value: \"BV_SWAGGER_UI\"},\r",
									"            {key: \"username\", value: \"atlas.officer@yopmail.com\"},\r",
									"            {key: \"password\", value: \"@Ttek1234\"},\r",
									"        ]\r",
									"      }\r",
									"  }, \r",
									"  function (err, response) {\r",
									"    console.log(\"token\",response.json().access_token);\r",
									"        pm.environment.set(\"tokenIMEX\", response.json().access_token);\r",
									"  });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenIMEX}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{evn}}/api/gateway/v1/decman/requests/{{IDReference_TemporaryIMdraft}}/submit",
							"host": [
								"{{evn}}"
							],
							"path": [
								"api",
								"gateway",
								"v1",
								"decman",
								"requests",
								"{{IDReference_TemporaryIMdraft}}",
								"submit"
							]
						}
					},
					"response": []
				},
				{
					"name": "SearchDecTemporaryIM_1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();\r",
									"\r",
									"if(pm.response.to.have.status(200))\r",
									"{\r",
									"pm.execution.setNextRequest(\"SearchinvoidceDec\");\r",
									"}\r",
									"else\r",
									"{\r",
									"     pm.execution.setNextRequest(null);\r",
									"}\r",
									"pm.test(\"Response success is true\", function () {\r",
									"   pm.expect(data.success).to.be.true;\r",
									"});\r",
									" pm.test(\"Compare data after searching based on the Declaration document.\", function () {\r",
									"\r",
									"     pm.expect(data.data.content[0].reference).to.include(pm.variables.get(\"RegistrationReference_TemporaryIM\"));\r",
									"     pm.environment.set(\"ReferenceDecTemporary_1\", data.data.content[0].reference);\r",
									"     \r",
									"\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const evn = pm.variables.get(\"evn\");\r",
									"const realms = pm.variables.get(\"realms\");\r",
									"pm.sendRequest({\r",
									"      url: `${evn}/apps/keycloak/realms/${realms}/protocol/openid-connect/token`,\r",
									"      method: 'POST',\r",
									"       header: {\r",
									"    'Content-Type': 'application/x-www-form-urlencoded',\r",
									"  },\r",
									"      body: {\r",
									"          mode: 'urlencoded',\r",
									"          urlencoded: [\r",
									"            {key: \"grant_type\", value: \"password\"},\r",
									"            {key: \"client_id\", value: \"BV_SWAGGER_UI\"},\r",
									"            {key: \"username\", value: \"atlas.officer@yopmail.com\"},\r",
									"            {key: \"password\", value: \"@Ttek1234\"},\r",
									"        ]\r",
									"      }\r",
									"  }, \r",
									"  function (err, response) {\r",
									"    console.log(\"token\",response.json().access_token);\r",
									"        pm.environment.set(\"tokenIMEX\", response.json().access_token);\r",
									"  });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenIMEX}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{evn}}/api/gateway/v1/decman/declarations?page=0&size=10&reference={{RegistrationReference_TemporaryIM}}",
							"host": [
								"{{evn}}"
							],
							"path": [
								"api",
								"gateway",
								"v1",
								"decman",
								"declarations"
							],
							"query": [
								{
									"key": "page",
									"value": "0"
								},
								{
									"key": "size",
									"value": "10"
								},
								{
									"key": "reference",
									"value": "{{RegistrationReference_TemporaryIM}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "SearchDecTemporaryIM_2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();\r",
									"\r",
									"if(pm.response.to.have.status(200))\r",
									"{\r",
									"pm.execution.setNextRequest(\"SearchinvoidceDec\");\r",
									"}\r",
									"else\r",
									"{\r",
									"     pm.execution.setNextRequest(null);\r",
									"}\r",
									"pm.test(\"Response success is true\", function () {\r",
									"   pm.expect(data.success).to.be.true;\r",
									"});\r",
									" pm.test(\"Compare data after searching based on the Declaration document.\", function () {\r",
									"\r",
									"     pm.expect(data.data.content[0].reference).to.include(pm.variables.get(\"RegistrationReference_TemporaryIM\"));\r",
									"     pm.environment.set(\"ReferenceDecTemporary_2\", data.data.content[0].reference);\r",
									"     \r",
									"\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenIMEX}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://bv-core-dev.ttekglobal.com/api/gateway/v1/decman/declarations?page=0&size=10&reference={{RegistrationReference_TemporaryIM}}",
							"protocol": "https",
							"host": [
								"bv-core-dev",
								"ttekglobal",
								"com"
							],
							"path": [
								"api",
								"gateway",
								"v1",
								"decman",
								"declarations"
							],
							"query": [
								{
									"key": "page",
									"value": "0"
								},
								{
									"key": "size",
									"value": "10"
								},
								{
									"key": "reference",
									"value": "{{RegistrationReference_TemporaryIM}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "SearchinvoidceDec",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var dec = pm.response.json();\r",
									"\r",
									"if (pm.response.to.have.status(200)) {\r",
									"    pm.environment.set(\"InvoiceDec\", dec.data.content[0].id);\r",
									"    let status = dec.data.content[0].status;\r",
									"    console.log(status)\r",
									"    if (status === \"CREATED\") {\r",
									"    pm.execution.setNextRequest(\"Payment_DecTemporaryIM\");\r",
									"    }\r",
									"    else\r",
									"    {\r",
									"        pm.execution.setNextRequest(null)\r",
									"    }\r",
									"}\r",
									"\r",
									"pm.test(\"Check RegistrationReference_TemporaryIM\", function () {\r",
									"    pm.expect(dec.data.content[0].referenceDocument).to.include(pm.variables.get(\"RegistrationReference_TemporaryIM\"));\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.expect(dec.data.content[0].status).to.eql(\"CREATED\"); // Updated condition for 'CREATED' status\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const evn = pm.variables.get(\"evn\");\r",
									"const realms = pm.variables.get(\"realms\");\r",
									"pm.sendRequest({\r",
									"      url: `${evn}/apps/keycloak/realms/${realms}/protocol/openid-connect/token`,\r",
									"      method: 'POST',\r",
									"       header: {\r",
									"    'Content-Type': 'application/x-www-form-urlencoded',\r",
									"  },\r",
									"      body: {\r",
									"          mode: 'urlencoded',\r",
									"          urlencoded: [\r",
									"            {key: \"grant_type\", value: \"password\"},\r",
									"            {key: \"client_id\", value: \"BV_SWAGGER_UI\"},\r",
									"            {key: \"username\", value: \"atlas.cashier@yopmail.com\"},\r",
									"            {key: \"password\", value: \"@Ttek1234\"},\r",
									"        ]\r",
									"      }\r",
									"  }, \r",
									"  function (err, response) {\r",
									"    console.log(\"tokencashierCompany\",response.json().access_token);\r",
									"        pm.environment.set(\"tokencashierCompany\", response.json().access_token);\r",
									"  });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokencashierCompany}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{evn}}/api/gateway/v1/revman/invoices?&page=0&size=10&referenceDocument={{RegistrationReference_TemporaryIM}}",
							"host": [
								"{{evn}}"
							],
							"path": [
								"api",
								"gateway",
								"v1",
								"revman",
								"invoices"
							],
							"query": [
								{
									"key": null,
									"value": null
								},
								{
									"key": "page",
									"value": "0"
								},
								{
									"key": "size",
									"value": "10"
								},
								{
									"key": "referenceDocument",
									"value": "{{RegistrationReference_TemporaryIM}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Payment_DecTemporaryIM",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data;\r",
									"dataDec = pm.response.json();\r",
									"if(pm.response.to.have.status(200))\r",
									"{\r",
									"   pm.execution.setNextRequest(\"Releasing_DecTemporary\");\r",
									"   \r",
									"}\r",
									"else\r",
									"{\r",
									"    pm.execution.setNextRequest(null)\r",
									"}\r",
									" pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									" pm.test(\"Payment success\", function () {\r",
									"   pm.expect(dataDec.success).to.eql(true);\r",
									" })"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const evn = pm.variables.get(\"evn\");\r",
									"const realms = pm.variables.get(\"realms\");\r",
									"pm.sendRequest({\r",
									"      url: `${evn}/apps/keycloak/realms/${realms}/protocol/openid-connect/token`,\r",
									"      method: 'POST',\r",
									"       header: {\r",
									"    'Content-Type': 'application/x-www-form-urlencoded',\r",
									"  },\r",
									"      body: {\r",
									"          mode: 'urlencoded',\r",
									"          urlencoded: [\r",
									"            {key: \"grant_type\", value: \"password\"},\r",
									"            {key: \"client_id\", value: \"BV_SWAGGER_UI\"},\r",
									"            {key: \"username\", value: \"atlas.cashier@yopmail.com\"},\r",
									"            {key: \"password\", value: \"@Ttek1234\"},\r",
									"        ]\r",
									"      }\r",
									"  }, \r",
									"  function (err, response) {\r",
									"    console.log(\"tokencashierCompany\",response.json().access_token);\r",
									"        pm.environment.set(\"tokencashierCompany\", response.json().access_token);\r",
									"  });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokencashierCompany}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"paymentMethod\": \"2\",\r\n    \"bankGuarantorCode\": null,\r\n    \"bankAccountNo\": \"\",\r\n    \"receiptReference\": \"\",\r\n    \"notes\": \"6666\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{evn}}/api/gateway/v1/revman/invoices/{{InvoiceDec}}/payments/requests",
							"host": [
								"{{evn}}"
							],
							"path": [
								"api",
								"gateway",
								"v1",
								"revman",
								"invoices",
								"{{InvoiceDec}}",
								"payments",
								"requests"
							]
						}
					},
					"response": []
				},
				{
					"name": "Releasing_DecTemporary",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var dataDec = pm.response.json();\r",
									"if(dataDec.success == true)\r",
									"{\r",
									"  pm.execution.setNextRequest(\"Release_DecTemporary\");\r",
									"   \r",
									"}\r",
									"else\r",
									"{\r",
									"    pm.execution.setNextRequest(null)\r",
									"}\r",
									" pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									" pm.test(\"Releasing success\", function () {\r",
									"   pm.expect(dataDec.success).to.eql(true);\r",
									" })"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const evn = pm.variables.get(\"evn\");\r",
									"const realms = pm.variables.get(\"realms\");\r",
									"pm.sendRequest({\r",
									"      url: `${evn}/apps/keycloak/realms/${realms}/protocol/openid-connect/token`,\r",
									"      method: 'POST',\r",
									"       header: {\r",
									"    'Content-Type': 'application/x-www-form-urlencoded',\r",
									"  },\r",
									"      body: {\r",
									"          mode: 'urlencoded',\r",
									"          urlencoded: [\r",
									"            {key: \"grant_type\", value: \"password\"},\r",
									"            {key: \"client_id\", value: \"BV_SWAGGER_UI\"},\r",
									"            {key: \"username\", value: \"customs.officer@yopmail.com\"},\r",
									"            {key: \"password\", value: \"@Ttek1234\"},\r",
									"        ]\r",
									"      }\r",
									"  }, \r",
									"  function (err, response) {\r",
									"    console.log(\"tokencustomofficer\",response.json().access_token);\r",
									"        pm.environment.set(\"tokencustomofficer\", response.json().access_token);\r",
									"  });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokencustomofficer}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{evn}}/api/gateway/v1/decman/declarations/{{IDRegistrationReference_TemporaryIM}}/releasing",
							"host": [
								"{{evn}}"
							],
							"path": [
								"api",
								"gateway",
								"v1",
								"decman",
								"declarations",
								"{{IDRegistrationReference_TemporaryIM}}",
								"releasing"
							]
						}
					},
					"response": []
				},
				{
					"name": "Release_DecTemporary",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var dataDec = pm.response.json();\r",
									"const a = pm.variables.get(\"RegistrationReference_TemporaryIM\");\r",
									"const b =pm.globals.get(\"RegistrationReference\");\r",
									"if(dataDec.success == true)\r",
									"{\r",
									"  pm.execution.setNextRequest(\"ReEXFull\");\r",
									"   \r",
									"}\r",
									"else\r",
									"{\r",
									"     pm.execution.setNextRequest(null)\r",
									"}\r",
									" pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									" pm.test(\"Release success\", function () {\r",
									"   pm.expect(dataDec.success).to.eql(true);\r",
									" })\r",
									"  pm.test(\"Check the declaration after release success.\", function () {\r",
									"\r",
									"     //pm.expect(dataDec.data.declarationReference).to.include(a);\r",
									"    //   pm.expect(dataDec.data.declarationReference).to.include(b);\r",
									"     pm.expect(dataDec.data.releasedReference).to.is.not.null;\r",
									"\r",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const evn = pm.variables.get(\"evn\");\r",
									"const realms = pm.variables.get(\"realms\");\r",
									"pm.sendRequest({\r",
									"      url: `${evn}/apps/keycloak/realms/${realms}/protocol/openid-connect/token`,\r",
									"      method: 'POST',\r",
									"       header: {\r",
									"    'Content-Type': 'application/x-www-form-urlencoded',\r",
									"  },\r",
									"      body: {\r",
									"          mode: 'urlencoded',\r",
									"          urlencoded: [\r",
									"            {key: \"grant_type\", value: \"password\"},\r",
									"            {key: \"client_id\", value: \"BV_SWAGGER_UI\"},\r",
									"            {key: \"username\", value: \"customs.officer@yopmail.com\"},\r",
									"            {key: \"password\", value: \"@Ttek1234\"},\r",
									"        ]\r",
									"      }\r",
									"  }, \r",
									"  function (err, response) {\r",
									"    console.log(\"tokencustomofficer\",response.json().access_token);\r",
									"        pm.environment.set(\"tokencustomofficer\", response.json().access_token);\r",
									"  });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokencustomofficer}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{evn}}/api/gateway/v1/decman/declarations/{{IDRegistrationReference_TemporaryIM}}/release-orders",
							"host": [
								"{{evn}}"
							],
							"path": [
								"api",
								"gateway",
								"v1",
								"decman",
								"declarations",
								"{{IDRegistrationReference_TemporaryIM}}",
								"release-orders"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "BulkImport",
			"item": [
				{
					"name": "CreateDec_BulkIM",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();\r",
									"if(pm.response.to.have.status(200))\r",
									"{ \r",
									"    pm.execution.setNextRequest(\"ValidationDec_BulkIMOneline\");\r",
									"    pm.environment.set(\"IDReference_BulkIM\", data.data.id);\r",
									"    pm.environment.set(\"Reference_BulkIM\", data.data.reference);\r",
									"    pm.environment.set(\"Reference_LineBulkIM\", data.data.lines[0].hash);\r",
									"    pm.environment.set(\"IDReference_LineBulkIM\", data.data.lines[0].id);\r",
									"    // pm.environment.set(\"BulkIM_commodityClassification\", data.data.lines[0].commodityClassification);\r",
									"    // pm.environment.set(\"BulkIM_governmentProcedure\", data.data.lines[0].governmentProcedure);\r",
									"    // pm.environment.set(\"BulkIM_numberPackages\", data.data.lines[0].numberPackages); \r",
									"    // pm.environment.set(\"BulkIM_grossWeight\", data.data.lines[0].grossWeight);\r",
									"    // pm.environment.set(\"BulkIM_netWeight\", data.data.lines[0].netWeight);  \r",
									"    // pm.environment.set(\"BulkIM_supplementaryQuantity\", data.data.lines[0].supplementaryQuantity);\r",
									"    // pm.environment.set(\"BulkIM_permitReferences\", data.data.lines[0].permitReferences[0]); \r",
									"    // pm.environment.set(\"BulkIM_facilityCode\", data.data.facilities[0].code);\r",
									"    // pm.environment.set(\"BulkIM_facilityName\", data.data.facilities[0].name); \r",
									"}\r",
									"else\r",
									"{\r",
									"     pm.execution.setNextRequest(null);\r",
									"}\r",
									"pm.test(\"Status is DRAFT\", function () {\r",
									"    pm.expect(data.data.status).to.include(\"DRAFT\");\r",
									"});\r",
									"pm.test(\"line array has a length of 1\", function () {\r",
									"    pm.expect(data.data.lines).to.have.lengthOf(1);\r",
									"});\r",
									"\r",
									"pm.test(\"Response status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const evn = pm.variables.get(\"evn\");\r",
									"const realms = pm.variables.get(\"realms\");\r",
									"pm.sendRequest({\r",
									"      url: `${evn}/apps/keycloak/realms/${realms}/protocol/openid-connect/token`,\r",
									"      method: 'POST',\r",
									"       header: {\r",
									"    'Content-Type': 'application/x-www-form-urlencoded',\r",
									"  },\r",
									"      body: {\r",
									"          mode: 'urlencoded',\r",
									"          urlencoded: [\r",
									"            {key: \"grant_type\", value: \"password\"},\r",
									"            {key: \"client_id\", value: \"BV_SWAGGER_UI\"},\r",
									"            {key: \"username\", value: \"atlas.officer@yopmail.com\"},\r",
									"            {key: \"password\", value: \"@Ttek1234\"},\r",
									"        ]\r",
									"      }\r",
									"  }, \r",
									"  function (err, response) {\r",
									"    console.log(\"token\",response.json().access_token);\r",
									"        pm.environment.set(\"tokenIMEX\", response.json().access_token);\r",
									"  });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenIMEX}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"type\": \"SUBMISSION\",\r\n    \"data\": {\r\n    \"status\": \"DRAFT\",\r\n    \"regimeCode\": \"2\",\r\n    \"agentName\": \"Atlas World Logistics\",\r\n    \"agentTaxId\": \"90184561\",\r\n    \"agentBizFunction\": \"IM\",\r\n    \"agentCommunication\": \"EM\",\r\n    \"agentCommunicationRef\": \"atlas@yopmail.com\",\r\n    \"agentAddress\": {\r\n        \"id\": \"f6968f7d-5643-4f47-a1f7-e1d9f1ca1368\",\r\n        \"street\": \"Jeddah 7777\",\r\n        \"city\": \"Jeddah\",\r\n        \"poBoxNumber\": \"10101010\",\r\n        \"countryCode\": \"SA\",\r\n        \"address1\": \"111111\",\r\n        \"address2\": \"111111\",\r\n        \"address3\": \"11111\",\r\n        \"country\": \"SA\"\r\n    },\r\n    \"agentCountry\": \"SA\",\r\n    \"carrierName\": \"44440001 - Da Hua\",\r\n    \"traderName\": \"Atlas World Logistics\",\r\n    \"traderTaxId\": \"90184561\",\r\n    \"traderBizFunction\": \"IM\",\r\n    \"traderCommunication\": \"EM\",\r\n    \"traderCommunicationRef\": \"atlas@yopmail.com\",\r\n    \"traderAddress\": {\r\n        \"id\": \"f6968f7d-5643-4f47-a1f7-e1d9f1ca1368\",\r\n        \"street\": \"Jeddah 7777\",\r\n        \"city\": \"Jeddah\",\r\n        \"poBoxNumber\": \"10101010\",\r\n        \"countryCode\": \"SA\",\r\n        \"address1\": \"111111\",\r\n        \"address2\": \"111111\",\r\n        \"address3\": \"11111\",\r\n        \"country\": \"SA\"\r\n    },\r\n    \"traderCountry\": \"SA\",\r\n    \"procedureCode\": \"4\",\r\n    \"transportModeCode\": \"1\",\r\n    \"lines\": [\r\n        {\r\n            \"modelVehicles\": [],\r\n            \"commodityClassification\": \"01061200\",\r\n            \"commercialGoodsDesc\": \"4343\",\r\n            \"associatedGovtProcedure\": true,\r\n            \"permitReferences\": [\r\n                \"2100003083\"\r\n            ],\r\n            \"countryOriginCode\": \"AD\",\r\n            \"regionOriginCode\": \"08\",\r\n            \"statisticalUnitCode\": \"MND\",\r\n            \"statisticalQuantity\": 1200,\r\n            \"supplementaryQuantity\": 200,\r\n            \"descriptionGoods\": \"-- Whales, dolphins and porpoises (mammals of the order Cetacea); manatees and dugongs (mammals of the order Sirenia); seals, sea lions and walruses (mammals of the suborder Pinnipedia)\",\r\n            \"governmentProcedure\": \"4051\",\r\n            \"valueForeignCurrency\": 1200,\r\n            \"lineCurrencyCode\": \"AFN\",\r\n            \"lineExchangeRate\": 1,\r\n            \"declaredValue\": 1200,\r\n            \"dutyAssessmentValue\": 1200,\r\n            \"tariffPreferenceClaimedCode\": null,\r\n            \"valuationMethodCode\": null,\r\n            \"extFreightForeign\": null,\r\n            \"extFreightCurrencyCode\": null,\r\n            \"extFreightFxRate\": \"\",\r\n            \"extFreightLocal\": 0,\r\n            \"insuranceForeign\": null,\r\n            \"insuranceCurrencyCode\": null,\r\n            \"insuranceFxRate\": \"\",\r\n            \"insuranceLocal\": 0,\r\n            \"govtProcedureClaimedCode\": null,\r\n            \"valuationAdjustmentRate\": 1,\r\n            \"supplierRelationCode\": null,\r\n            \"valuationAdjustmentValue\": 0,\r\n            \"deductedQuantity\": null,\r\n            \"valuationAdjustmentTypeCode\": null,\r\n            \"numberPackages\": 20000,\r\n            \"linePackageTypeCode\": \"1A\",\r\n            \"packageOfVolM3\": 44,\r\n            \"shippingMark\": \"tt\",\r\n            \"grossWeight\": 20000,\r\n            \"grossWeightUOMCode\": \"KGM\",\r\n            \"netWeight\": null,\r\n            \"netWeightUOMCode\": null,\r\n            \"vehicles\": [],\r\n            \"containerReferences\": [\r\n                \"4354545\"\r\n            ],\r\n            \"otherCostsLocal\": 0,\r\n            \"otherCostsForeign\": 0,\r\n            \"otherCostsCurrencyCode\": 0,\r\n            \"otherCostsFxRate\": 0,\r\n            \"deductionsLocal\": 0,\r\n            \"deductionsForeign\": 0,\r\n            \"deductionsCurrencyCode\": 0,\r\n            \"deductionsFxRate\": 0,\r\n            \"previousDocuments\": [\r\n                \"GHABK2024R10000570\",\r\n                \"GHABK2024R10000573\"\r\n            ],\r\n            // \"seqNumber\": 1,\r\n            // \"hash\": \"prev-3cmo8afzky\",\r\n            \"freightCharge\": 0,\r\n            \"insuranceCharge\": 0,\r\n            \"containers\": [\r\n                {\r\n                    \"containerType\": \"08GP\",\r\n                    \"containerNumber\": \"4354545\",\r\n                    \"seals\": \"4545\"\r\n                }\r\n            ],\r\n            \"quotaProfileId\": null\r\n        }\r\n    ],\r\n    \"containers\": [\r\n        {\r\n            \"containerType\": \"08GP\",\r\n            \"containerNumber\": \"4354545\",\r\n            \"seals\": \"4545\"\r\n        }\r\n    ],\r\n    \"attachments\": [],\r\n    \"totalNetWeight\": 0,\r\n    \"totalVehicles\": 0,\r\n    \"totalContainers\": 1,\r\n    \"facilities\": [\r\n        {\r\n            \"code\": \"{{TemporaryIM_facilityCode1}}\",\r\n            \"name\": \"{{TemporaryIM_facilityName1}}\"\r\n        },\r\n        {\r\n          \r\n            \"code\": \"{{TemporaryIM_facilityCode2}}\",\r\n            \"name\": \"{{TemporaryIM_facilityName2}}\"\r\n            }\r\n    ],\r\n    \"officeDeclarationCode\": \"MYKAB\",\r\n    \"securityDetails\": null,\r\n    \"agentId\": \"7d4e0dcb-0e3e-4fbb-87fb-acb555ae4edd\",\r\n    \"agentBlacklistedLatest\": false,\r\n    \"consignorName\": \"Avis\",\r\n    \"consignorCommunication\": \"AH\",\r\n    \"consignorAddress\": \"Vietnam\",\r\n    \"consignorCountry\": \"AE\",\r\n    \"consignorCommunicationReference\": \"67777\",\r\n    \"declarationCurrencyCode\": \"AFN\",\r\n    \"securityTypeCode\": null,\r\n    \"traderReference\": null,\r\n    \"officeEntryCode\": \"MYKAB\",\r\n    \"selfDeclared\": true,\r\n    \"previousDocumentNo\": null,\r\n    \"previousDocumentDate\": null,\r\n    \"remarks\": null,\r\n    \"invoiceDocument\": [],\r\n    \"additionalDocument\": [],\r\n    \"transportDocuments\": [],\r\n    \"parties\": [],\r\n    \"ecvrOptionalFee\": false,\r\n    \"chidoanOptionalFee\": false,\r\n    \"tetsOptionalFee\": false,\r\n    \"htt001OptionalFee\": false,\r\n    \"hlevyOptionalFee\": false,\r\n    \"898OptionalFee\": false,\r\n    \"totalInvoiceAmount\": 1200,\r\n    \"natureTransactionCode\": \"1\",\r\n    \"incotermCode\": \"CFR\",\r\n    \"incotermPlaceCode\": \"SAJED\",\r\n    \"incotermPlaceName\": \"Jeddah\",\r\n    \"consignor\": \"7258461309\",\r\n    \"totalGrossWeight\": 20000,\r\n    \"totalPackages\": 20000,\r\n    \"freightApportQualifierCode\": null,\r\n    \"totalExtFreightForeign\": 0,\r\n    \"totalFreight\": 0,\r\n    \"totalInsuranceForeign\": 0,\r\n    \"totalInsurance\": 0,\r\n    \"typeMeansTavCode\": \"1\",\r\n    \"nationalMeansTavCode\": \"AD\",\r\n    \"identificationMeansTav\": \"555\",\r\n    \"countryExportCode\": \"AD\",\r\n    \"arrivalDate\": \"2024-10-06T17:00:00.000Z\",\r\n    \"goodsLocationCode\": \"114466CCA\",\r\n    \"placeDischargeCode\": \"SAJED\",\r\n    \"loadingPlaceCode\": \"SAJED\",\r\n    \"carrierCode\": \"44440001\",\r\n    //\"totalLines\": 1,\r\n    //\"id\": \"a929a706-322b-459f-8894-778e8788a24d\",\r\n    //\"reference\": \"241100009214\",\r\n    \"reasons\": [],\r\n    \"rejectReasons\": null,\r\n    \"cancelReasons\": null,\r\n    \"inquiries\": null,\r\n    \"errorReason\": null,\r\n    \"totalDocuments\": 0,\r\n    \"agentBlacklisted\": false,\r\n    \"traderBlacklisted\": false,\r\n    \"version\": 0,\r\n    \"previousDocuments\": [\r\n        {\r\n            \"reference\": \"{{ReferenceDecTemporary_1}}\",\r\n            \"itemLine\": 0,\r\n            \"allocatedPackages\": 10000,\r\n            \"allocatedGrossWeight\": 10000,\r\n            \"allocatedSupplementaryQuantity\": 100,\r\n            \"availablePackages\": 10000,\r\n            \"availableGrossWeight\": 10000,\r\n            \"availableSupplementaryQuantity\": 100,\r\n            \"commercialGoodsDesc\": \"Other\",\r\n            \"itemNumber\": 1,\r\n            \"commodityClassification\": \"01061200\",\r\n            \"line\": {\r\n                \"hscode\": \"01061200\",\r\n                \"governmentProcedure\": \"5100\",\r\n                \"countryOriginCode\": \"AD\",\r\n                \"itemNumber\": 1\r\n            },\r\n            \"seqNo\": 0,\r\n            \"altId\": \"eeyiwbaed8\",\r\n            \"facilities\": [\r\n                {\r\n                    \"code\": \"DU001\",\r\n                    \"name\": \"U001\"\r\n                }\r\n            ]\r\n            //\"lineHash\": \"prev-3cmo8afzky\"\r\n        },\r\n        {\r\n            \"reference\": \"{{ReferenceDecTemporary_2}}\",\r\n            \"itemLine\": 0,\r\n            \"allocatedPackages\": 10000,\r\n            \"allocatedGrossWeight\": 10000,\r\n            \"allocatedSupplementaryQuantity\": 100,\r\n            \"availablePackages\": 10000,\r\n            \"availableGrossWeight\": 10000,\r\n            \"availableSupplementaryQuantity\": 100,\r\n            \"commercialGoodsDesc\": \"Other\",\r\n            \"itemNumber\": 1,\r\n            \"commodityClassification\": \"01061200\",\r\n            \"line\": {\r\n                \"hscode\": \"01061200\",\r\n                \"governmentProcedure\": \"5100\",\r\n                \"countryOriginCode\": \"AD\",\r\n                \"itemNumber\": 1\r\n            },\r\n            \"seqNo\": 1,\r\n            \"altId\": \"y9tk6graxi\",\r\n            \"facilities\": [\r\n                {\r\n                    \"code\": \"U002\",\r\n                    \"name\": \"U002\"\r\n                }\r\n            ]\r\n            //\"lineHash\": \"prev-3cmo8afzky\"\r\n        }\r\n    ],\r\n    \"traderId\": \"7d4e0dcb-0e3e-4fbb-87fb-acb555ae4edd\",\r\n    \"traderBlacklistedLatest\": false,\r\n    \"expiryDate\": \"2025-02-24T09:37:01.134Z\"\r\n}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{evn}}/api/gateway/v1/decman/requests",
							"host": [
								"{{evn}}"
							],
							"path": [
								"api",
								"gateway",
								"v1",
								"decman",
								"requests"
							]
						}
					},
					"response": []
				},
				{
					"name": "ValidationDec_BulkIM",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data;\r",
									"data = pm.response.json();\r",
									"if(pm.response.to.have.status(200))\r",
									"{\r",
									"   pm.environment.set(\"errorCount\", data.data.errorCount);  \r",
									"}\r",
									"if (data.data.errorCount == 0)\r",
									"{\r",
									"     pm.execution.setNextRequest(\"SubmitDecTemporaryIM\");\r",
									"      pm.test(\"Check if the error count is 0\", function () {\r",
									"    pm.expect(pm.environment.get(\"errorCount\")).to.equal(0);\r",
									"});\r",
									"   \r",
									"}\r",
									"else\r",
									"{\r",
									"    pm.execution.setNextRequest(null)\r",
									"      pm.test(\"Check if the error count is more than 0\", function () {\r",
									"    pm.expect(data.data.errorCount).to.be.greaterThan(0);\r",
									"});\r",
									"}\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const evn = pm.variables.get(\"evn\");\r",
									"const realms = pm.variables.get(\"realms\");\r",
									"pm.sendRequest({\r",
									"      url: `${evn}/apps/keycloak/realms/${realms}/protocol/openid-connect/token`,\r",
									"      method: 'POST',\r",
									"       header: {\r",
									"    'Content-Type': 'application/x-www-form-urlencoded',\r",
									"  },\r",
									"      body: {\r",
									"          mode: 'urlencoded',\r",
									"          urlencoded: [\r",
									"            {key: \"grant_type\", value: \"password\"},\r",
									"            {key: \"client_id\", value: \"BV_SWAGGER_UI\"},\r",
									"            {key: \"username\", value: \"atlas.officer@yopmail.com\"},\r",
									"            {key: \"password\", value: \"@Ttek1234\"},\r",
									"        ]\r",
									"      }\r",
									"  }, \r",
									"  function (err, response) {\r",
									"    console.log(\"token\",response.json().access_token);\r",
									"        pm.environment.set(\"tokenIMEX\", response.json().access_token);\r",
									"  });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenIMEX}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"status\": \"DRAFT\",\r\n    \"regimeCode\": \"2\",\r\n    \"agentName\": \"Atlas World Logistics\",\r\n    \"agentTaxId\": \"90184561\",\r\n    \"agentBizFunction\": \"IM\",\r\n    \"agentCommunication\": \"EM\",\r\n    \"agentCommunicationRef\": \"atlas@yopmail.com\",\r\n    \"agentAddress\": {\r\n        \"id\": \"f6968f7d-5643-4f47-a1f7-e1d9f1ca1368\",\r\n        \"street\": \"Jeddah 7777\",\r\n        \"city\": \"Jeddah\",\r\n        \"poBoxNumber\": \"10101010\",\r\n        \"countryCode\": \"SA\",\r\n        \"address1\": \"111111\",\r\n        \"address2\": \"111111\",\r\n        \"address3\": \"11111\",\r\n        \"country\": \"SA\"\r\n    },\r\n    \"agentCountry\": \"SA\",\r\n    \"carrierName\": \"44440001 - Da Hua\",\r\n    \"traderName\": \"Atlas World Logistics\",\r\n    \"traderTaxId\": \"90184561\",\r\n    \"traderBizFunction\": \"IM\",\r\n    \"traderCommunication\": \"EM\",\r\n    \"traderCommunicationRef\": \"atlas@yopmail.com\",\r\n    \"traderAddress\": {\r\n        \"id\": \"f6968f7d-5643-4f47-a1f7-e1d9f1ca1368\",\r\n        \"street\": \"Jeddah 7777\",\r\n        \"city\": \"Jeddah\",\r\n        \"poBoxNumber\": \"10101010\",\r\n        \"countryCode\": \"SA\",\r\n        \"address1\": \"111111\",\r\n        \"address2\": \"111111\",\r\n        \"address3\": \"11111\",\r\n        \"country\": \"SA\"\r\n    },\r\n    \"traderCountry\": \"SA\",\r\n    \"procedureCode\": \"4\",\r\n    \"transportModeCode\": \"1\",\r\n    \"lines\": [\r\n        {\r\n            \"id\": \"{{IDReference_LineBulkIM}}\",\r\n            \"commodityClassification\": \"01061200\",\r\n            \"commercialGoodsDesc\": \"4343\",\r\n            \"supplementaryQuantity\": 200,\r\n            \"permitReferences\": [\r\n                \"2100003083\"\r\n            ],\r\n            \"goodsStatusCode\": null,\r\n            \"countryOriginCode\": \"AD\",\r\n            \"regionOriginCode\": \"08\",\r\n            \"declaredValue\": 1200,\r\n            \"dutyAssessmentValue\": 1200,\r\n            \"freightCharge\": 0,\r\n            \"insuranceCharge\": 0,\r\n            \"tariffPreferenceClaimedCode\": null,\r\n            \"govtProcedureClaimedCode\": null,\r\n            \"containerReferences\": [\r\n                \"4354545\"\r\n            ],\r\n            \"numberPackages\": 20000,\r\n            \"grossWeight\": 20000,\r\n            \"netWeight\": null,\r\n            \"seqNumber\": 1,\r\n            \"hash\": {{Reference_LineBulkIM}},\r\n            \"vehicles\": [],\r\n            \"containers\": [\r\n                {\r\n                    \"seals\": \"4545\",\r\n                    \"containerType\": \"08GP\",\r\n                    \"containerNumber\": \"4354545\"\r\n                }\r\n            ],\r\n            \"shippingMark\": \"tt\",\r\n            \"modelVehicles\": [],\r\n            \"insuranceLocal\": 0,\r\n            \"packageOfVolM3\": 44,\r\n            \"quotaProfileId\": null,\r\n            \"deductionsLocal\": 0,\r\n            \"extFreightLocal\": 0,\r\n            \"insuranceFxRate\": \"\",\r\n            \"otherCostsLocal\": 0,\r\n            \"deductedQuantity\": null,\r\n            \"deductionsFxRate\": 0,\r\n            \"descriptionGoods\": \"-- Whales, dolphins and porpoises (mammals of the order Cetacea); manatees and dugongs (mammals of the order Sirenia); seals, sea lions and walruses (mammals of the suborder Pinnipedia)\",\r\n            \"extFreightFxRate\": \"\",\r\n            \"insuranceForeign\": null,\r\n            \"lineCurrencyCode\": \"AFN\",\r\n            \"lineExchangeRate\": 1,\r\n            \"netWeightUOMCode\": null,\r\n            \"otherCostsFxRate\": 0,\r\n            \"deductionsForeign\": 0,\r\n            \"extFreightForeign\": null,\r\n            \"otherCostsForeign\": 0,\r\n            \"previousDocuments\": [\r\n                \"{{ReferenceDecTemporary_1}}\",\r\n                \"{{ReferenceDecTemporary_2}}\"\r\n            ],\r\n            \"grossWeightUOMCode\": \"KGM\",\r\n            \"governmentProcedure\": \"4051\",\r\n            \"linePackageTypeCode\": \"1A\",\r\n            \"statisticalQuantity\": 1200,\r\n            \"statisticalUnitCode\": \"MND\",\r\n            \"valuationMethodCode\": null,\r\n            \"supplierRelationCode\": null,\r\n            \"valueForeignCurrency\": 1200,\r\n            \"insuranceCurrencyCode\": null,\r\n            \"deductionsCurrencyCode\": 0,\r\n            \"extFreightCurrencyCode\": null,\r\n            \"otherCostsCurrencyCode\": 0,\r\n            \"associatedGovtProcedure\": true,\r\n            \"valuationAdjustmentRate\": 1,\r\n            \"valuationAdjustmentValue\": 0,\r\n            \"valuationAdjustmentTypeCode\": null\r\n        }\r\n    ],\r\n    \"containers\": [\r\n        {\r\n            \"seals\": \"4545\",\r\n            \"containerType\": \"08GP\",\r\n            \"containerNumber\": \"4354545\"\r\n        }\r\n    ],\r\n    \"attachments\": [],\r\n    \"totalNetWeight\": 0,\r\n    \"totalVehicles\": 0,\r\n    \"totalContainers\": 1,\r\n    \"facilities\": [\r\n        {\r\n            \"code\": \"{{TemporaryIM_facilityCode1}}\",\r\n            \"name\": \"{{TemporaryIM_facilityName1}}\"\r\n        },\r\n        {\r\n          \r\n            \"code\": \"{{TemporaryIM_facilityCode2}}\",\r\n            \"name\": \"{{TemporaryIM_facilityName2}}\"\r\n            }\r\n    ],\r\n    \"securityDetails\": null,\r\n    \"selfDeclared\": true,\r\n    \"agentId\": \"7d4e0dcb-0e3e-4fbb-87fb-acb555ae4edd\",\r\n    \"agentBlacklistedLatest\": false,\r\n    \"id\": \"{{IDReference_BulkIM}}\",\r\n    \"reference\": null,\r\n    \"reasons\": [],\r\n    \"rejectReasons\": null,\r\n    \"cancelReasons\": null,\r\n    \"inquiries\": null,\r\n    \"errorReason\": null,\r\n    \"parties\": [],\r\n    \"remarks\": null,\r\n    \"version\": 0,\r\n    \"traderId\": \"7d4e0dcb-0e3e-4fbb-87fb-acb555ae4edd\",\r\n    \"consignor\": \"7258461309\",\r\n    \"expiryDate\": \"2025-02-24T09:37:01.134Z\",\r\n    \"totalLines\": 1,\r\n    \"arrivalDate\": \"2024-10-06T17:00:00.000Z\",\r\n    \"carrierCode\": \"44440001\",\r\n    \"incotermCode\": \"CFR\",\r\n    \"totalFreight\": 0,\r\n    \"consignorName\": \"Avis\",\r\n    \"totalPackages\": 20000,\r\n    \"898OptionalFee\": false,\r\n    \"totalDocuments\": 0,\r\n    \"totalInsurance\": 0,\r\n    \"ecvrOptionalFee\": false,\r\n    \"invoiceDocument\": [],\r\n    \"officeEntryCode\": \"MYKAB\",\r\n    \"tetsOptionalFee\": false,\r\n    \"traderReference\": null,\r\n    \"agentBlacklisted\": false,\r\n    \"consignorAddress\": \"Vietnam\",\r\n    \"consignorCountry\": \"AE\",\r\n    \"hlevyOptionalFee\": false,\r\n    \"loadingPlaceCode\": \"SAJED\",\r\n    \"securityTypeCode\": null,\r\n    \"totalGrossWeight\": 20000,\r\n    \"typeMeansTavCode\": \"1\",\r\n    \"countryExportCode\": \"AD\",\r\n    \"goodsLocationCode\": \"114466CCA\",\r\n    \"htt001OptionalFee\": false,\r\n    \"incotermPlaceCode\": \"SAJED\",\r\n    \"incotermPlaceName\": \"Jeddah\",\r\n    \"previousDocuments\": [\r\n        {\r\n            \"line\": {\r\n                \"hscode\": \"01061200\",\r\n                \"itemNumber\": 1,\r\n                \"countryOriginCode\": \"AD\",\r\n                \"governmentProcedure\": \"5100\"\r\n            },\r\n            \"altId\": \"eeyiwbaed8\",\r\n            \"seqNo\": 0,\r\n            \"itemLine\": 0,\r\n            \"reference\": \"{{ReferenceDecTemporary_1}}\",\r\n            \"facilities\": [\r\n                {\r\n                    \"code\": \"DU001\",\r\n                    \"name\": \"U001\"\r\n                }\r\n            ],\r\n            \"itemNumber\": 1,\r\n            \"allocatedPackages\": 10000,\r\n            \"availablePackages\": 10000,\r\n            \"commercialGoodsDesc\": \"Other\",\r\n            \"allocatedGrossWeight\": 10000,\r\n            \"availableGrossWeight\": 10000,\r\n            \"commodityClassification\": \"01061200\",\r\n            \"allocatedSupplementaryQuantity\": 100,\r\n            \"availableSupplementaryQuantity\": 100\r\n        },\r\n        {\r\n            \"line\": {\r\n                \"hscode\": \"01061200\",\r\n                \"itemNumber\": 1,\r\n                \"countryOriginCode\": \"AD\",\r\n                \"governmentProcedure\": \"5100\"\r\n            },\r\n            \"altId\": \"y9tk6graxi\",\r\n            \"seqNo\": 1,\r\n            \"itemLine\": 0,\r\n            \"reference\":\"{{ReferenceDecTemporary_2}}\",\r\n            \"facilities\": [\r\n                {\r\n                    \"code\": \"U002\",\r\n                    \"name\": \"U002\"\r\n                }\r\n            ],\r\n            \"itemNumber\": 1,\r\n            \"allocatedPackages\": 10000,\r\n            \"availablePackages\": 10000,\r\n            \"commercialGoodsDesc\": \"Other\",\r\n            \"allocatedGrossWeight\": 10000,\r\n            \"availableGrossWeight\": 10000,\r\n            \"commodityClassification\": \"01061200\",\r\n            \"allocatedSupplementaryQuantity\": 100,\r\n            \"availableSupplementaryQuantity\": 100\r\n        }\r\n    ],\r\n    \"traderBlacklisted\": false,\r\n    \"additionalDocument\": [],\r\n    \"chidoanOptionalFee\": false,\r\n    \"placeDischargeCode\": \"SAJED\",\r\n    \"previousDocumentNo\": null,\r\n    \"totalInvoiceAmount\": 1200,\r\n    \"transportDocuments\": [],\r\n    \"nationalMeansTavCode\": \"AD\",\r\n    \"previousDocumentDate\": null,\r\n    \"natureTransactionCode\": \"1\",\r\n    \"officeDeclarationCode\": \"MYKAB\",\r\n    \"totalInsuranceForeign\": 0,\r\n    \"consignorCommunication\": \"AH\",\r\n    \"identificationMeansTav\": \"555\",\r\n    \"totalExtFreightForeign\": 0,\r\n    \"declarationCurrencyCode\": \"AFN\",\r\n    \"traderBlacklistedLatest\": false,\r\n    \"freightApportQualifierCode\": null,\r\n    \"consignorCommunicationReference\": \"67777\",\r\n    \"type\": \"SUBMISSION\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{evn}}/api/gateway/v1/decman/forms/2/validations?",
							"host": [
								"{{evn}}"
							],
							"path": [
								"api",
								"gateway",
								"v1",
								"decman",
								"forms",
								"2",
								"validations"
							],
							"query": [
								{
									"key": "",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "SubmitDec_BulkIM",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();\r",
									"\r",
									"if(pm.response.to.have.status(200))\r",
									"{  \r",
									"    pm.execution.setNextRequest(\"SearchDecBulkIM\");\r",
									"    pm.environment.set(\"RegistrationReference_BulkIM\", data.data.registrationReference);\r",
									"    pm.environment.set(\"IDRegistrationReference_BulkIM\", data.data.request.applyTo);\r",
									"    const lineid = pm.variables.get(\"IDReference_LineBulkIMdraft\");\r",
									"    if(data.data.lines && data.data.lines.length > 0 && data.data.lines[0].id === lineid)\r",
									"    {\r",
									"        pm.environment.set(\"BulkIM_referenceLine\", data.data.lines[0].reference);\r",
									"    }\r",
									"}\r",
									"else\r",
									"{\r",
									"     pm.execution.setNextRequest(null);\r",
									"}\r",
									"pm.test(\"Status is SUBMITTED\", function () {\r",
									"    pm.expect(data.data.request.status).to.include(\"SUBMITTED\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Check the declaration after submitting it successfully.\", function () {\r",
									"    pm.expect(data.data.registrationReference).to.include(pm.variables.get(\"RegistrationReference_BulkIM\"));\r",
									"    if(data.data.lines && data.data.lines.length > 0){\r",
									"        pm.expect(data.data.lines[0].id).to.include(pm.variables.get(\"IDReference_LineBulkIMedraft\"));\r",
									"        pm.expect(data.data.lines[0].commodityClassification).to.include(pm.variables.get(\"BulkIM_commodityClassification\"));\r",
									"        pm.expect(data.data.lines[0].governmentProcedure).to.include(pm.variables.get(\"BulkIM_governmentProcedure\"));\r",
									"        pm.expect(data.data.lines[0].numberPackages).to.equal(pm.variables.get(\"BulkIM_numberPackages\")); \r",
									"        pm.expect(data.data.lines[0].grossWeight).to.equale(pm.variables.get(\"BulkIM_grossWeight\"));\r",
									"        pm.expect(data.data.lines[0].netWeight).to.equal(pm.variables.get(\"BulkIM_netWeight\"));  \r",
									"        pm.expect(data.data.lines[0].supplementaryQuantity).to.equal(pm.variables.get(\"BulkIM_supplementaryQuantity\"));\r",
									"        pm.expect(data.data.lines[0].permitReferences[0]).to.include(pm.variables.get(\"BulkIM_permitReferences\"));\r",
									"    }\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const evn = pm.variables.get(\"evn\");\r",
									"const realms = pm.variables.get(\"realms\");\r",
									"pm.sendRequest({\r",
									"      url: `${evn}/apps/keycloak/realms/${realms}/protocol/openid-connect/token`,\r",
									"      method: 'POST',\r",
									"       header: {\r",
									"    'Content-Type': 'application/x-www-form-urlencoded',\r",
									"  },\r",
									"      body: {\r",
									"          mode: 'urlencoded',\r",
									"          urlencoded: [\r",
									"            {key: \"grant_type\", value: \"password\"},\r",
									"            {key: \"client_id\", value: \"BV_SWAGGER_UI\"},\r",
									"            {key: \"username\", value: \"atlas.officer@yopmail.com\"},\r",
									"            {key: \"password\", value: \"@Ttek1234\"},\r",
									"        ]\r",
									"      }\r",
									"  }, \r",
									"  function (err, response) {\r",
									"    console.log(\"token\",response.json().access_token);\r",
									"        pm.environment.set(\"tokenIMEX\", response.json().access_token);\r",
									"  });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenIMEX}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{evn}}/api/gateway/v1/decman/requests/{{IDReference_BulkIM}}/submit",
							"host": [
								"{{evn}}"
							],
							"path": [
								"api",
								"gateway",
								"v1",
								"decman",
								"requests",
								"{{IDReference_BulkIM}}",
								"submit"
							]
						}
					},
					"response": []
				},
				{
					"name": "SearchinvoidceDec",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var dec = pm.response.json();\r",
									"\r",
									"if (pm.response.to.have.status(200)) {\r",
									"    pm.environment.set(\"InvoiceDec\", dec.data.content[0].id);\r",
									"    let status = dec.data.content[0].status;\r",
									"    console.log(status)\r",
									"    if (status === \"CREATED\") {\r",
									"    pm.execution.setNextRequest(\"Payment_DecTemporaryIM\");\r",
									"    }\r",
									"    else\r",
									"    {\r",
									"        pm.execution.setNextRequest(null)\r",
									"    }\r",
									"}\r",
									"\r",
									"pm.test(\"Check RegistrationReference_TemporaryIM\", function () {\r",
									"    pm.expect(dec.data.content[0].referenceDocument).to.include(pm.variables.get(\"RegistrationReference_TemporaryIM\"));\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.expect(dec.data.content[0].status).to.eql(\"CREATED\"); // Updated condition for 'CREATED' status\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const evn = pm.variables.get(\"evn\");\r",
									"const realms = pm.variables.get(\"realms\");\r",
									"pm.sendRequest({\r",
									"      url: `${evn}/apps/keycloak/realms/${realms}/protocol/openid-connect/token`,\r",
									"      method: 'POST',\r",
									"       header: {\r",
									"    'Content-Type': 'application/x-www-form-urlencoded',\r",
									"  },\r",
									"      body: {\r",
									"          mode: 'urlencoded',\r",
									"          urlencoded: [\r",
									"            {key: \"grant_type\", value: \"password\"},\r",
									"            {key: \"client_id\", value: \"BV_SWAGGER_UI\"},\r",
									"            {key: \"username\", value: \"atlas.cashier@yopmail.com\"},\r",
									"            {key: \"password\", value: \"@Ttek1234\"},\r",
									"        ]\r",
									"      }\r",
									"  }, \r",
									"  function (err, response) {\r",
									"    console.log(\"tokencashierCompany\",response.json().access_token);\r",
									"        pm.environment.set(\"tokencashierCompany\", response.json().access_token);\r",
									"  });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokencashierCompany}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{evn}}/api/gateway/v1/revman/invoices?&page=0&size=10&referenceDocument={{RegistrationReference_BulkIM}}",
							"host": [
								"{{evn}}"
							],
							"path": [
								"api",
								"gateway",
								"v1",
								"revman",
								"invoices"
							],
							"query": [
								{
									"key": null,
									"value": null
								},
								{
									"key": "page",
									"value": "0"
								},
								{
									"key": "size",
									"value": "10"
								},
								{
									"key": "referenceDocument",
									"value": "{{RegistrationReference_BulkIM}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Payment_DecBulkIM",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data;\r",
									"dataDec = pm.response.json();\r",
									"if(pm.response.to.have.status(200))\r",
									"{\r",
									"   pm.execution.setNextRequest(\"Releasing_DecTemporary\");\r",
									"   \r",
									"}\r",
									"else\r",
									"{\r",
									"    pm.execution.setNextRequest(null)\r",
									"}\r",
									" pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									" pm.test(\"Payment success\", function () {\r",
									"   pm.expect(dataDec.success).to.eql(true);\r",
									" })"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const evn = pm.variables.get(\"evn\");\r",
									"const realms = pm.variables.get(\"realms\");\r",
									"pm.sendRequest({\r",
									"      url: `${evn}/apps/keycloak/realms/${realms}/protocol/openid-connect/token`,\r",
									"      method: 'POST',\r",
									"       header: {\r",
									"    'Content-Type': 'application/x-www-form-urlencoded',\r",
									"  },\r",
									"      body: {\r",
									"          mode: 'urlencoded',\r",
									"          urlencoded: [\r",
									"            {key: \"grant_type\", value: \"password\"},\r",
									"            {key: \"client_id\", value: \"BV_SWAGGER_UI\"},\r",
									"            {key: \"username\", value: \"atlas.cashier@yopmail.com\"},\r",
									"            {key: \"password\", value: \"@Ttek1234\"},\r",
									"        ]\r",
									"      }\r",
									"  }, \r",
									"  function (err, response) {\r",
									"    console.log(\"tokencashierCompany\",response.json().access_token);\r",
									"        pm.environment.set(\"tokencashierCompany\", response.json().access_token);\r",
									"  });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokencashierCompany}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"paymentMethod\": \"2\",\r\n    \"bankGuarantorCode\": null,\r\n    \"bankAccountNo\": \"\",\r\n    \"receiptReference\": \"\",\r\n    \"notes\": \"6666\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{evn}}/api/gateway/v1/revman/invoices/{{InvoiceDec}}/payments/requests",
							"host": [
								"{{evn}}"
							],
							"path": [
								"api",
								"gateway",
								"v1",
								"revman",
								"invoices",
								"{{InvoiceDec}}",
								"payments",
								"requests"
							]
						}
					},
					"response": []
				},
				{
					"name": "Releasing_DecBulkIM",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var dataDec = pm.response.json();\r",
									"if(dataDec.success == true)\r",
									"{\r",
									"  pm.execution.setNextRequest(\"Release_DecBulkIM\");\r",
									"   \r",
									"}\r",
									"else\r",
									"{\r",
									"    pm.execution.setNextRequest(null)\r",
									"}\r",
									" pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									" pm.test(\"Releasing success\", function () {\r",
									"   pm.expect(dataDec.success).to.eql(true);\r",
									" })"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const evn = pm.variables.get(\"evn\");\r",
									"const realms = pm.variables.get(\"realms\");\r",
									"pm.sendRequest({\r",
									"      url: `${evn}/apps/keycloak/realms/${realms}/protocol/openid-connect/token`,\r",
									"      method: 'POST',\r",
									"       header: {\r",
									"    'Content-Type': 'application/x-www-form-urlencoded',\r",
									"  },\r",
									"      body: {\r",
									"          mode: 'urlencoded',\r",
									"          urlencoded: [\r",
									"            {key: \"grant_type\", value: \"password\"},\r",
									"            {key: \"client_id\", value: \"BV_SWAGGER_UI\"},\r",
									"            {key: \"username\", value: \"customs.officer@yopmail.com\"},\r",
									"            {key: \"password\", value: \"@Ttek1234\"},\r",
									"        ]\r",
									"      }\r",
									"  }, \r",
									"  function (err, response) {\r",
									"    console.log(\"tokencustomofficer\",response.json().access_token);\r",
									"        pm.environment.set(\"tokencustomofficer\", response.json().access_token);\r",
									"  });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokencustomofficer}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{evn}}/api/gateway/v1/decman/declarations/{{IDRegistrationReference_BulkIM}}/releasing",
							"host": [
								"{{evn}}"
							],
							"path": [
								"api",
								"gateway",
								"v1",
								"decman",
								"declarations",
								"{{IDRegistrationReference_BulkIM}}",
								"releasing"
							]
						}
					},
					"response": []
				},
				{
					"name": "Release_DecBulkIM",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var dataDec = pm.response.json();\r",
									"if(dataDec.success == true)\r",
									"{\r",
									"  pm.execution.setNextRequest(\"ReEXFull\");\r",
									"   \r",
									"}\r",
									"else\r",
									"{\r",
									"     pm.execution.setNextRequest(null)\r",
									"}\r",
									" pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									" pm.test(\"Release success\", function () {\r",
									"   pm.expect(dataDec.success).to.eql(true);\r",
									" })\r",
									"  pm.test(\"Check the declaration after release success.\", function () {\r",
									"\r",
									"     pm.expect(dataDec.data.declarationReference).to.include(pm.variables.get(\"RegistrationReference_TemporaryIM\"));\r",
									"     pm.expect(dataDec.data.releasedReference).to.is.not.null;\r",
									"\r",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const evn = pm.variables.get(\"evn\");\r",
									"const realms = pm.variables.get(\"realms\");\r",
									"pm.sendRequest({\r",
									"      url: `${evn}/apps/keycloak/realms/${realms}/protocol/openid-connect/token`,\r",
									"      method: 'POST',\r",
									"       header: {\r",
									"    'Content-Type': 'application/x-www-form-urlencoded',\r",
									"  },\r",
									"      body: {\r",
									"          mode: 'urlencoded',\r",
									"          urlencoded: [\r",
									"            {key: \"grant_type\", value: \"password\"},\r",
									"            {key: \"client_id\", value: \"BV_SWAGGER_UI\"},\r",
									"            {key: \"username\", value: \"customs.officer@yopmail.com\"},\r",
									"            {key: \"password\", value: \"@Ttek1234\"},\r",
									"        ]\r",
									"      }\r",
									"  }, \r",
									"  function (err, response) {\r",
									"    console.log(\"tokencustomofficer\",response.json().access_token);\r",
									"        pm.environment.set(\"tokencustomofficer\", response.json().access_token);\r",
									"  });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokencustomofficer}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{evn}}/api/gateway/v1/decman/declarations/{{IDRegistrationReference_BulkIM}}/release-orders",
							"host": [
								"{{evn}}"
							],
							"path": [
								"api",
								"gateway",
								"v1",
								"decman",
								"declarations",
								"{{IDRegistrationReference_BulkIM}}",
								"release-orders"
							]
						}
					},
					"response": []
				},
				{
					"name": "Checkdata_AfterReleaseBulkIM",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();\r",
									"// const Dec1 =  pm.variables.get(\"ReferenceDecTemporary_1\");\r",
									"// const Dec2 = pm.variables.get(\"ReferenceDecTemporary_2\");\r",
									"pm.test(`Checkdata_AfterReleaseBulkIM: Declaration Temporary IM status should include \"CLOSED\" and Declaration Bulk Import should include \"RELEASED\"`, function () {\r",
									"   for (let i = 0; i < data.data.content.length; i++) { \r",
									"    const reference = data.data.content[i].reference;\r",
									"\r",
									"    switch (reference) {\r",
									"        case pm.variables.get(\"ReferenceDecTemporary_1\"):\r",
									"            console.log(\"test\", data.data.content[i].status);\r",
									"            pm.expect(data.data.content[i].status).to.include(\"CLOSED\");\r",
									"            break;\r",
									"\r",
									"        case pm.variables.get(\"ReferenceDecTemporary_2\"):\r",
									"            console.log(\"test\", data.data.content[i].status);\r",
									"            pm.expect(data.data.content[i].status).to.include(\"CLOSED\");\r",
									"            break;\r",
									"        case pm.variables.get(\"RegistrationReference_BulkIM\"):\r",
									"            console.log(\"test\", data.data.content[i].status);\r",
									"            pm.expect(data.data.content[i].status).to.include(\"RELEASED\");\r",
									"            break;\r",
									"\r",
									"        default:\r",
									"            // Optional: handle cases where the reference doesn't match\r",
									"            console.log(\"No matching reference found\");\r",
									"            break;\r",
									"    }\r",
									"}\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const evn = pm.variables.get(\"evn\");\r",
									"const realms = pm.variables.get(\"realms\");\r",
									"pm.sendRequest({\r",
									"      url: `${evn}/apps/keycloak/realms/${realms}/protocol/openid-connect/token`,\r",
									"      method: 'POST',\r",
									"       header: {\r",
									"    'Content-Type': 'application/x-www-form-urlencoded',\r",
									"  },\r",
									"      body: {\r",
									"          mode: 'urlencoded',\r",
									"          urlencoded: [\r",
									"            {key: \"grant_type\", value: \"password\"},\r",
									"            {key: \"client_id\", value: \"BV_SWAGGER_UI\"},\r",
									"            {key: \"username\", value: \"atlas.officer@yopmail.com\"},\r",
									"            {key: \"password\", value: \"@Ttek1234\"},\r",
									"        ]\r",
									"      }\r",
									"  }, \r",
									"  function (err, response) {\r",
									"    console.log(\"token\",response.json().access_token);\r",
									"        pm.environment.set(\"tokenIMEX\", response.json().access_token);\r",
									"  });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenIMEX}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"logic\": \"and\",\r\n    \"rules\": [\r\n        {\r\n            \"field\": \"reference\",\r\n            \"operator\": \"in\",\r\n            \"value\": [\r\n                \"{{ReferenceDecTemporary_1}}\",\r\n                \"{{ReferenceDecTemporary_2}}\",\r\n                \"{{RegistrationReference_BulkIM}}\"\r\n            ]\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{evn}}/api/gateway/v1/decman/declarations/advanced-search?page=0&size=10",
							"host": [
								"{{evn}}"
							],
							"path": [
								"api",
								"gateway",
								"v1",
								"decman",
								"declarations",
								"advanced-search"
							],
							"query": [
								{
									"key": "page",
									"value": "0"
								},
								{
									"key": "size",
									"value": "10"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Warehousing",
			"item": [
				{
					"name": "CreateDec_Warehousing",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data;\r",
									"data = pm.response.json();\r",
									"if(data)\r",
									"{\r",
									"   pm.environment.set(\"IDReference_Warehousingdraft\", data.data.id);\r",
									"    pm.environment.set(\"Reference_Warehousingdraft\", data.data.reference);\r",
									"    pm.environment.set(\"IDReference_LineWarehousingdraft\", data.data.lines[0].id);\r",
									"    pm.environment.set(\"Reference_LineWarehousingdraft\", data.data.lines[0].hash);\r",
									"   \r",
									"   \r",
									"}\r",
									"pm.test(\"Status is DRAFT\", function () {\r",
									"    pm.expect(data.data.status).to.include(\"DRAFT\");\r",
									"});\r",
									"pm.test(\"line array has a length of 1\", function () {\r",
									"    pm.expect(data.data.lines).to.have.lengthOf(1);\r",
									"});\r",
									"\r",
									"pm.test(\"Response status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"if(pm.response.to.have.status(200))\r",
									"{\r",
									"   pm.execution.setNextRequest(\"ValidationDec_Warehousing\");\r",
									"  \r",
									"}\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const evn = pm.variables.get(\"evn\");\r",
									"const realms = pm.variables.get(\"realms\");\r",
									"pm.sendRequest({\r",
									"      url: `${evn}/apps/keycloak/realms/${realms}/protocol/openid-connect/token`,\r",
									"      method: 'POST',\r",
									"       header: {\r",
									"    'Content-Type': 'application/x-www-form-urlencoded',\r",
									"  },\r",
									"      body: {\r",
									"          mode: 'urlencoded',\r",
									"          urlencoded: [\r",
									"            {key: \"grant_type\", value: \"password\"},\r",
									"            {key: \"client_id\", value: \"BV_SWAGGER_UI\"},\r",
									"            {key: \"username\", value: \"atlas.officer@yopmail.com\"},\r",
									"            {key: \"password\", value: \"@Ttek1234\"},\r",
									"        ]\r",
									"      }\r",
									"  }, \r",
									"  function (err, response) {\r",
									"    console.log(\"token\",response.json().access_token);\r",
									"        pm.environment.set(\"tokenIMEX\", response.json().access_token);\r",
									"  });\r",
									"//   //   pm.environment.set(\"LPCO\", \"2100003083\");\r",
									"//Data Dev\r",
									"  pm.environment.set(\"guarantee\",\"100001763BGI24082024-EFCW\");\r",
									" pm.environment.set(\"facilityCode\",\"PO001\");\r",
									"  pm.environment.set(\"facilityName\", \"POST001\");\r",
									" pm.environment.set(\"LPCO\", \"2100001392\");\r",
									"//Data Staging\r",
									"//   pm.environment.set(\"guarantee\",\"100001484BGI06022024-EFCW\");\r",
									"//  pm.environment.set(\"facilityCode\",\"WHO001\");\r",
									"//   pm.environment.set(\"facilityName\", \"Warahouse001\");\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenIMEX}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"type\": \"SUBMISSION\",\r\n    \"data\": {\r\n        \"status\": \"DRAFT\",\r\n        \"regimeCode\": \"2\",\r\n        \"agentName\": \"Atlas World Logistics\",\r\n        \"agentTaxId\": \"90184561\",\r\n        \"agentBizFunction\": \"IM\",\r\n        \"agentCommunication\": \"EM\",\r\n        \"agentCommunicationRef\": \"atlas@yopmail.com\",\r\n        \"agentAddress\": null,\r\n        \"agentCountry\": null,\r\n        \"carrierName\": \"44440001 - Da Hua\",\r\n        \"traderName\": \"Atlas World Logistics\",\r\n        \"traderTaxId\": \"90184561\",\r\n        \"traderBizFunction\": \"IM\",\r\n        \"traderCommunication\": \"EM\",\r\n        \"traderCommunicationRef\": \"atlas@yopmail.com\",\r\n        \"traderAddress\": {\r\n            \"id\": \"f6968f7d-5643-4f47-a1f7-e1d9f1ca1368\",\r\n            \"street\": \"Jeddah 7777\",\r\n            \"city\": \"Jeddah\",\r\n            \"poBoxNumber\": \"10101010\",\r\n            \"countryCode\": \"SA\",\r\n            \"address1\": \"111111\",\r\n            \"address2\": \"111111\",\r\n            \"address3\": \"11111\"\r\n        },\r\n        \"traderCountry\": \"SA\",\r\n        \"procedureCode\": \"7\",\r\n        \"transportModeCode\": \"1\",\r\n        \"lines\": [\r\n            {\r\n                \"modelVehicles\": [],\r\n                \"otherCostsLocal\": 0,\r\n                \"otherCostsForeign\": 0,\r\n                \"otherCostsCurrencyCode\": 0,\r\n                \"otherCostsFxRate\": 0,\r\n                \"deductionsLocal\": 0,\r\n                \"deductionsForeign\": 0,\r\n                \"deductionsCurrencyCode\": 0,\r\n                \"deductionsFxRate\": 0,\r\n                \"valuationAdjustmentRate\": 1,\r\n                \"commodityClassification\": \"01012153\",\r\n                \"commercialGoodsDesc\": \"Oranges\",\r\n                \"supplementaryQuantity\": 500,\r\n                \"goodsStatusCode\": \"1\",\r\n                \"countryOriginCode\": \"AD\",\r\n                \"regionOriginCode\": \"GU\",\r\n                \"numberPackages\": 10000,\r\n                \"grossWeight\": 10000,\r\n                \"valuationMethodCode\": \"1\",\r\n                \"grossWeightUOMCode\": \"KGM\",\r\n                \"netWeightUOMCode\": \"KGM\",\r\n                \"manufacture\": \"Godi Cheese With Vegetable Oil\",\r\n                \"lineCurrencyCode\": \"AFN\",\r\n                \"valueForeignCurrency\": 15000,\r\n                \"governmentProcedure\": \"7000\",\r\n                \"valuationMethod\": \"1\",\r\n                \"extFreightCurrencyCode\": \"USD\",\r\n                \"extFreightForeign\": 2000,\r\n                \"insuranceCurrencyCode\": \"USD\",\r\n                \"insuranceForeign\": 2000,\r\n                \"valuationAdjustmentValue\": 0,\r\n                \"supplierRelationCode\": \"135\",\r\n                \"linePackageTypeCode\": \"4A\",\r\n                \"packageOfVolM3\": 1,\r\n                \"shippingMark\": \"Oranges contained in two container\",\r\n                \"containerReferences\": [\r\n                    \"MSCU2092276\",\r\n                    \"IPXU2148384\"\r\n                ],\r\n                \"containers\": [\r\n                    {\r\n                        \"containerType\": \"20R0\",\r\n                        \"containerNumber\": \"MSCU2092276\",\r\n                        \"seals\": \"4000001, 4000002, 4000003, 4000004\"\r\n                    },\r\n                    {\r\n                        \"containerType\": \"20R0\",\r\n                        \"containerNumber\": \"IPXU2148384\",\r\n                        \"seals\": \"5000001, 5000002, 5000003, 5000004\"\r\n                    }\r\n                ],\r\n                \"seqNumber\": 1,\r\n                \"hash\": \"4dhhikzfk8j\",\r\n                \"lineExchangeRate\": 1,\r\n                \"insuranceFxRate\": \"\",\r\n                \"insuranceLocal\": 0,\r\n                \"declaredValue\": 15000,\r\n                \"dutyAssessmentValue\": 15000,\r\n                \"statisticalQuantity\": 0,\r\n                \"freightCharge\": 0,\r\n                \"insuranceCharge\": 0,\r\n                \"extFreightFxRate\": \"\",\r\n                \"extFreightLocal\": 0,\r\n                \"descriptionGoods\": \"----10101\",\r\n                \"statisticalUnitCode\": \"KGM\",\r\n                \"associatedGovtProcedure\": true\r\n            }\r\n        ],\r\n        \"containers\": [\r\n            {\r\n                \"containerType\": \"20R0\",\r\n                \"containerNumber\": \"MSCU2092276\",\r\n                \"seals\": \"4000001, 4000002, 4000003, 4000004\"\r\n            },\r\n            {\r\n                \"containerType\": \"20R0\",\r\n                \"containerNumber\": \"IPXU2148384\",\r\n                \"seals\": \"5000001, 5000002, 5000003, 5000004\"\r\n            }\r\n        ],\r\n        \"attachments\": [],\r\n        \"totalNetWeight\": 0,\r\n        \"totalVehicles\": 0,\r\n        \"totalContainers\": 2,\r\n        \"officeEntryCode\": \"SAJED\",\r\n        \"officeExportCode\": \"SAJED\",\r\n        \"officeDeclarationCode\": \"GHABO\",\r\n        \"securityTypeCode\": \"BON\",\r\n         \"securityDetails\": \"{{guarantee}}\",\r\n        \"totalFreight\": 0,\r\n        \"totalGrossWeight\": 10000,\r\n        \"totalInvoiceAmount\": 15000,\r\n        \"totalPackages\": 10000,\r\n        \"totalInsurance\": 0,\r\n        \"totalLines\": 1,\r\n        \"totalDocuments\": 0,\r\n        \"arrivalDate\": \"2022-10-05T00:00:00.000Z\",\r\n        \"facilities\": [\r\n            {\r\n                \"code\": \"{{facilityCode}}\",\r\n                \"name\": \"{{facilityName}}\"\r\n            }\r\n        ],\r\n        \"carrierCode\": \"44440001\",\r\n        \"countryExportCode\": \"AD\",\r\n        \"typeMeansTavCode\": \"1\",\r\n        \"nationalMeansTavCode\": \"IN\",\r\n        \"identificationMeansTav\": \"SA578\",\r\n        \"freightApportQualifierCode\": \"VAL\",\r\n        \"goodsLocationCode\": \"889911CCA\",\r\n        \"freightApportQualifier\": \"VOL\",\r\n        \"parties\": [\r\n            {\r\n                \"type\": \"NOTIFY_PARTIES\",\r\n                \"name\": \"Godi Cheese With Vegetable Oil\",\r\n                \"address\": \"1001 Industry Rd, Suite AKenner, LA 70062\",\r\n                \"communication\": \"TE\",\r\n                \"communicationReference\": \"973172696\"\r\n            }\r\n        ],\r\n        \"packages\": [\r\n            {\r\n                \"packageType\": \"1A\",\r\n                \"total\": 1000\r\n            }\r\n        ],\r\n        \"previousDocumentNo\": null,\r\n        \"previousDocumentDate\": null,\r\n        \"countryDestinationCode\": \"AD\",\r\n        \"loadingPlaceCode\": \"GHABK\",\r\n        \"placeDischargeCode\": \"GHABO\",\r\n        \"typeMeansTadCode\": \"1\",\r\n        \"nationalMeansTadCode\": \"AD\",\r\n        \"remarks\": null,\r\n        \"totalInsuranceForeign\": 2000,\r\n        \"traderTaxIdName\": \"Atlas World Logistics\",\r\n        \"agentId\": \"7d4e0dcb-0e3e-4fbb-87fb-acb555ae4edd\",\r\n        \"agentBlacklistedLatest\": false,\r\n        \"traderId\": \"7d4e0dcb-0e3e-4fbb-87fb-acb555ae4edd\",\r\n        \"traderBlacklistedLatest\": false,\r\n        \"consignorName\": null,\r\n        \"consignorCommunication\": null,\r\n        \"consignorAddress\": null,\r\n        \"consignorCountry\": null,\r\n        \"consignorCommunicationReference\": null,\r\n        \"declarationCurrencyCode\": \"AFN\",\r\n        \"transportDocuments\": [],\r\n        \"commodityClassification\": [],\r\n        \"commercialGoodsDesc\": null,\r\n        \"countryOriginCode\": null,\r\n        \"statisticalUnitCode\": null,\r\n        \"statisticalQuantity\": null,\r\n        \"supplementaryQuantity\": null,\r\n        \"governmentProcedure\": null,\r\n        \"valueForeignCurrency\": null,\r\n        \"lineCurrencyCode\": null,\r\n        \"lineExchangeRate\": null,\r\n        \"declaredValue\": 15000,\r\n        \"dutyAssessmentValue\": null,\r\n        \"extFreightForeign\": null,\r\n        \"extFreightCurrencyCode\": null,\r\n        \"extFreightFxRate\": null,\r\n        \"extFreightLocal\": null,\r\n        \"insuranceForeign\": null,\r\n        \"insuranceCurrencyCode\": null,\r\n        \"insuranceFxRate\": null,\r\n        \"insuranceLocal\": null,\r\n        \"valuationAdjustmentRate\": null,\r\n        \"valuationAdjustmentValue\": null,\r\n        \"valuationAdjustmentTypeCode\": null,\r\n        \"numberPackages\": null,\r\n        \"linePackageTypeCode\": null,\r\n        \"packageOfVolM3\": null,\r\n        \"shippingMark\": null,\r\n        \"grossWeight\": null,\r\n        \"grossWeightUOMCode\": null,\r\n        \"netWeight\": null,\r\n        \"netWeightUOMCode\": null,\r\n        \"vehicles\": [],\r\n        \"containerReferences\": [],\r\n        \"ecvrOptionalFee\": false,\r\n        \"htt001OptionalFee\": false,\r\n        \"hlevyOptionalFee\": false,\r\n        \"totalExtFreightForeign\": null\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{evn}}/api/gateway/v1/decman/requests",
							"host": [
								"{{evn}}"
							],
							"path": [
								"api",
								"gateway",
								"v1",
								"decman",
								"requests"
							]
						}
					},
					"response": [
						{
							"name": "CreateDec_Warehousing",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"type\": \"SUBMISSION\",\r\n    \"data\": {\r\n        \"status\": \"DRAFT\",\r\n        \"regimeCode\": \"2\",\r\n        \"agentName\": \"Atlas World Logistics\",\r\n        \"agentTaxId\": \"90184561\",\r\n        \"agentBizFunction\": \"IM\",\r\n        \"agentCommunication\": \"EM\",\r\n        \"agentCommunicationRef\": \"atlas@yopmail.com\",\r\n        \"agentAddress\": null,\r\n        \"agentCountry\": null,\r\n        \"carrierName\": \"44440001 - Da Hua\",\r\n        \"traderName\": \"Atlas World Logistics\",\r\n        \"traderTaxId\": \"90184561\",\r\n        \"traderBizFunction\": \"IM\",\r\n        \"traderCommunication\": \"EM\",\r\n        \"traderCommunicationRef\": \"atlas@yopmail.com\",\r\n        \"traderAddress\": {\r\n            \"id\": \"f6968f7d-5643-4f47-a1f7-e1d9f1ca1368\",\r\n            \"street\": \"Jeddah 7777\",\r\n            \"city\": \"Jeddah\",\r\n            \"poBoxNumber\": \"10101010\",\r\n            \"countryCode\": \"SA\",\r\n            \"address1\": \"111111\",\r\n            \"address2\": \"111111\",\r\n            \"address3\": \"11111\"\r\n        },\r\n        \"traderCountry\": \"SA\",\r\n        \"procedureCode\": \"7\",\r\n        \"transportModeCode\": \"1\",\r\n        \"lines\": [\r\n            {\r\n                \"modelVehicles\": [],\r\n                \"otherCostsLocal\": 0,\r\n                \"otherCostsForeign\": 0,\r\n                \"otherCostsCurrencyCode\": 0,\r\n                \"otherCostsFxRate\": 0,\r\n                \"deductionsLocal\": 0,\r\n                \"deductionsForeign\": 0,\r\n                \"deductionsCurrencyCode\": 0,\r\n                \"deductionsFxRate\": 0,\r\n                \"valuationAdjustmentRate\": 1,\r\n                \"commodityClassification\": \"01012153\",\r\n                \"commercialGoodsDesc\": \"Oranges\",\r\n                \"supplementaryQuantity\": 500,\r\n                \"goodsStatusCode\": \"1\",\r\n                \"countryOriginCode\": \"AD\",\r\n                \"regionOriginCode\": \"GU\",\r\n                \"numberPackages\": 10000,\r\n                \"grossWeight\": 10000,\r\n                \"valuationMethodCode\": \"1\",\r\n                \"grossWeightUOMCode\": \"KGM\",\r\n                \"netWeightUOMCode\": \"KGM\",\r\n                \"manufacture\": \"Godi Cheese With Vegetable Oil\",\r\n                \"lineCurrencyCode\": \"AFN\",\r\n                \"valueForeignCurrency\": 15000,\r\n                \"governmentProcedure\": \"7000\",\r\n                \"valuationMethod\": \"1\",\r\n                \"extFreightCurrencyCode\": \"USD\",\r\n                \"extFreightForeign\": 2000,\r\n                \"insuranceCurrencyCode\": \"USD\",\r\n                \"insuranceForeign\": 2000,\r\n                \"valuationAdjustmentValue\": 0,\r\n                \"supplierRelationCode\": \"135\",\r\n                \"linePackageTypeCode\": \"4A\",\r\n                \"packageOfVolM3\": 1,\r\n                \"shippingMark\": \"Oranges contained in two container\",\r\n                \"containerReferences\": [\r\n                    \"MSCU2092276\",\r\n                    \"IPXU2148384\"\r\n                ],\r\n                \"containers\": [\r\n                    {\r\n                        \"containerType\": \"20R0\",\r\n                        \"containerNumber\": \"MSCU2092276\",\r\n                        \"seals\": \"4000001, 4000002, 4000003, 4000004\"\r\n                    },\r\n                    {\r\n                        \"containerType\": \"20R0\",\r\n                        \"containerNumber\": \"IPXU2148384\",\r\n                        \"seals\": \"5000001, 5000002, 5000003, 5000004\"\r\n                    }\r\n                ],\r\n                \"seqNumber\": 1,\r\n                \"hash\": \"4dhhikzfk8j\",\r\n                \"lineExchangeRate\": 1,\r\n                \"insuranceFxRate\": \"\",\r\n                \"insuranceLocal\": 0,\r\n                \"declaredValue\": 15000,\r\n                \"dutyAssessmentValue\": 15000,\r\n                \"statisticalQuantity\": 0,\r\n                \"freightCharge\": 0,\r\n                \"insuranceCharge\": 0,\r\n                \"extFreightFxRate\": \"\",\r\n                \"extFreightLocal\": 0,\r\n                \"descriptionGoods\": \"----10101\",\r\n                \"statisticalUnitCode\": \"KGM\",\r\n                \"associatedGovtProcedure\": true\r\n            }\r\n        ],\r\n        \"containers\": [\r\n            {\r\n                \"containerType\": \"20R0\",\r\n                \"containerNumber\": \"MSCU2092276\",\r\n                \"seals\": \"4000001, 4000002, 4000003, 4000004\"\r\n            },\r\n            {\r\n                \"containerType\": \"20R0\",\r\n                \"containerNumber\": \"IPXU2148384\",\r\n                \"seals\": \"5000001, 5000002, 5000003, 5000004\"\r\n            }\r\n        ],\r\n        \"attachments\": [],\r\n        \"totalNetWeight\": 0,\r\n        \"totalVehicles\": 0,\r\n        \"totalContainers\": 2,\r\n        \"officeEntryCode\": \"SAJED\",\r\n        \"officeExportCode\": \"SAJED\",\r\n        \"officeDeclarationCode\": \"GHABO\",\r\n        \"securityTypeCode\": \"BON\",\r\n         \"securityDetails\": \"{{guarantee}}\",\r\n        \"totalFreight\": 0,\r\n        \"totalGrossWeight\": 10000,\r\n        \"totalInvoiceAmount\": 15000,\r\n        \"totalPackages\": 10000,\r\n        \"totalInsurance\": 0,\r\n        \"totalLines\": 1,\r\n        \"totalDocuments\": 0,\r\n        \"arrivalDate\": \"2022-10-05T00:00:00.000Z\",\r\n        \"facilities\": [\r\n            {\r\n                \"code\": \"{{facilityCode}}\",\r\n                \"name\": \"{{facilityName}}\"\r\n            }\r\n        ],\r\n        \"carrierCode\": \"44440001\",\r\n        \"countryExportCode\": \"AD\",\r\n        \"typeMeansTavCode\": \"1\",\r\n        \"nationalMeansTavCode\": \"IN\",\r\n        \"identificationMeansTav\": \"SA578\",\r\n        \"freightApportQualifierCode\": \"VAL\",\r\n        \"goodsLocationCode\": \"889911CCA\",\r\n        \"freightApportQualifier\": \"VOL\",\r\n        \"parties\": [\r\n            {\r\n                \"type\": \"NOTIFY_PARTIES\",\r\n                \"name\": \"Godi Cheese With Vegetable Oil\",\r\n                \"address\": \"1001 Industry Rd, Suite AKenner, LA 70062\",\r\n                \"communication\": \"TE\",\r\n                \"communicationReference\": \"973172696\"\r\n            }\r\n        ],\r\n        \"packages\": [\r\n            {\r\n                \"packageType\": \"1A\",\r\n                \"total\": 1000\r\n            }\r\n        ],\r\n        \"previousDocumentNo\": null,\r\n        \"previousDocumentDate\": null,\r\n        \"countryDestinationCode\": \"AD\",\r\n        \"loadingPlaceCode\": \"GHABK\",\r\n        \"placeDischargeCode\": \"GHABO\",\r\n        \"typeMeansTadCode\": \"1\",\r\n        \"nationalMeansTadCode\": \"AD\",\r\n        \"remarks\": null,\r\n        \"totalInsuranceForeign\": 2000,\r\n        \"traderTaxIdName\": \"Atlas World Logistics\",\r\n        \"agentId\": \"7d4e0dcb-0e3e-4fbb-87fb-acb555ae4edd\",\r\n        \"agentBlacklistedLatest\": false,\r\n        \"traderId\": \"7d4e0dcb-0e3e-4fbb-87fb-acb555ae4edd\",\r\n        \"traderBlacklistedLatest\": false,\r\n        \"consignorName\": null,\r\n        \"consignorCommunication\": null,\r\n        \"consignorAddress\": null,\r\n        \"consignorCountry\": null,\r\n        \"consignorCommunicationReference\": null,\r\n        \"declarationCurrencyCode\": \"AFN\",\r\n        \"transportDocuments\": [],\r\n        \"commodityClassification\": [],\r\n        \"commercialGoodsDesc\": null,\r\n        \"countryOriginCode\": null,\r\n        \"statisticalUnitCode\": null,\r\n        \"statisticalQuantity\": null,\r\n        \"supplementaryQuantity\": null,\r\n        \"governmentProcedure\": null,\r\n        \"valueForeignCurrency\": null,\r\n        \"lineCurrencyCode\": null,\r\n        \"lineExchangeRate\": null,\r\n        \"declaredValue\": 15000,\r\n        \"dutyAssessmentValue\": null,\r\n        \"extFreightForeign\": null,\r\n        \"extFreightCurrencyCode\": null,\r\n        \"extFreightFxRate\": null,\r\n        \"extFreightLocal\": null,\r\n        \"insuranceForeign\": null,\r\n        \"insuranceCurrencyCode\": null,\r\n        \"insuranceFxRate\": null,\r\n        \"insuranceLocal\": null,\r\n        \"valuationAdjustmentRate\": null,\r\n        \"valuationAdjustmentValue\": null,\r\n        \"valuationAdjustmentTypeCode\": null,\r\n        \"numberPackages\": null,\r\n        \"linePackageTypeCode\": null,\r\n        \"packageOfVolM3\": null,\r\n        \"shippingMark\": null,\r\n        \"grossWeight\": null,\r\n        \"grossWeightUOMCode\": null,\r\n        \"netWeight\": null,\r\n        \"netWeightUOMCode\": null,\r\n        \"vehicles\": [],\r\n        \"containerReferences\": [],\r\n        \"ecvrOptionalFee\": false,\r\n        \"htt001OptionalFee\": false,\r\n        \"hlevyOptionalFee\": false,\r\n        \"totalExtFreightForeign\": null\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://bv-{{evn}}.ttekglobal.com/api/gateway/v1/decman/requests",
									"protocol": "https",
									"host": [
										"bv-{{evn}}",
										"ttekglobal",
										"com"
									],
									"path": [
										"api",
										"gateway",
										"v1",
										"decman",
										"requests"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "x-content-type-options",
									"value": "nosniff"
								},
								{
									"key": "x-xss-protection",
									"value": "1; mode=block"
								},
								{
									"key": "cache-control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "pragma",
									"value": "no-cache"
								},
								{
									"key": "expires",
									"value": "0"
								},
								{
									"key": "strict-transport-security",
									"value": "max-age=31536000 ; includeSubDomains"
								},
								{
									"key": "x-frame-options",
									"value": "DENY"
								},
								{
									"key": "date",
									"value": "Fri, 08 Nov 2024 14:59:52 GMT"
								},
								{
									"key": "x-envoy-upstream-service-time",
									"value": "74"
								},
								{
									"key": "server",
									"value": "istio-envoy"
								},
								{
									"key": "referrer-policy",
									"value": "no-referrer"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "transfer-encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"data\": {\n        \"id\": \"8e7555fd-71f3-4df9-a0af-6a200e3f19f3\",\n        \"reference\": \"271100005484\",\n        \"lines\": [\n            {\n                \"id\": \"b9d89e51-4e47-4d28-bfe2-b0c474b90350\",\n                \"commodityClassification\": \"01012153\",\n                \"commercialGoodsDesc\": \"Oranges\",\n                \"supplementaryQuantity\": 500,\n                \"permitReferences\": null,\n                \"goodsStatusCode\": \"1\",\n                \"countryOriginCode\": \"AD\",\n                \"regionOriginCode\": \"GU\",\n                \"declaredValue\": 15000,\n                \"dutyAssessmentValue\": 15000,\n                \"freightCharge\": 0,\n                \"insuranceCharge\": 0,\n                \"tariffPreferenceClaimedCode\": null,\n                \"govtProcedureClaimedCode\": null,\n                \"containerReferences\": [\n                    \"MSCU2092276\",\n                    \"IPXU2148384\"\n                ],\n                \"numberPackages\": 10000,\n                \"grossWeight\": 10000,\n                \"netWeight\": null,\n                \"seqNumber\": 1,\n                \"modelVehicles\": [],\n                \"otherCostsLocal\": 0,\n                \"otherCostsForeign\": 0,\n                \"otherCostsCurrencyCode\": 0,\n                \"otherCostsFxRate\": 0,\n                \"deductionsLocal\": 0,\n                \"deductionsForeign\": 0,\n                \"deductionsCurrencyCode\": 0,\n                \"deductionsFxRate\": 0,\n                \"valuationAdjustmentRate\": 1,\n                \"valuationMethodCode\": \"1\",\n                \"grossWeightUOMCode\": \"KGM\",\n                \"netWeightUOMCode\": \"KGM\",\n                \"manufacture\": \"Godi Cheese With Vegetable Oil\",\n                \"lineCurrencyCode\": \"AFN\",\n                \"valueForeignCurrency\": 15000,\n                \"governmentProcedure\": \"7000\",\n                \"valuationMethod\": \"1\",\n                \"extFreightCurrencyCode\": \"USD\",\n                \"extFreightForeign\": 2000,\n                \"insuranceCurrencyCode\": \"USD\",\n                \"insuranceForeign\": 2000,\n                \"valuationAdjustmentValue\": 0,\n                \"supplierRelationCode\": \"135\",\n                \"linePackageTypeCode\": \"4A\",\n                \"packageOfVolM3\": 1,\n                \"shippingMark\": \"Oranges contained in two container\",\n                \"containers\": [\n                    {\n                        \"containerType\": \"20R0\",\n                        \"containerNumber\": \"MSCU2092276\",\n                        \"seals\": \"4000001, 4000002, 4000003, 4000004\"\n                    },\n                    {\n                        \"containerType\": \"20R0\",\n                        \"containerNumber\": \"IPXU2148384\",\n                        \"seals\": \"5000001, 5000002, 5000003, 5000004\"\n                    }\n                ],\n                \"hash\": \"4dhhikzfk8j\",\n                \"lineExchangeRate\": 1,\n                \"insuranceFxRate\": \"\",\n                \"insuranceLocal\": 0,\n                \"statisticalQuantity\": 0,\n                \"extFreightFxRate\": \"\",\n                \"extFreightLocal\": 0,\n                \"descriptionGoods\": \"----10101\",\n                \"statisticalUnitCode\": \"KGM\",\n                \"associatedGovtProcedure\": true\n            }\n        ],\n        \"attachments\": {},\n        \"reasons\": [],\n        \"rejectReasons\": null,\n        \"status\": \"DRAFT\",\n        \"cancelReasons\": null,\n        \"facilities\": [\n            {\n                \"code\": \"PO001\",\n                \"name\": \"POST001\"\n            }\n        ],\n        \"inquiries\": null,\n        \"errorReason\": null,\n        \"regimeCode\": \"2\",\n        \"transportModeCode\": \"1\",\n        \"procedureCode\": \"7\",\n        \"totalVehicles\": 0,\n        \"totalPackages\": 10000,\n        \"totalContainers\": 2,\n        \"agentName\": \"Atlas World Logistics\",\n        \"agentTaxId\": \"90184561\",\n        \"agentBizFunction\": \"IM\",\n        \"agentCommunication\": \"EM\",\n        \"agentCommunicationRef\": \"atlas@yopmail.com\",\n        \"agentAddress\": null,\n        \"agentCountry\": null,\n        \"carrierName\": \"44440001 - Da Hua\",\n        \"traderName\": \"Atlas World Logistics\",\n        \"traderTaxId\": \"90184561\",\n        \"traderBizFunction\": \"IM\",\n        \"traderCommunication\": \"EM\",\n        \"traderCommunicationRef\": \"atlas@yopmail.com\",\n        \"traderAddress\": {\n            \"id\": \"f6968f7d-5643-4f47-a1f7-e1d9f1ca1368\",\n            \"street\": \"Jeddah 7777\",\n            \"city\": \"Jeddah\",\n            \"poBoxNumber\": \"10101010\",\n            \"countryCode\": \"SA\",\n            \"address1\": \"111111\",\n            \"address2\": \"111111\",\n            \"address3\": \"11111\"\n        },\n        \"traderCountry\": \"SA\",\n        \"containers\": [\n            {\n                \"containerType\": \"20R0\",\n                \"containerNumber\": \"MSCU2092276\",\n                \"seals\": \"4000001, 4000002, 4000003, 4000004\"\n            },\n            {\n                \"containerType\": \"20R0\",\n                \"containerNumber\": \"IPXU2148384\",\n                \"seals\": \"5000001, 5000002, 5000003, 5000004\"\n            }\n        ],\n        \"totalNetWeight\": 0,\n        \"officeEntryCode\": \"SAJED\",\n        \"officeExportCode\": \"SAJED\",\n        \"officeDeclarationCode\": \"GHABO\",\n        \"securityTypeCode\": \"BON\",\n        \"securityDetails\": \"100001763BGI24082024-EFCW\",\n        \"totalFreight\": 0,\n        \"totalGrossWeight\": 10000,\n        \"totalInvoiceAmount\": 15000,\n        \"totalInsurance\": 0,\n        \"totalLines\": 1,\n        \"totalDocuments\": 0,\n        \"arrivalDate\": \"2022-10-05T00:00:00.000Z\",\n        \"carrierCode\": \"44440001\",\n        \"countryExportCode\": \"AD\",\n        \"typeMeansTavCode\": \"1\",\n        \"nationalMeansTavCode\": \"IN\",\n        \"identificationMeansTav\": \"SA578\",\n        \"freightApportQualifierCode\": \"VAL\",\n        \"goodsLocationCode\": \"889911CCA\",\n        \"freightApportQualifier\": \"VOL\",\n        \"parties\": [\n            {\n                \"type\": \"NOTIFY_PARTIES\",\n                \"name\": \"Godi Cheese With Vegetable Oil\",\n                \"address\": \"1001 Industry Rd, Suite AKenner, LA 70062\",\n                \"communication\": \"TE\",\n                \"communicationReference\": \"973172696\"\n            }\n        ],\n        \"packages\": [\n            {\n                \"packageType\": \"1A\",\n                \"total\": 1000\n            }\n        ],\n        \"previousDocumentNo\": null,\n        \"previousDocumentDate\": null,\n        \"countryDestinationCode\": \"AD\",\n        \"loadingPlaceCode\": \"GHABK\",\n        \"placeDischargeCode\": \"GHABO\",\n        \"typeMeansTadCode\": \"1\",\n        \"nationalMeansTadCode\": \"AD\",\n        \"remarks\": null,\n        \"totalInsuranceForeign\": 2000,\n        \"traderTaxIdName\": \"Atlas World Logistics\",\n        \"agentId\": \"7d4e0dcb-0e3e-4fbb-87fb-acb555ae4edd\",\n        \"agentBlacklistedLatest\": false,\n        \"traderId\": \"7d4e0dcb-0e3e-4fbb-87fb-acb555ae4edd\",\n        \"traderBlacklistedLatest\": false,\n        \"consignorName\": null,\n        \"consignorCommunication\": null,\n        \"consignorAddress\": null,\n        \"consignorCountry\": null,\n        \"consignorCommunicationReference\": null,\n        \"declarationCurrencyCode\": \"AFN\",\n        \"transportDocuments\": [],\n        \"commodityClassification\": [],\n        \"commercialGoodsDesc\": null,\n        \"countryOriginCode\": null,\n        \"statisticalUnitCode\": null,\n        \"statisticalQuantity\": null,\n        \"supplementaryQuantity\": null,\n        \"governmentProcedure\": null,\n        \"valueForeignCurrency\": null,\n        \"lineCurrencyCode\": null,\n        \"lineExchangeRate\": null,\n        \"declaredValue\": 15000,\n        \"dutyAssessmentValue\": null,\n        \"extFreightForeign\": null,\n        \"extFreightCurrencyCode\": null,\n        \"extFreightFxRate\": null,\n        \"extFreightLocal\": null,\n        \"insuranceForeign\": null,\n        \"insuranceCurrencyCode\": null,\n        \"insuranceFxRate\": null,\n        \"insuranceLocal\": null,\n        \"valuationAdjustmentRate\": null,\n        \"valuationAdjustmentValue\": null,\n        \"valuationAdjustmentTypeCode\": null,\n        \"numberPackages\": null,\n        \"linePackageTypeCode\": null,\n        \"packageOfVolM3\": null,\n        \"shippingMark\": null,\n        \"grossWeight\": null,\n        \"grossWeightUOMCode\": null,\n        \"netWeight\": null,\n        \"netWeightUOMCode\": null,\n        \"vehicles\": [],\n        \"containerReferences\": [],\n        \"ecvrOptionalFee\": false,\n        \"htt001OptionalFee\": false,\n        \"hlevyOptionalFee\": false,\n        \"totalExtFreightForeign\": null,\n        \"agentBlacklisted\": false,\n        \"traderBlacklisted\": false\n    }\n}"
						}
					]
				},
				{
					"name": "ValidationDec_Warehousing",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data;\r",
									"data = pm.response.json();\r",
									"if(data)\r",
									"{\r",
									"   pm.environment.set(\"errorCount\", data.data.errorCount);  \r",
									"}\r",
									"if (data.data.errorCount == 0)\r",
									"{\r",
									"     pm.execution.setNextRequest(\"SubmitDec_Warehousing\");\r",
									"      pm.test(\"Check if the error count is 0\", function () {\r",
									"    pm.expect(pm.environment.get(\"errorCount\")).to.equal(0);\r",
									"});\r",
									"   \r",
									"}\r",
									"else\r",
									"{\r",
									"    pm.execution.setNextRequest(null)\r",
									"      pm.test(\"Check if the error count is more than 0\", function () {\r",
									"    pm.expect(data.data.errorCount).to.be.greaterThan(0);\r",
									"});\r",
									"}\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const evn = pm.variables.get(\"evn\");\r",
									"const realms = pm.variables.get(\"realms\");\r",
									"pm.sendRequest({\r",
									"      url: `${evn}/apps/keycloak/realms/${realms}/protocol/openid-connect/token`,\r",
									"      method: 'POST',\r",
									"       header: {\r",
									"    'Content-Type': 'application/x-www-form-urlencoded',\r",
									"  },\r",
									"      body: {\r",
									"          mode: 'urlencoded',\r",
									"          urlencoded: [\r",
									"            {key: \"grant_type\", value: \"password\"},\r",
									"            {key: \"client_id\", value: \"BV_SWAGGER_UI\"},\r",
									"            {key: \"username\", value: \"atlas.officer@yopmail.com\"},\r",
									"            {key: \"password\", value: \"@Ttek1234\"},\r",
									"        ]\r",
									"      }\r",
									"  }, \r",
									"  function (err, response) {\r",
									"    console.log(\"token\",response.json().access_token);\r",
									"        pm.environment.set(\"tokenIMEX\", response.json().access_token);\r",
									"  });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenIMEX}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "// {\r\n//     \"status\": \"DRAFT\",\r\n//     \"regimeCode\": \"2\",\r\n//     \"agentName\": \"Atlas World Logistics\",\r\n//     \"agentTaxId\": \"90184561\",\r\n//     \"agentBizFunction\": \"IM\",\r\n//     \"agentCommunication\": \"EM\",\r\n//     \"agentCommunicationRef\": \"atlas@yopmail.com\",\r\n//     \"agentAddress\": {\r\n//         \"id\": \"f6968f7d-5643-4f47-a1f7-e1d9f1ca1368\",\r\n//         \"street\": \"Jeddah 7777\",\r\n//         \"city\": \"Jeddah\",\r\n//         \"poBoxNumber\": \"10101010\",\r\n//         \"countryCode\": \"SA\",\r\n//         \"address1\": \"111111\",\r\n//         \"address2\": \"111111\",\r\n//         \"address3\": \"11111\",\r\n//         \"country\": \"SA\"\r\n//     },\r\n//     \"agentCountry\": \"SA\",\r\n//     \"carrierName\": \"44440001 - Da Hua\",\r\n//     \"traderName\": \"Atlas World Logistics\",\r\n//     \"traderTaxId\": \"90184561\",\r\n//     \"traderBizFunction\": \"IM\",\r\n//     \"traderCommunication\": \"EM\",\r\n//     \"traderCommunicationRef\": \"atlas@yopmail.com\",\r\n//     \"traderAddress\": {\r\n//         \"id\": \"f6968f7d-5643-4f47-a1f7-e1d9f1ca1368\",\r\n//         \"street\": \"Jeddah 7777\",\r\n//         \"city\": \"Jeddah\",\r\n//         \"poBoxNumber\": \"10101010\",\r\n//         \"countryCode\": \"SA\",\r\n//         \"address1\": \"111111\",\r\n//         \"address2\": \"111111\",\r\n//         \"address3\": \"11111\"\r\n//     },\r\n//     \"traderCountry\": \"SA\",\r\n//     \"procedureCode\": \"7\",\r\n//     \"transportModeCode\": \"1\",\r\n//     \"lines\": [\r\n//         {\r\n//             \"id\": \"{{IDReference_LineWarehousingdraft}}\",\r\n//             \"commodityClassification\": \"01012153\",\r\n//             \"commercialGoodsDesc\": \"Oranges\",\r\n//             \"supplementaryQuantity\": 500,\r\n//             \"permitReferences\": [],\r\n//             \"goodsStatusCode\": \"1\",\r\n//             \"countryOriginCode\": \"AD\",\r\n//             \"regionOriginCode\": \"GU\",\r\n//             \"declaredValue\": 279394.229,\r\n//             \"dutyAssessmentValue\": 279394.229,\r\n//             \"freightCharge\": 136792.917,\r\n//             \"insuranceCharge\": 136792.917,\r\n//             \"tariffPreferenceClaimedCode\": null,\r\n//             \"govtProcedureClaimedCode\": null,\r\n//             \"containerReferences\": [\r\n//                 \"MSCU2092276\",\r\n//                 \"IPXU2148384\"\r\n//             ],\r\n//             \"numberPackages\": 10000,\r\n//             \"grossWeight\": 10000,\r\n//             \"netWeight\": null,\r\n//             \"seqNumber\": 1,\r\n//             \"hash\": \"{{Reference_LineWarehousingdraf}}\",\r\n//             \"containers\": [\r\n//                 {\r\n//                     \"seals\": \"4000001, 4000002, 4000003, 4000004\",\r\n//                     \"containerType\": \"20R0\",\r\n//                     \"containerNumber\": \"MSCU2092276\"\r\n//                 },\r\n//                 {\r\n//                     \"seals\": \"5000001, 5000002, 5000003, 5000004\",\r\n//                     \"containerType\": \"20R0\",\r\n//                     \"containerNumber\": \"IPXU2148384\"\r\n//                 }\r\n//             ],\r\n//             \"manufacture\": \"Godi Cheese With Vegetable Oil\",\r\n//             \"shippingMark\": \"Oranges contained in two container\",\r\n//             \"modelVehicles\": [],\r\n//             \"insuranceLocal\": 136792.917,\r\n//             \"packageOfVolM3\": 1,\r\n//             \"deductionsLocal\": 0,\r\n//             \"extFreightLocal\": 136792.917,\r\n//             \"insuranceFxRate\": 68.39645870495409,\r\n//             \"otherCostsLocal\": 0,\r\n//             \"valuationMethod\": \"1\",\r\n//             \"deductionsFxRate\": 0,\r\n//             \"descriptionGoods\": \"----10101\",\r\n//             \"extFreightFxRate\": 68.39645870495409,\r\n//             \"insuranceForeign\": 2000,\r\n//             \"lineCurrencyCode\": \"AFN\",\r\n//             \"lineExchangeRate\": 18.626281907286565,\r\n//             \"netWeightUOMCode\": \"KGM\",\r\n//             \"otherCostsFxRate\": 0,\r\n//             \"deductionsForeign\": 0,\r\n//             \"extFreightForeign\": 2000,\r\n//             \"otherCostsForeign\": 0,\r\n//             \"grossWeightUOMCode\": \"KGM\",\r\n//             \"governmentProcedure\": \"7000\",\r\n//             \"linePackageTypeCode\": \"4A\",\r\n//             \"statisticalQuantity\": 279394.229,\r\n//             \"statisticalUnitCode\": \"KGM\",\r\n//             \"valuationMethodCode\": \"1\",\r\n//             \"supplierRelationCode\": \"135\",\r\n//             \"valueForeignCurrency\": 15000,\r\n//             \"insuranceCurrencyCode\": \"USD\",\r\n//             \"deductionsCurrencyCode\": 0,\r\n//             \"extFreightCurrencyCode\": \"USD\",\r\n//             \"otherCostsCurrencyCode\": 0,\r\n//             \"associatedGovtProcedure\": true,\r\n//             \"valuationAdjustmentRate\": 1,\r\n//             \"valuationAdjustmentValue\": 0\r\n//         }\r\n//     ],\r\n//     \"containers\": [\r\n//         {\r\n//             \"seals\": \"4000001, 4000002, 4000003, 4000004\",\r\n//             \"containerType\": \"20R0\",\r\n//             \"containerNumber\": \"MSCU2092276\"\r\n//         },\r\n//         {\r\n//             \"seals\": \"5000001, 5000002, 5000003, 5000004\",\r\n//             \"containerType\": \"20R0\",\r\n//             \"containerNumber\": \"IPXU2148384\"\r\n//         }\r\n//     ],\r\n//     \"attachments\": [],\r\n//     \"totalNetWeight\": 0,\r\n//     \"totalVehicles\": 0,\r\n//     \"totalContainers\": 2,\r\n//     \"officeEntryCode\": \"SAJED\",\r\n//     \"officeExportCode\": \"SAJED\",\r\n//     \"officeDeclarationCode\": \"GHABO\",\r\n//     \"securityTypeCode\": \"BON\",\r\n//     \"securityDetails\": \"100001763BGI24082024-EFCW\",\r\n//     \"totalFreight\": 136792.917,\r\n//     \"totalGrossWeight\": 10000,\r\n//     \"totalInvoiceAmount\": 15000,\r\n//     \"totalPackages\": 10000,\r\n//     \"totalInsurance\": 136792.917,\r\n//     \"totalLines\": 1,\r\n//     \"totalDocuments\": 0,\r\n//     \"arrivalDate\": \"2022-10-05T00:00:00.000Z\",\r\n//     \"facilityCode\": \"PO001\",\r\n//     \"carrierCode\": \"44440001\",\r\n//     \"countryExportCode\": \"AD\",\r\n//     \"typeMeansTavCode\": \"1\",\r\n//     \"nationalMeansTavCode\": \"IN\",\r\n//     \"identificationMeansTav\": \"SA578\",\r\n//     \"freightApportQualifierCode\": \"VAL\",\r\n//     \"goodsLocationCode\": \"889911CCA\",\r\n//     \"freightApportQualifier\": \"VOL\",\r\n//     \"parties\": [\r\n//         {\r\n//             \"name\": \"Godi Cheese With Vegetable Oil\",\r\n//             \"type\": \"NOTIFY_PARTIES\",\r\n//             \"address\": \"1001 Industry Rd, Suite AKenner, LA 70062\",\r\n//             \"communication\": \"TE\",\r\n//             \"communicationReference\": \"973172696\"\r\n//         }\r\n//     ],\r\n//     \"packages\": [\r\n//         {\r\n//             \"total\": 1000,\r\n//             \"packageType\": \"1A\"\r\n//         }\r\n//     ],\r\n//     \"previousDocumentNo\": null,\r\n//     \"previousDocumentDate\": null,\r\n//     \"countryDestinationCode\": \"AD\",\r\n//     \"loadingPlaceCode\": \"GHABK\",\r\n//     \"placeDischargeCode\": \"GHABO\",\r\n//     \"typeMeansTadCode\": \"1\",\r\n//     \"nationalMeansTadCode\": \"AD\",\r\n//     \"remarks\": null,\r\n//     \"totalInsuranceForeign\": 2000,\r\n//     \"traderTaxIdName\": \"Atlas World Logistics\",\r\n//     \"agentId\": \"7d4e0dcb-0e3e-4fbb-87fb-acb555ae4edd\",\r\n//     \"agentBlacklistedLatest\": false,\r\n//     \"traderId\": \"7d4e0dcb-0e3e-4fbb-87fb-acb555ae4edd\",\r\n//     \"traderBlacklistedLatest\": false,\r\n//     \"consignorName\": null,\r\n//     \"consignorCommunication\": null,\r\n//     \"consignorAddress\": null,\r\n//     \"consignorCommunicationReference\": null,\r\n//     \"declarationCurrencyCode\": \"AFN\",\r\n//     \"transportDocuments\": [],\r\n//     \"commodityClassification\": [],\r\n//     \"commercialGoodsDesc\": null,\r\n//     \"countryOriginCode\": null,\r\n//     \"statisticalUnitCode\": null,\r\n//     \"statisticalQuantity\": null,\r\n//     \"supplementaryQuantity\": null,\r\n//     \"governmentProcedure\": null,\r\n//     \"valueForeignCurrency\": null,\r\n//     \"lineCurrencyCode\": null,\r\n//     \"lineExchangeRate\": null,\r\n//     \"declaredValue\": null,\r\n//     \"dutyAssessmentValue\": null,\r\n//     \"extFreightForeign\": null,\r\n//     \"extFreightCurrencyCode\": null,\r\n//     \"extFreightFxRate\": null,\r\n//     \"extFreightLocal\": null,\r\n//     \"insuranceForeign\": null,\r\n//     \"insuranceCurrencyCode\": null,\r\n//     \"insuranceFxRate\": null,\r\n//     \"insuranceLocal\": null,\r\n//     \"valuationAdjustmentRate\": null,\r\n//     \"valuationAdjustmentValue\": null,\r\n//     \"valuationAdjustmentTypeCode\": null,\r\n//     \"numberPackages\": null,\r\n//     \"linePackageTypeCode\": null,\r\n//     \"packageOfVolM3\": null,\r\n//     \"shippingMark\": null,\r\n//     \"grossWeight\": null,\r\n//     \"grossWeightUOMCode\": null,\r\n//     \"netWeight\": null,\r\n//     \"netWeightUOMCode\": null,\r\n//     \"vehicles\": [],\r\n//     \"containerReferences\": [],\r\n//     \"ecvrOptionalFee\": false,\r\n//     \"htt001OptionalFee\": false,\r\n//     \"hlevyOptionalFee\": false,\r\n//     \"totalExtFreightForeign\": null,\r\n//     \"originFacilityCode\": null,\r\n//     \"id\": \"{{IDReference_Warehousingdraft}}\",\r\n//     \"reference\": \"{{Reference_Warehousingdraft}}\",\r\n//     \"reasons\": [],\r\n//     \"rejectReasons\": null,\r\n//     \"cancelReasons\": null,\r\n//     \"inquiries\": null,\r\n//     \"errorReason\": null,\r\n//     \"agentBlacklisted\": false,\r\n//     \"traderBlacklisted\": false,\r\n//     \"version\": 0,\r\n//     \"facilityName\": \"POST001\",\r\n//     \"depositPeriod\": 120,\r\n//     \"type\": \"SUBMISSION\"\r\n// }\r\n{\r\n    \"status\": \"DRAFT\",\r\n    \"regimeCode\": \"2\",\r\n    \"agentName\": \"Atlas World Logistics\",\r\n    \"agentTaxId\": \"90184561\",\r\n    \"agentBizFunction\": \"IM\",\r\n    \"agentCommunication\": \"EM\",\r\n    \"agentCommunicationRef\": \"atlas@yopmail.com\",\r\n    \"agentAddress\": {\r\n        \"id\": \"f6968f7d-5643-4f47-a1f7-e1d9f1ca1368\",\r\n        \"street\": \"Jeddah 7777\",\r\n        \"city\": \"Jeddah\",\r\n        \"poBoxNumber\": \"10101010\",\r\n        \"countryCode\": \"SA\",\r\n        \"address1\": \"111111\",\r\n        \"address2\": \"111111\",\r\n        \"address3\": \"11111\",\r\n        \"country\": \"SA\"\r\n    },\r\n    \"agentCountry\": \"SA\",\r\n    \"carrierName\": \"44440001 - Da Hua\",\r\n    \"traderName\": \"Atlas World Logistics\",\r\n    \"traderTaxId\": \"90184561\",\r\n    \"traderBizFunction\": \"IM\",\r\n    \"traderCommunication\": \"EM\",\r\n    \"traderCommunicationRef\": \"atlas@yopmail.com\",\r\n    \"traderAddress\": {\r\n        \"id\": \"f6968f7d-5643-4f47-a1f7-e1d9f1ca1368\",\r\n        \"street\": \"Jeddah 7777\",\r\n        \"city\": \"Jeddah\",\r\n        \"poBoxNumber\": \"10101010\",\r\n        \"countryCode\": \"SA\",\r\n        \"address1\": \"111111\",\r\n        \"address2\": \"111111\",\r\n        \"address3\": \"11111\"\r\n    },\r\n    \"traderCountry\": \"SA\",\r\n    \"procedureCode\": \"7\",\r\n    \"transportModeCode\": \"1\",\r\n    \"lines\": [\r\n        {\r\n            \"id\": \"ad6bcc75-f6b9-4c3e-bf97-e40dec9478f8\",\r\n            \"commodityClassification\": \"01012153\",\r\n            \"commercialGoodsDesc\": \"Oranges\",\r\n            \"supplementaryQuantity\": 500,\r\n            \"permitReferences\": [],\r\n            \"goodsStatusCode\": \"1\",\r\n            \"countryOriginCode\": \"AD\",\r\n            \"regionOriginCode\": \"GU\",\r\n            \"declaredValue\": 15000,\r\n            \"dutyAssessmentValue\": 15000,\r\n            \"freightCharge\": 138228.941685,\r\n            \"insuranceCharge\": 138228.941685,\r\n            \"tariffPreferenceClaimedCode\": null,\r\n            \"govtProcedureClaimedCode\": null,\r\n            \"containerReferences\": [\r\n                \"MSCU2092276\",\r\n                \"IPXU2148384\"\r\n            ],\r\n            \"numberPackages\": 10000,\r\n            \"grossWeight\": 10000,\r\n            \"netWeight\": null,\r\n            \"seqNumber\": 1,\r\n            \"hash\": \"4dhhikzfk8j\",\r\n            \"newLine\": false,\r\n            \"containers\": [\r\n                {\r\n                    \"seals\": \"4000001, 4000002, 4000003, 4000004\",\r\n                    \"containerType\": \"20R0\",\r\n                    \"containerNumber\": \"MSCU2092276\"\r\n                },\r\n                {\r\n                    \"seals\": \"5000001, 5000002, 5000003, 5000004\",\r\n                    \"containerType\": \"20R0\",\r\n                    \"containerNumber\": \"IPXU2148384\"\r\n                }\r\n            ],\r\n            \"manufacture\": \"Godi Cheese With Vegetable Oil\",\r\n            \"shippingMark\": \"Oranges contained in two container\",\r\n            \"modelVehicles\": [],\r\n            \"insuranceLocal\": 138228.941685,\r\n            \"packageOfVolM3\": 1,\r\n            \"deductionsLocal\": 0,\r\n            \"extFreightLocal\": 138228.941685,\r\n            \"insuranceFxRate\": 69.11447084233261,\r\n            \"otherCostsLocal\": 0,\r\n            \"valuationMethod\": \"1\",\r\n            \"deductionsFxRate\": 0,\r\n            \"descriptionGoods\": \"----10101\",\r\n            \"extFreightFxRate\": 69.11447084233261,\r\n            \"insuranceForeign\": 2000,\r\n            \"lineCurrencyCode\": \"AFN\",\r\n            \"lineExchangeRate\": 1,\r\n            \"netWeightUOMCode\": \"KGM\",\r\n            \"otherCostsFxRate\": 0,\r\n            \"deductionsForeign\": 0,\r\n            \"extFreightForeign\": 2000,\r\n            \"otherCostsForeign\": 0,\r\n            \"grossWeightUOMCode\": \"KGM\",\r\n            \"governmentProcedure\": \"7000\",\r\n            \"linePackageTypeCode\": \"4A\",\r\n            \"statisticalQuantity\": 15000,\r\n            \"statisticalUnitCode\": \"KGM\",\r\n            \"valuationMethodCode\": \"1\",\r\n            \"supplierRelationCode\": \"135\",\r\n            \"valueForeignCurrency\": 15000,\r\n            \"insuranceCurrencyCode\": \"USD\",\r\n            \"deductionsCurrencyCode\": 0,\r\n            \"extFreightCurrencyCode\": \"USD\",\r\n            \"otherCostsCurrencyCode\": 0,\r\n            \"associatedGovtProcedure\": true,\r\n            \"valuationAdjustmentRate\": 1,\r\n            \"valuationAdjustmentValue\": 0\r\n        }\r\n    ],\r\n    \"containers\": [\r\n        {\r\n            \"seals\": \"4000001, 4000002, 4000003, 4000004\",\r\n            \"containerType\": \"20R0\",\r\n            \"containerNumber\": \"MSCU2092276\"\r\n        },\r\n        {\r\n            \"seals\": \"5000001, 5000002, 5000003, 5000004\",\r\n            \"containerType\": \"20R0\",\r\n            \"containerNumber\": \"IPXU2148384\"\r\n        }\r\n    ],\r\n    \"attachments\": [],\r\n    \"totalNetWeight\": 0,\r\n    \"totalVehicles\": 0,\r\n    \"totalContainers\": 2,\r\n    \"facilities\": [\r\n        {\r\n            \"code\": \"PO001\",\r\n            \"name\": \"POST001\"\r\n        }\r\n    ],\r\n    \"securityDetails\": null,\r\n    \"selfDeclared\": null,\r\n    \"agentId\": \"7d4e0dcb-0e3e-4fbb-87fb-acb555ae4edd\",\r\n    \"agentBlacklistedLatest\": true,\r\n    \"id\": \"bba36102-8714-4f1b-bcb8-3c282326adff\",\r\n    \"reference\": \"271100010645\",\r\n    \"reasons\": [],\r\n    \"rejectReasons\": null,\r\n    \"cancelReasons\": null,\r\n    \"inquiries\": null,\r\n    \"errorReason\": null,\r\n    \"additionalInformation\": null,\r\n    \"rejectionAdditionalInformation\": null,\r\n    \"cancellationAdditionalInformation\": null,\r\n    \"parties\": [\r\n        {\r\n            \"name\": \"Godi Cheese With Vegetable Oil\",\r\n            \"type\": \"NOTIFY_PARTIES\",\r\n            \"address\": \"1001 Industry Rd, Suite AKenner, LA 70062\",\r\n            \"communication\": \"TE\",\r\n            \"communicationReference\": \"973172696\"\r\n        }\r\n    ],\r\n    \"remarks\": null,\r\n    \"packages\": [\r\n        {\r\n            \"total\": 1000,\r\n            \"packageType\": \"1A\"\r\n        }\r\n    ],\r\n    \"traderId\": \"7d4e0dcb-0e3e-4fbb-87fb-acb555ae4edd\",\r\n    \"vehicles\": [],\r\n    \"netWeight\": null,\r\n    \"totalLines\": 1,\r\n    \"arrivalDate\": \"2022-10-05T00:00:00.000Z\",\r\n    \"carrierCode\": \"44440001\",\r\n    \"grossWeight\": null,\r\n    \"shippingMark\": null,\r\n    \"totalFreight\": 138228.941685,\r\n    \"consignorName\": null,\r\n    \"declaredValue\": 15000,\r\n    \"totalPackages\": 10000,\r\n    \"insuranceLocal\": null,\r\n    \"numberPackages\": null,\r\n    \"packageOfVolM3\": null,\r\n    \"totalDocuments\": 0,\r\n    \"totalInsurance\": 138228.941685,\r\n    \"ecvrOptionalFee\": false,\r\n    \"extFreightLocal\": null,\r\n    \"insuranceFxRate\": null,\r\n    \"officeEntryCode\": \"SAJED\",\r\n    \"traderTaxIdName\": \"Atlas World Logistics\",\r\n    \"agentBlacklisted\": true,\r\n    \"consignorAddress\": null,\r\n    \"extFreightFxRate\": null,\r\n    \"hlevyOptionalFee\": false,\r\n    \"insuranceForeign\": null,\r\n    \"lineCurrencyCode\": null,\r\n    \"lineExchangeRate\": null,\r\n    \"loadingPlaceCode\": \"GHABK\",\r\n    \"netWeightUOMCode\": null,\r\n    \"officeExportCode\": \"SAJED\",\r\n    \"securityTypeCode\": \"BON\",\r\n    \"totalGrossWeight\": 10000,\r\n    \"typeMeansTadCode\": \"1\",\r\n    \"typeMeansTavCode\": \"1\",\r\n    \"countryExportCode\": \"AD\",\r\n    \"countryOriginCode\": null,\r\n    \"extFreightForeign\": null,\r\n    \"goodsLocationCode\": \"889911CCA\",\r\n    \"htt001OptionalFee\": false,\r\n    \"traderBlacklisted\": true,\r\n    \"grossWeightUOMCode\": null,\r\n    \"placeDischargeCode\": \"GHABO\",\r\n    \"previousDocumentNo\": null,\r\n    \"totalInvoiceAmount\": 15000,\r\n    \"transportDocuments\": [],\r\n    \"commercialGoodsDesc\": null,\r\n    \"containerReferences\": [],\r\n    \"dutyAssessmentValue\": null,\r\n    \"governmentProcedure\": null,\r\n    \"linePackageTypeCode\": null,\r\n    \"statisticalQuantity\": null,\r\n    \"statisticalUnitCode\": null,\r\n    \"nationalMeansTadCode\": \"AD\",\r\n    \"nationalMeansTavCode\": \"IN\",\r\n    \"previousDocumentDate\": null,\r\n    \"valueForeignCurrency\": null,\r\n    \"insuranceCurrencyCode\": null,\r\n    \"officeDeclarationCode\": \"GHABO\",\r\n    \"supplementaryQuantity\": null,\r\n    \"totalInsuranceForeign\": 2000,\r\n    \"consignorCommunication\": null,\r\n    \"countryDestinationCode\": \"AD\",\r\n    \"extFreightCurrencyCode\": null,\r\n    \"freightApportQualifier\": \"VOL\",\r\n    \"identificationMeansTav\": \"SA578\",\r\n    \"totalExtFreightForeign\": 2000,\r\n    \"commodityClassification\": [],\r\n    \"declarationCurrencyCode\": \"AFN\",\r\n    \"traderBlacklistedLatest\": true,\r\n    \"valuationAdjustmentRate\": null,\r\n    \"valuationAdjustmentValue\": null,\r\n    \"freightApportQualifierCode\": \"VAL\",\r\n    \"valuationAdjustmentTypeCode\": null,\r\n    \"consignorCommunicationReference\": null,\r\n    \"type\": \"SUBMISSION\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{evn}}/api/gateway/v1/decman/forms/15/validations?layerCode=MANUAL",
							"host": [
								"{{evn}}"
							],
							"path": [
								"api",
								"gateway",
								"v1",
								"decman",
								"forms",
								"15",
								"validations"
							],
							"query": [
								{
									"key": "layerCode",
									"value": "MANUAL"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "SubmitDec_Warehousing",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data;\r",
									"data = pm.response.json();\r",
									"if(data)\r",
									"{\r",
									"   pm.environment.set(\"RegistrationReference_Warehousing\", data.data.registrationReference);\r",
									"    pm.environment.set(\"IDRegistrationReference_Warehousing\", data.data.request.applyTo);\r",
									"\r",
									"}\r",
									"pm.test(\"Status is SUBMITTED\", function () {\r",
									"    pm.expect(data.data.request.status).to.include(\"SUBMITTED\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									" pm.test(\"Check the declaration after submitting it successfully.\", function () {\r",
									"\r",
									"     pm.expect(data.data.registrationReference).to.include(pm.variables.get(\"RegistrationReference_Warehousing\"));\r",
									"\r",
									"});\r",
									"\r",
									" pm.execution.setNextRequest(\"SearchDec_Warehousing\");"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const evn = pm.variables.get(\"evn\");\r",
									"const realms = pm.variables.get(\"realms\");\r",
									"pm.sendRequest({\r",
									"      url: `${evn}/apps/keycloak/realms/${realms}/protocol/openid-connect/token`,\r",
									"      method: 'POST',\r",
									"       header: {\r",
									"    'Content-Type': 'application/x-www-form-urlencoded',\r",
									"  },\r",
									"      body: {\r",
									"          mode: 'urlencoded',\r",
									"          urlencoded: [\r",
									"            {key: \"grant_type\", value: \"password\"},\r",
									"            {key: \"client_id\", value: \"BV_SWAGGER_UI\"},\r",
									"            {key: \"username\", value: \"atlas.officer@yopmail.com\"},\r",
									"            {key: \"password\", value: \"@Ttek1234\"},\r",
									"        ]\r",
									"      }\r",
									"  }, \r",
									"  function (err, response) {\r",
									"    console.log(\"token\",response.json().access_token);\r",
									"        pm.environment.set(\"tokenIMEX\", response.json().access_token);\r",
									"  });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenIMEX}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{evn}}/api/gateway/v1/decman/requests/{{IDReference_Warehousingdraft}}/submit",
							"host": [
								"{{evn}}"
							],
							"path": [
								"api",
								"gateway",
								"v1",
								"decman",
								"requests",
								"{{IDReference_Warehousingdraft}}",
								"submit"
							]
						}
					},
					"response": []
				},
				{
					"name": "SearchDec_Warehousing",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();\r",
									"\r",
									"pm.test(\"Response success is true\", function () {\r",
									"   pm.expect(data.success).to.be.true;\r",
									"});\r",
									" pm.test(\"Compare data after searching based on the Declaration document.\", function () {\r",
									"\r",
									"     pm.expect(data.data.content[0].reference).to.include(pm.variables.get(\"RegistrationReference_Warehousing\"));\r",
									"\r",
									"});\r",
									"if(data.data.content[0].status === \"ERROR\")\r",
									"{\r",
									"  \r",
									"  pm.execution.setNextRequest(null);\r",
									"\r",
									"}\r",
									"else{\r",
									"pm.execution.setNextRequest(\"SearchinvoidceDec_Warehousing\");\r",
									"}\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const evn = pm.variables.get(\"evn\");\r",
									"const realms = pm.variables.get(\"realms\");\r",
									"pm.sendRequest({\r",
									"      url: `${evn}/apps/keycloak/realms/${realms}/protocol/openid-connect/token`,\r",
									"      method: 'POST',\r",
									"       header: {\r",
									"    'Content-Type': 'application/x-www-form-urlencoded',\r",
									"  },\r",
									"      body: {\r",
									"          mode: 'urlencoded',\r",
									"          urlencoded: [\r",
									"            {key: \"grant_type\", value: \"password\"},\r",
									"            {key: \"client_id\", value: \"BV_SWAGGER_UI\"},\r",
									"            {key: \"username\", value: \"atlas.officer@yopmail.com\"},\r",
									"            {key: \"password\", value: \"@Ttek1234\"},\r",
									"        ]\r",
									"      }\r",
									"  }, \r",
									"  function (err, response) {\r",
									"    console.log(\"token\",response.json().access_token);\r",
									"        pm.environment.set(\"tokenIMEX\", response.json().access_token);\r",
									"  });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenIMEX}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{evn}}/api/gateway/v1/decman/declarations?page=0&size=10&reference={{RegistrationReference_Warehousing}}",
							"host": [
								"{{evn}}"
							],
							"path": [
								"api",
								"gateway",
								"v1",
								"decman",
								"declarations"
							],
							"query": [
								{
									"key": "page",
									"value": "0"
								},
								{
									"key": "size",
									"value": "10"
								},
								{
									"key": "reference",
									"value": "{{RegistrationReference_Warehousing}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "SearchinvoidceDec_Warehousing",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var dec = pm.response.json();\r",
									"\r",
									"if (dec) {\r",
									"    pm.environment.set(\"InvoiceDecWarehousing\", dec.data.content[0].id);\r",
									"}\r",
									"\r",
									"pm.test(\"Check RegistrationReference_Dec\", function () {\r",
									"    pm.expect(dec.data.content[0].referenceDocument).to.include(pm.variables.get(\"RegistrationReference_Warehousing\"));\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    //pm.response.to.have.status(200);\r",
									"    pm.expect(dec.data.content[0].status).to.eql(\"CREATED\"); // Updated condition for 'CREATED' status\r",
									"});\r",
									"let a = dec.data.content[0].status;\r",
									"console.log(a)\r",
									"if (a === \"CREATED\") {\r",
									"  \r",
									"    pm.execution.setNextRequest(\"Payment_DecWarehousing\");\r",
									"}\r",
									"else\r",
									"{\r",
									"    pm.execution.setNextRequest(null)\r",
									"}\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const evn = pm.variables.get(\"evn\");\r",
									"const realms = pm.variables.get(\"realms\");\r",
									"pm.sendRequest({\r",
									"      url: `${evn}/apps/keycloak/realms/${realms}/protocol/openid-connect/token`,\r",
									"      method: 'POST',\r",
									"       header: {\r",
									"    'Content-Type': 'application/x-www-form-urlencoded',\r",
									"  },\r",
									"      body: {\r",
									"          mode: 'urlencoded',\r",
									"          urlencoded: [\r",
									"            {key: \"grant_type\", value: \"password\"},\r",
									"            {key: \"client_id\", value: \"BV_SWAGGER_UI\"},\r",
									"            {key: \"username\", value: \"atlas.cashier@yopmail.com\"},\r",
									"            {key: \"password\", value: \"@Ttek1234\"},\r",
									"        ]\r",
									"      }\r",
									"  }, \r",
									"  function (err, response) {\r",
									"    console.log(\"token\",response.json().access_token);\r",
									"        pm.environment.set(\"tokencashierCompany\", response.json().access_token);\r",
									"  });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokencashierCompany}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{evn}}/api/gateway/v1/revman/invoices?&page=0&size=10&referenceDocument={{RegistrationReference_Warehousing}}",
							"host": [
								"{{evn}}"
							],
							"path": [
								"api",
								"gateway",
								"v1",
								"revman",
								"invoices"
							],
							"query": [
								{
									"key": null,
									"value": null
								},
								{
									"key": "page",
									"value": "0"
								},
								{
									"key": "size",
									"value": "10"
								},
								{
									"key": "referenceDocument",
									"value": "{{RegistrationReference_Warehousing}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Payment_DecWarehousing",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data;\r",
									"dataDec = pm.response.json();\r",
									"if(dataDec.success == true)\r",
									"{\r",
									"   pm.execution.setNextRequest(\"Releasing_DecWarehousing\");\r",
									"   \r",
									"}\r",
									"else\r",
									"{\r",
									"    pm.execution.setNextRequest(null)\r",
									"}\r",
									" pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									" pm.test(\"Payment success\", function () {\r",
									"   pm.expect(dataDec.success).to.eql(true);\r",
									" })"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const evn = pm.variables.get(\"evn\");\r",
									"const realms = pm.variables.get(\"realms\");\r",
									"pm.sendRequest({\r",
									"      url: `${evn}/apps/keycloak/realms/${realms}/protocol/openid-connect/token`,\r",
									"      method: 'POST',\r",
									"       header: {\r",
									"    'Content-Type': 'application/x-www-form-urlencoded',\r",
									"  },\r",
									"      body: {\r",
									"          mode: 'urlencoded',\r",
									"          urlencoded: [\r",
									"            {key: \"grant_type\", value: \"password\"},\r",
									"            {key: \"client_id\", value: \"BV_SWAGGER_UI\"},\r",
									"            {key: \"username\", value: \"atlas.cashier@yopmail.com\"},\r",
									"            {key: \"password\", value: \"@Ttek1234\"},\r",
									"        ]\r",
									"      }\r",
									"  }, \r",
									"  function (err, response) {\r",
									"    console.log(\"token\",response.json().access_token);\r",
									"        pm.environment.set(\"tokencashierCompany\", response.json().access_token);\r",
									"  });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokencashierCompany}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"paymentMethod\":\"2\",\"bankGuarantorCode\":null,\"bankAccountNo\":\"\",\"receiptReference\":\"\",\"notes\":\"6666\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{evn}}/api/gateway/v1/revman/invoices/{{InvoiceDecWarehousing}}/payments/requests",
							"host": [
								"{{evn}}"
							],
							"path": [
								"api",
								"gateway",
								"v1",
								"revman",
								"invoices",
								"{{InvoiceDecWarehousing}}",
								"payments",
								"requests"
							]
						}
					},
					"response": []
				},
				{
					"name": "Releasing_DecWarehousing",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var dataDec = pm.response.json();\r",
									"if(dataDec.success == true)\r",
									"{\r",
									"  pm.execution.setNextRequest(\"Release_DecWarehousing\");\r",
									"   \r",
									"}\r",
									"else\r",
									"{\r",
									"    pm.execution.setNextRequest(null)\r",
									"}\r",
									" pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									" pm.test(\"Releasing success\", function () {\r",
									"   pm.expect(dataDec.success).to.eql(true);\r",
									" })"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const evn = pm.variables.get(\"evn\");\r",
									"const realms = pm.variables.get(\"realms\");\r",
									"pm.sendRequest({\r",
									"      url: `${evn}/apps/keycloak/realms/${realms}/protocol/openid-connect/token`,\r",
									"      method: 'POST',\r",
									"       header: {\r",
									"    'Content-Type': 'application/x-www-form-urlencoded',\r",
									"  },\r",
									"      body: {\r",
									"          mode: 'urlencoded',\r",
									"          urlencoded: [\r",
									"            {key: \"grant_type\", value: \"password\"},\r",
									"            {key: \"client_id\", value: \"BV_SWAGGER_UI\"},\r",
									"            {key: \"username\", value: \"customs.supervisor@yopmail.com\"},\r",
									"            {key: \"password\", value: \"@Ttek1234\"},\r",
									"        ]\r",
									"      }\r",
									"  }, \r",
									"  function (err, response) {\r",
									"    console.log(\"token\",response.json().access_token);\r",
									"        pm.environment.set(\"tokencustomsp\", response.json().access_token);\r",
									"  });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokencustomsp}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{evn}}/api/gateway/v1/decman/declarations/{{IDRegistrationReference_Warehousing}}/releasing",
							"host": [
								"{{evn}}"
							],
							"path": [
								"api",
								"gateway",
								"v1",
								"decman",
								"declarations",
								"{{IDRegistrationReference_Warehousing}}",
								"releasing"
							]
						}
					},
					"response": []
				},
				{
					"name": "Release_DecWarehousing",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var dataDec = pm.response.json();\r",
									"// if(dataDec.success == true)\r",
									"// {\r",
									"//   pm.execution.setNextRequest(\"Release_DecTemporary\");\r",
									"   \r",
									"// }\r",
									" pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									" pm.test(\"Release success\", function () {\r",
									"   pm.expect(dataDec.success).to.eql(true);\r",
									" })\r",
									"  pm.test(\"Check the declaration after release success.\", function () {\r",
									"\r",
									"     //pm.expect(dataDec.data.declarationReference).to.include(pm.variables.get(\"RegistrationReference_IMforhomeUse\"));\r",
									"     pm.expect(dataDec.data.releasedReference).to.is.not.null;\r",
									"\r",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const evn = pm.variables.get(\"evn\");\r",
									"const realms = pm.variables.get(\"realms\");\r",
									"pm.sendRequest({\r",
									"      url: `${evn}/apps/keycloak/realms/${realms}/protocol/openid-connect/token`,\r",
									"      method: 'POST',\r",
									"       header: {\r",
									"    'Content-Type': 'application/x-www-form-urlencoded',\r",
									"  },\r",
									"      body: {\r",
									"          mode: 'urlencoded',\r",
									"          urlencoded: [\r",
									"            {key: \"grant_type\", value: \"password\"},\r",
									"            {key: \"client_id\", value: \"BV_SWAGGER_UI\"},\r",
									"            {key: \"username\", value: \"customs.supervisor@yopmail.com\"},\r",
									"            {key: \"password\", value: \"@Ttek1234\"},\r",
									"        ]\r",
									"      }\r",
									"  }, \r",
									"  function (err, response) {\r",
									"    console.log(\"token\",response.json().access_token);\r",
									"        pm.environment.set(\"tokencustomsp\", response.json().access_token);\r",
									"  });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokencustomsp}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{evn}}/api/gateway/v1/decman/declarations/{{IDRegistrationReference_Warehousing}}/release-orders",
							"host": [
								"{{evn}}"
							],
							"path": [
								"api",
								"gateway",
								"v1",
								"decman",
								"declarations",
								"{{IDRegistrationReference_Warehousing}}",
								"release-orders"
							]
						}
					},
					"response": []
				},
				{
					"name": "New Request",
					"request": {
						"method": "GET",
						"header": []
					},
					"response": []
				}
			]
		},
		{
			"name": "ImportforhomeUse",
			"item": [
				{
					"name": "CreateDec_IMforhomeUseOneline",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data;\r",
									"data = pm.response.json();\r",
									"if(data)\r",
									"{\r",
									"   pm.environment.set(\"IDReference_IMForhomeUsedraft\", data.data.id);\r",
									"    pm.environment.set(\"Reference_IMForhomeUsedraft\", data.data.reference);\r",
									"    pm.environment.set(\"IDReference_LineIMForhomeUsedraft\", data.data.lines[0].id);\r",
									"    pm.environment.set(\"Reference_LineIMForhomeUsedraft\", data.data.lines[0].hash);\r",
									"   \r",
									"   \r",
									"   \r",
									"}\r",
									"pm.test(\"Status is DRAFT\", function () {\r",
									"    pm.expect(data.data.status).to.include(\"DRAFT\");\r",
									"});\r",
									"pm.test(\"line array has a length of 1\", function () {\r",
									"    pm.expect(data.data.lines).to.have.lengthOf(1);\r",
									"});\r",
									"\r",
									"pm.test(\"Response status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"if(pm.response.to.have.status(200))\r",
									"{\r",
									"   pm.execution.setNextRequest(\"ValidationDec_TemporaryIMOneline\");\r",
									"  \r",
									"}\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const evn = pm.variables.get(\"evn\");\r",
									"const realms = pm.variables.get(\"realms\");\r",
									"pm.sendRequest({\r",
									"      url: `https://bv-${evn}.ttekglobal.com/apps/keycloak/realms/${realms}/protocol/openid-connect/token`,\r",
									"      method: 'POST',\r",
									"       header: {\r",
									"    'Content-Type': 'application/x-www-form-urlencoded',\r",
									"  },\r",
									"      body: {\r",
									"          mode: 'urlencoded',\r",
									"          urlencoded: [\r",
									"            {key: \"grant_type\", value: \"password\"},\r",
									"            {key: \"client_id\", value: \"BV_SWAGGER_UI\"},\r",
									"            {key: \"username\", value: \"atlas.officer@yopmail.com\"},\r",
									"            {key: \"password\", value: \"@Ttek1234\"},\r",
									"        ]\r",
									"      }\r",
									"  }, \r",
									"  function (err, response) {\r",
									"    console.log(\"token\",response.json().access_token);\r",
									"        pm.environment.set(\"tokenIMEX\", response.json().access_token);\r",
									"  });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenIMEX}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"type\": \"SUBMISSION\",\r\n    \"data\": {\r\n        \"status\": \"DRAFT\",\r\n        \"regimeCode\": \"2\",\r\n        \"agentName\": \"Atlas World Logistics\",\r\n        \"agentTaxId\": \"90184561\",\r\n        \"agentBizFunction\": \"IM\",\r\n        \"agentCommunication\": \"EM\",\r\n        \"agentCommunicationRef\": \"atlas@yopmail.com\",\r\n        \"agentAddress\": {\r\n            \"id\": \"f6968f7d-5643-4f47-a1f7-e1d9f1ca1368\",\r\n            \"street\": \"Jeddah 7777\",\r\n            \"city\": \"Jeddah\",\r\n            \"poBoxNumber\": \"10101010\",\r\n            \"countryCode\": \"SA\",\r\n            \"address1\": \"111111\",\r\n            \"address2\": \"111111\",\r\n            \"address3\": \"11111\",\r\n            \"country\": \"SA\"\r\n        },\r\n        \"agentCountry\": \"SA\",\r\n        \"carrierName\": \"44440001 - Da Hua\",\r\n        \"traderName\": \"Atlas World Logistics\",\r\n        \"traderTaxId\": \"90184561\",\r\n        \"traderBizFunction\": \"IM\",\r\n        \"traderCommunication\": \"EM\",\r\n        \"traderCommunicationRef\": \"atlas@yopmail.com\",\r\n        \"traderAddress\": {\r\n            \"id\": \"f6968f7d-5643-4f47-a1f7-e1d9f1ca1368\",\r\n            \"street\": \"Jeddah 7777\",\r\n            \"city\": \"Jeddah\",\r\n            \"poBoxNumber\": \"10101010\",\r\n            \"countryCode\": \"SA\",\r\n            \"address1\": \"111111\",\r\n            \"address2\": \"111111\",\r\n            \"address3\": \"11111\",\r\n            \"country\": \"SA\"\r\n        },\r\n        \"traderCountry\": \"SA\",\r\n        \"procedureCode\": \"4\",\r\n        \"transportModeCode\": \"1\",\r\n        \"lines\": [\r\n            {\r\n                \"id\": \"c77e2f67-d6f3-496d-9786-c59273a5b184\",\r\n                \"commodityClassification\": \"06011000\",\r\n                \"commercialGoodsDesc\": \"Other\",\r\n                \"supplementaryQuantity\": 100,\r\n                \"permitReferences\": [\r\n                    \"2100002962\"\r\n                ],\r\n                \"goodsStatusCode\": \"1\",\r\n                \"countryOriginCode\": \"AI\",\r\n                \"regionOriginCode\": \"03\",\r\n                \"declaredValue\": 15000,\r\n                \"dutyAssessmentValue\": 15000,\r\n                \"freightCharge\": 135831.732,\r\n                \"insuranceCharge\": 135831.732,\r\n                \"tariffPreferenceClaimedCode\": null,\r\n                \"govtProcedureClaimedCode\": null,\r\n                \"containerReferences\": [\r\n                    \"MSCU2092276\",\r\n                    \"IPXU2148384\"\r\n                ],\r\n                \"numberPackages\": 10000,\r\n                \"grossWeight\": 10000,\r\n                \"netWeight\": null,\r\n                \"vehicles\": [],\r\n                \"containers\": [\r\n                    {\r\n                        \"seals\": \"4000001, 4000002, 4000003, 4000004\",\r\n                        \"containerType\": \"20R0\",\r\n                        \"containerNumber\": \"MSCU2092276\"\r\n                    },\r\n                    {\r\n                        \"seals\": \"5000001, 5000002, 5000003, 5000004\",\r\n                        \"containerType\": \"20R0\",\r\n                        \"containerNumber\": \"IPXU2148384\"\r\n                    }\r\n                ],\r\n                \"manufacture\": \"Godi Cheese With Vegetable Oil\",\r\n                \"shippingMark\": \"Oranges contained in two container\",\r\n                \"modelVehicles\": [],\r\n                \"insuranceLocal\": 135831.732,\r\n                \"packageOfVolM3\": 1,\r\n                \"deductionsLocal\": 0,\r\n                \"extFreightLocal\": 135831.732,\r\n                \"insuranceFxRate\": 67.91586582541548,\r\n                \"otherCostsLocal\": 0,\r\n                \"valuationMethod\": \"1\",\r\n                \"deductedQuantity\": null,\r\n                \"deductionsFxRate\": 0,\r\n                \"descriptionGoods\": \"- Bulbs, tubers, tuberous roots, corms, crowns and rhizomes, dormant\",\r\n                \"extFreightFxRate\": 67.91586582541548,\r\n                \"insuranceForeign\": \"2000\",\r\n                \"lineCurrencyCode\": \"AFN\",\r\n                \"lineExchangeRate\": 1,\r\n                \"netWeightUOMCode\": \"KGM\",\r\n                \"otherCostsFxRate\": 0,\r\n                \"deductionsForeign\": 0,\r\n                \"extFreightForeign\": \"2000\",\r\n                \"intFreightForeign\": \"2000\",\r\n                \"otherCostsForeign\": 0,\r\n                \"grossWeightUOMCode\": \"KGM\",\r\n                \"governmentProcedure\": \"4000\",\r\n                \"linePackageTypeCode\": \"4A\",\r\n                \"statisticalQuantity\": 15000,\r\n                \"statisticalUnitCode\": \"MND\",\r\n                \"valuationMethodCode\": \"1\",\r\n                \"supplierRelationCode\": \"135\",\r\n                \"valueForeignCurrency\": \"15000\",\r\n                \"insuranceCurrencyCode\": \"USD\",\r\n                \"deductionsCurrencyCode\": 0,\r\n                \"extFreightCurrencyCode\": \"USD\",\r\n                \"otherCostsCurrencyCode\": 0,\r\n                \"associatedGovtProcedure\": true,\r\n                \"valuationAdjustmentRate\": 1,\r\n                \"valuationAdjustmentValue\": 0,\r\n                \"valuationAdjustmentTypeCode\": null\r\n            }\r\n        ],\r\n        \"containers\": [\r\n            {\r\n                \"seals\": \"4000001, 4000002, 4000003, 4000004\",\r\n                \"containerType\": \"20R0\",\r\n                \"containerNumber\": \"MSCU2092276\"\r\n            },\r\n            {\r\n                \"seals\": \"5000001, 5000002, 5000003, 5000004\",\r\n                \"containerType\": \"20R0\",\r\n                \"containerNumber\": \"IPXU2148384\"\r\n            }\r\n        ],\r\n        \"attachments\": [],\r\n        \"totalNetWeight\": 0,\r\n        \"totalVehicles\": 0,\r\n        \"totalContainers\": 2,\r\n        \"facilities\": [\r\n            {\r\n                \"code\": \"U002\",\r\n                \"name\": \"U002\"\r\n            }\r\n        ],\r\n        \"securityDetails\": null,\r\n        \"selfDeclared\": true,\r\n        \"agentId\": \"7d4e0dcb-0e3e-4fbb-87fb-acb555ae4edd\",\r\n        \"agentBlacklistedLatest\": false,\r\n        \"id\": \"11d85d0e-08b6-4c48-b458-3b773c11da2c\",\r\n        \"reference\": \"241100009204\",\r\n        \"reasons\": [],\r\n        \"rejectReasons\": null,\r\n        \"cancelReasons\": null,\r\n        \"inquiries\": null,\r\n        \"errorReason\": null,\r\n        \"parties\": [\r\n            {\r\n                \"name\": \"Godi Cheese With Vegetable Oil\",\r\n                \"type\": \"NOTIFY_PARTIES\",\r\n                \"address\": \"1001 Industry Rd, Suite AKenner, LA 70062\",\r\n                \"communication\": \"TE\",\r\n                \"communicationReference\": \"973172696\"\r\n            }\r\n        ],\r\n        \"remarks\": null,\r\n        \"packages\": [\r\n            {\r\n                \"total\": 1000,\r\n                \"packageType\": \"1A\"\r\n            }\r\n        ],\r\n        \"traderId\": \"7d4e0dcb-0e3e-4fbb-87fb-acb555ae4edd\",\r\n        \"consignor\": \"7258461309\",\r\n        \"expiryDate\": \"2025-02-05T16:16:14.196Z\",\r\n        \"totalLines\": 1,\r\n        \"arrivalDate\": \"2024-09-13T00:00:00.000Z\",\r\n        \"carrierCode\": \"44440001\",\r\n        \"incotermCode\": \"CFR\",\r\n        \"totalFreight\": 135831.732,\r\n        \"consignorName\": \"Avis\",\r\n        \"totalPackages\": 10000,\r\n        \"898OptionalFee\": false,\r\n        \"totalDocuments\": 0,\r\n        \"totalInsurance\": 135831.732,\r\n        \"ecvrOptionalFee\": false,\r\n        \"invoiceDocument\": [],\r\n        \"officeEntryCode\": \"SAJED\",\r\n        \"tetsOptionalFee\": false,\r\n        \"traderReference\": \"Direct Import\",\r\n        \"agentBlacklisted\": false,\r\n        \"consignorAddress\": \"Vietnam\",\r\n        \"consignorCountry\": \"AE\",\r\n        \"hlevyOptionalFee\": false,\r\n        \"loadingPlaceCode\": \"GHABK\",\r\n        \"officeExportCode\": \"SAJED\",\r\n        \"securityTypeCode\": null,\r\n        \"totalGrossWeight\": 10000,\r\n        \"typeMeansTavCode\": \"1\",\r\n        \"countryExportCode\": \"IN\",\r\n        \"goodsLocationCode\": \"889911CCA\",\r\n        \"htt001OptionalFee\": false,\r\n        \"incotermPlaceCode\": \"SAJED\",\r\n        \"incotermPlaceName\": \"Jeddah\",\r\n        \"traderBlacklisted\": false,\r\n        \"additionalDocument\": [],\r\n        \"chidoanOptionalFee\": false,\r\n        \"placeDischargeCode\": \"SAJED\",\r\n        \"previousDocumentNo\": null,\r\n        \"totalInvoiceAmount\": 15000,\r\n        \"transportDocuments\": [],\r\n        \"nationalMeansTavCode\": \"IN\",\r\n        \"previousDocumentDate\": null,\r\n        \"natureTransactionCode\": \"1\",\r\n        \"officeDeclarationCode\": \"GHABK\",\r\n        \"totalInsuranceForeign\": 2000,\r\n        \"consignorCommunication\": \"AH\",\r\n        \"freightApportQualifier\": \"VOL\",\r\n        \"identificationMeansTav\": \"SA578\",\r\n        \"totalExtFreightForeign\": 2000,\r\n        \"declarationCurrencyCode\": \"AFN\",\r\n        \"traderBlacklistedLatest\": false,\r\n        \"freightApportQualifierCode\": null,\r\n        \"consignorCommunicationReference\": \"67777\",\r\n        \"version\": 0\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://bv-{{evn}}.ttekglobal.com/api/gateway/v1/decman/requests",
							"protocol": "https",
							"host": [
								"bv-{{evn}}",
								"ttekglobal",
								"com"
							],
							"path": [
								"api",
								"gateway",
								"v1",
								"decman",
								"requests"
							]
						}
					},
					"response": []
				},
				{
					"name": "test",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data;\r",
									"data = pm.response.json();\r",
									"if(data)\r",
									"{\r",
									"   pm.environment.set(\"IDReference_IMForhomeUsedraft\", data.data.id);\r",
									"    pm.environment.set(\"Reference_IMForhomeUsedraft\", data.data.reference);\r",
									"    pm.environment.set(\"IDReference_LineIMForhomeUsedraft\", data.data.lines[0].id);\r",
									"    pm.environment.set(\"Reference_LineIMForhomeUsedraft\", data.data.lines[0].hash);\r",
									"   \r",
									"   \r",
									"   \r",
									"}\r",
									"pm.test(\"Status is DRAFT\", function () {\r",
									"    pm.expect(data.data.status).to.include(\"DRAFT\");\r",
									"});\r",
									"pm.test(\"line array has a length of 1\", function () {\r",
									"    pm.expect(data.data.lines).to.have.lengthOf(1);\r",
									"});\r",
									"\r",
									"pm.test(\"Response status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"if(pm.response.to.have.status(200))\r",
									"{\r",
									"   pm.execution.setNextRequest(\"ValidationDec_TemporaryIMOneline\");\r",
									"  \r",
									"}\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const evn = pm.variables.get(\"evn\");\r",
									"const realms = pm.variables.get(\"realms\");\r",
									"pm.sendRequest({\r",
									"      url: `https://bv-${evn}.ttekglobal.com/apps/keycloak/realms/${realms}/protocol/openid-connect/token`,\r",
									"      method: 'POST',\r",
									"       header: {\r",
									"    'Content-Type': 'application/x-www-form-urlencoded',\r",
									"  },\r",
									"      body: {\r",
									"          mode: 'urlencoded',\r",
									"          urlencoded: [\r",
									"            {key: \"grant_type\", value: \"password\"},\r",
									"            {key: \"client_id\", value: \"BV_SWAGGER_UI\"},\r",
									"            {key: \"username\", value: \"atlas.officer@yopmail.com\"},\r",
									"            {key: \"password\", value: \"@Ttek1234\"},\r",
									"        ]\r",
									"      }\r",
									"  }, \r",
									"  function (err, response) {\r",
									"    console.log(\"token\",response.json().access_token);\r",
									"        pm.environment.set(\"tokenIMEX\", response.json().access_token);\r",
									"  });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJGdjIxcThWV1l4MzlGSUZYeEktTkZBcDRpMU9za3hSV0ZzaXM2UlRvQzJFIn0.eyJleHAiOjE3MzcxMDkwMDAsImlhdCI6MTczNzEwODcwMCwiYXV0aF90aW1lIjoxNzM3MTA1NjAwLCJqdGkiOiI5YzExN2MzNy0yNGFhLTQ3ZTEtODRlNS01ZmJkYmFiN2I1OTEiLCJpc3MiOiJodHRwczovL2J2LWNvcmUtZGV2LnR0ZWtnbG9iYWwuY29tL2FwcHMva2V5Y2xvYWsvcmVhbG1zL1RURUtfU1RBR0lORyIsImF1ZCI6ImJ2LWNvcmUtZGV2LW1pbmlvLXYxIiwic3ViIjoiODVkYzYwNmYtYThlMC00YTA2LWFkOGUtZTg0YmM2MTJlOTkxIiwidHlwIjoiQmVhcmVyIiwiYXpwIjoiQlZfVlVFX0FQUCIsInNlc3Npb25fc3RhdGUiOiJiYTVjNTI0OS1jMGNhLTRmNmEtYmZkZC0zNmYxZDA2NDU4ZGYiLCJzY29wZSI6Im9wZW5pZCB0dGVrLXByb2ZpbGUgbG9jYWxlIG1pbmlvIGVtYWlsIiwic2lkIjoiYmE1YzUyNDktYzBjYS00ZjZhLWJmZGQtMzZmMWQwNjQ1OGRmIiwibmF0aW9uYWxpdHktY29kZSI6IkFEIiwiZW1haWxfdmVyaWZpZWQiOnRydWUsImdlbmRlciI6Ik0iLCJ2YWxpZC10byI6IjE3NjcyODY3OTk5OTkiLCJiaXJ0aC1wbGFjZSI6IjE5ODktMDMtMTUgMTQ6NTY6MjkiLCJncm91cHMiOlsiYnYtdXNlcnMiXSwicG8tYm94LW51bWJlciI6IjQzNDY0NiIsImZpcnN0LW5hbWUiOiJKdW1hIiwib2ZmaWNlLXBob25lIjoiNDM0NjQ2IiwiYmlydGgtZGF0ZSI6IjYwNTk3Njk4OTAwMCIsIm1vYmlsZS1waG9uZSI6IjkyODU5NDY0NDQzNCIsIm1pZGRsZS1uYW1lIjoiLSIsImRlc2lnbmF0aW9uIjoiRlIiLCJ0YXgtaWQiOiI2NTQzNTQzNiIsImVtYWlsIjoiYXRsYXMub2ZmaWNlckB5b3BtYWlsLmNvbSIsInBvbGljeSI6W10sImxhc3QtbmFtZSI6IkFsZ2hhaXRoIiwidmFsaWQtZnJvbSI6IjE2NDc0MTczMDAwMDAifQ.5ifwT6pskgmpM5wjuIVsxR2Om309BszykaauSESaViHc2Jh7Lqa_eFgyhO7jcGFvnIEv1NtiZ6vCdwMYJqULAX7-Vw-pg860T24wrFFG0Ym4E7VWbfibqxQUJBMjaXuE8BjjLwhMGG7qpeJ_QOWpAWcupx4-CtX3kR8oWIu5DIuHkcYki2GqHgTVwdrC0O_CPrWOPIMFn297-BiGiUbqkndbhz4RfvYkZfZYYyuX39sMtUwWOJLiAqa6IOKyX0cvF9psoAB51FhR7_tO9W5yWK2SajAx9hWvTiFIFDpdPaFamiL18RGpbXJO4Ch9ooxqERLx7GU6AwsjBk7ungBMcA",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"type\": \"SUBMISSION\",\r\n    \"data\": {\r\n        \"status\": \"DRAFT\",\r\n        \"regimeCode\": \"2\",\r\n        \"agentName\": \"Atlas World Logistics\",\r\n        \"agentTaxId\": \"90184561\",\r\n        \"agentBizFunction\": \"IM\",\r\n        \"agentCommunication\": \"EM\",\r\n        \"agentCommunicationRef\": \"atlas@yopmail.com\",\r\n        \"agentAddress\": {\r\n            \"id\": \"f6968f7d-5643-4f47-a1f7-e1d9f1ca1368\",\r\n            \"street\": \"Jeddah 7777\",\r\n            \"city\": \"Jeddah\",\r\n            \"poBoxNumber\": \"10101010\",\r\n            \"countryCode\": \"SA\",\r\n            \"address1\": \"111111\",\r\n            \"address2\": \"111111\",\r\n            \"address3\": \"11111\",\r\n            \"country\": \"SA\"\r\n        },\r\n        \"agentCountry\": \"SA\",\r\n        \"carrierName\": null,\r\n        \"traderName\": \"Atlas World Logistics\",\r\n        \"traderTaxId\": \"90184561\",\r\n        \"traderBizFunction\": \"IM\",\r\n        \"traderCommunication\": \"EM\",\r\n        \"traderCommunicationRef\": \"atlas@yopmail.com\",\r\n        \"traderAddress\": {\r\n            \"id\": \"f6968f7d-5643-4f47-a1f7-e1d9f1ca1368\",\r\n            \"street\": \"Jeddah 7777\",\r\n            \"city\": \"Jeddah\",\r\n            \"poBoxNumber\": \"10101010\",\r\n            \"countryCode\": \"SA\",\r\n            \"address1\": \"111111\",\r\n            \"address2\": \"111111\",\r\n            \"address3\": \"11111\",\r\n            \"country\": \"SA\"\r\n        },\r\n        \"traderCountry\": \"SA\",\r\n        \"procedureCode\": \"4\",\r\n        \"transportModeCode\": \"1\",\r\n        \"lines\": [\r\n            {\r\n                \"commodityClassification\": \"06049000\",\r\n                \"commercialGoodsDesc\": \"Oranges\",\r\n                \"supplementaryQuantity\": 1000,\r\n                \"permitReferences\": [],\r\n                \"goodsStatusCode\": null,\r\n                \"countryOriginCode\": \"AD\",\r\n                \"regionOriginCode\": \"08\",\r\n                \"declaredValue\": 15000,\r\n                \"dutyAssessmentValue\": 15000,\r\n                \"freightCharge\": 0,\r\n                \"insuranceCharge\": 0,\r\n                \"tariffPreferenceClaimedCode\": null,\r\n                \"govtProcedureClaimedCode\": null,\r\n                \"containerReferences\": [\r\n                    \"MSCU2092276\"\r\n                ],\r\n                \"numberPackages\": 10000,\r\n                \"grossWeight\": 1000,\r\n                \"netWeight\": 1000,\r\n                \"vehicles\": [],\r\n                \"containers\": [\r\n                    {\r\n                        \"seals\": \"4000001, 4000002, 4000003, 4000004\",\r\n                        \"containerType\": \"20R0\",\r\n                        \"containerNumber\": \"MSCU2092276\"\r\n                    }\r\n                ],\r\n                \"manufacture\": \"Godi Cheese With Vegetable Oil\",\r\n                \"shippingMark\": \"Oranges contained in two container\",\r\n                \"modelVehicles\": [],\r\n                \"insuranceLocal\": 0,\r\n                \"packageOfVolM3\": 1,\r\n                \"quotaProfileId\": null,\r\n                \"deductionsLocal\": 0,\r\n                \"extFreightLocal\": 0,\r\n                \"insuranceFxRate\": \"\",\r\n                \"otherCostsLocal\": 0,\r\n                \"valuationMethod\": \"1\",\r\n                \"deductedQuantity\": null,\r\n                \"deductionsFxRate\": 0,\r\n                \"descriptionGoods\": \"- Other\",\r\n                \"extFreightFxRate\": \"\",\r\n                \"insuranceForeign\": null,\r\n                \"lineCurrencyCode\": \"AFN\",\r\n                \"lineExchangeRate\": 1,\r\n                \"netWeightUOMCode\": \"05\",\r\n                \"otherCostsFxRate\": 0,\r\n                \"deductionsForeign\": 0,\r\n                \"extFreightForeign\": null,\r\n                \"otherCostsForeign\": 0,\r\n                \"grossWeightUOMCode\": \"06\",\r\n                \"governmentProcedure\": \"4000\",\r\n                \"linePackageTypeCode\": \"4A\",\r\n                \"statisticalQuantity\": 15000,\r\n                \"statisticalUnitCode\": \"KGM\",\r\n                \"valuationMethodCode\": \"1\",\r\n                \"supplierRelationCode\": \"135\",\r\n                \"valueForeignCurrency\": \"15000\",\r\n                \"insuranceCurrencyCode\": null,\r\n                \"deductionsCurrencyCode\": 0,\r\n                \"extFreightCurrencyCode\": null,\r\n                \"otherCostsCurrencyCode\": 0,\r\n                \"associatedGovtProcedure\": true,\r\n                \"valuationAdjustmentRate\": 1,\r\n                \"valuationAdjustmentValue\": 0,\r\n                \"valuationAdjustmentTypeCode\": null\r\n            },\r\n            {\r\n                \"commodityClassification\": \"06049000\",\r\n                \"commercialGoodsDesc\": \"Oranges\",\r\n                \"supplementaryQuantity\": 1000,\r\n                \"permitReferences\": [],\r\n                \"goodsStatusCode\": null,\r\n                \"countryOriginCode\": \"AD\",\r\n                \"regionOriginCode\": \"08\",\r\n                \"declaredValue\": 15000,\r\n                \"dutyAssessmentValue\": 15000,\r\n                \"freightCharge\": 0,\r\n                \"insuranceCharge\": 0,\r\n                \"tariffPreferenceClaimedCode\": null,\r\n                \"govtProcedureClaimedCode\": null,\r\n                \"containerReferences\": [\r\n                    \"MSCU2092276\"\r\n                ],\r\n                \"numberPackages\": 10000,\r\n                \"grossWeight\": 1000,\r\n                \"netWeight\": 1000,\r\n                \"vehicles\": [],\r\n                \"containers\": [\r\n                    {\r\n                        \"seals\": \"4000001, 4000002, 4000003, 4000004\",\r\n                        \"containerType\": \"20R0\",\r\n                        \"containerNumber\": \"MSCU2092276\"\r\n                    }\r\n                ],\r\n                \"manufacture\": \"Godi Cheese With Vegetable Oil\",\r\n                \"shippingMark\": \"Oranges contained in two container\",\r\n                \"modelVehicles\": [],\r\n                \"insuranceLocal\": 0,\r\n                \"packageOfVolM3\": 1,\r\n                \"quotaProfileId\": null,\r\n                \"deductionsLocal\": 0,\r\n                \"extFreightLocal\": 0,\r\n                \"insuranceFxRate\": \"\",\r\n                \"otherCostsLocal\": 0,\r\n                \"valuationMethod\": \"1\",\r\n                \"deductedQuantity\": null,\r\n                \"deductionsFxRate\": 0,\r\n                \"descriptionGoods\": \"- Other\",\r\n                \"extFreightFxRate\": \"\",\r\n                \"insuranceForeign\": null,\r\n                \"lineCurrencyCode\": \"AFN\",\r\n                \"lineExchangeRate\": 1,\r\n                \"netWeightUOMCode\": \"05\",\r\n                \"otherCostsFxRate\": 0,\r\n                \"deductionsForeign\": 0,\r\n                \"extFreightForeign\": null,\r\n                \"otherCostsForeign\": 0,\r\n                \"grossWeightUOMCode\": \"06\",\r\n                \"governmentProcedure\": \"4000\",\r\n                \"linePackageTypeCode\": \"4A\",\r\n                \"statisticalQuantity\": 15000,\r\n                \"statisticalUnitCode\": \"KGM\",\r\n                \"valuationMethodCode\": \"1\",\r\n                \"supplierRelationCode\": \"135\",\r\n                \"valueForeignCurrency\": \"15000\",\r\n                \"insuranceCurrencyCode\": null,\r\n                \"deductionsCurrencyCode\": 0,\r\n                \"extFreightCurrencyCode\": null,\r\n                \"otherCostsCurrencyCode\": 0,\r\n                \"associatedGovtProcedure\": true,\r\n                \"valuationAdjustmentRate\": 1,\r\n                \"valuationAdjustmentValue\": 0,\r\n                \"valuationAdjustmentTypeCode\": null\r\n            },\r\n             {\r\n                \"commodityClassification\": \"06049000\",\r\n                \"commercialGoodsDesc\": \"Oranges\",\r\n                \"supplementaryQuantity\": 1000,\r\n                \"permitReferences\": [],\r\n                \"goodsStatusCode\": null,\r\n                \"countryOriginCode\": \"AD\",\r\n                \"regionOriginCode\": \"08\",\r\n                \"declaredValue\": 15000,\r\n                \"dutyAssessmentValue\": 15000,\r\n                \"freightCharge\": 0,\r\n                \"insuranceCharge\": 0,\r\n                \"tariffPreferenceClaimedCode\": null,\r\n                \"govtProcedureClaimedCode\": null,\r\n                \"containerReferences\": [\r\n                    \"MSCU2092276\"\r\n                ],\r\n                \"numberPackages\": 10000,\r\n                \"grossWeight\": 1000,\r\n                \"netWeight\": 1000,\r\n                \"vehicles\": [],\r\n                \"containers\": [\r\n                    {\r\n                        \"seals\": \"4000001, 4000002, 4000003, 4000004\",\r\n                        \"containerType\": \"20R0\",\r\n                        \"containerNumber\": \"MSCU2092276\"\r\n                    }\r\n                ],\r\n                \"manufacture\": \"Godi Cheese With Vegetable Oil\",\r\n                \"shippingMark\": \"Oranges contained in two container\",\r\n                \"modelVehicles\": [],\r\n                \"insuranceLocal\": 0,\r\n                \"packageOfVolM3\": 1,\r\n                \"quotaProfileId\": null,\r\n                \"deductionsLocal\": 0,\r\n                \"extFreightLocal\": 0,\r\n                \"insuranceFxRate\": \"\",\r\n                \"otherCostsLocal\": 0,\r\n                \"valuationMethod\": \"1\",\r\n                \"deductedQuantity\": null,\r\n                \"deductionsFxRate\": 0,\r\n                \"descriptionGoods\": \"- Other\",\r\n                \"extFreightFxRate\": \"\",\r\n                \"insuranceForeign\": null,\r\n                \"lineCurrencyCode\": \"AFN\",\r\n                \"lineExchangeRate\": 1,\r\n                \"netWeightUOMCode\": \"05\",\r\n                \"otherCostsFxRate\": 0,\r\n                \"deductionsForeign\": 0,\r\n                \"extFreightForeign\": null,\r\n                \"otherCostsForeign\": 0,\r\n                \"grossWeightUOMCode\": \"06\",\r\n                \"governmentProcedure\": \"4000\",\r\n                \"linePackageTypeCode\": \"4A\",\r\n                \"statisticalQuantity\": 15000,\r\n                \"statisticalUnitCode\": \"KGM\",\r\n                \"valuationMethodCode\": \"1\",\r\n                \"supplierRelationCode\": \"135\",\r\n                \"valueForeignCurrency\": \"15000\",\r\n                \"insuranceCurrencyCode\": null,\r\n                \"deductionsCurrencyCode\": 0,\r\n                \"extFreightCurrencyCode\": null,\r\n                \"otherCostsCurrencyCode\": 0,\r\n                \"associatedGovtProcedure\": true,\r\n                \"valuationAdjustmentRate\": 1,\r\n                \"valuationAdjustmentValue\": 0,\r\n                \"valuationAdjustmentTypeCode\": null\r\n            },\r\n             {\r\n                \"commodityClassification\": \"06049000\",\r\n                \"commercialGoodsDesc\": \"Oranges\",\r\n                \"supplementaryQuantity\": 1000,\r\n                \"permitReferences\": [],\r\n                \"goodsStatusCode\": null,\r\n                \"countryOriginCode\": \"AD\",\r\n                \"regionOriginCode\": \"08\",\r\n                \"declaredValue\": 15000,\r\n                \"dutyAssessmentValue\": 15000,\r\n                \"freightCharge\": 0,\r\n                \"insuranceCharge\": 0,\r\n                \"tariffPreferenceClaimedCode\": null,\r\n                \"govtProcedureClaimedCode\": null,\r\n                \"containerReferences\": [\r\n                    \"MSCU2092276\"\r\n                ],\r\n                \"numberPackages\": 10000,\r\n                \"grossWeight\": 1000,\r\n                \"netWeight\": 1000,\r\n                \"vehicles\": [],\r\n                \"containers\": [\r\n                    {\r\n                        \"seals\": \"4000001, 4000002, 4000003, 4000004\",\r\n                        \"containerType\": \"20R0\",\r\n                        \"containerNumber\": \"MSCU2092276\"\r\n                    }\r\n                ],\r\n                \"manufacture\": \"Godi Cheese With Vegetable Oil\",\r\n                \"shippingMark\": \"Oranges contained in two container\",\r\n                \"modelVehicles\": [],\r\n                \"insuranceLocal\": 0,\r\n                \"packageOfVolM3\": 1,\r\n                \"quotaProfileId\": null,\r\n                \"deductionsLocal\": 0,\r\n                \"extFreightLocal\": 0,\r\n                \"insuranceFxRate\": \"\",\r\n                \"otherCostsLocal\": 0,\r\n                \"valuationMethod\": \"1\",\r\n                \"deductedQuantity\": null,\r\n                \"deductionsFxRate\": 0,\r\n                \"descriptionGoods\": \"- Other\",\r\n                \"extFreightFxRate\": \"\",\r\n                \"insuranceForeign\": null,\r\n                \"lineCurrencyCode\": \"AFN\",\r\n                \"lineExchangeRate\": 1,\r\n                \"netWeightUOMCode\": \"05\",\r\n                \"otherCostsFxRate\": 0,\r\n                \"deductionsForeign\": 0,\r\n                \"extFreightForeign\": null,\r\n                \"otherCostsForeign\": 0,\r\n                \"grossWeightUOMCode\": \"06\",\r\n                \"governmentProcedure\": \"4000\",\r\n                \"linePackageTypeCode\": \"4A\",\r\n                \"statisticalQuantity\": 15000,\r\n                \"statisticalUnitCode\": \"KGM\",\r\n                \"valuationMethodCode\": \"1\",\r\n                \"supplierRelationCode\": \"135\",\r\n                \"valueForeignCurrency\": \"15000\",\r\n                \"insuranceCurrencyCode\": null,\r\n                \"deductionsCurrencyCode\": 0,\r\n                \"extFreightCurrencyCode\": null,\r\n                \"otherCostsCurrencyCode\": 0,\r\n                \"associatedGovtProcedure\": true,\r\n                \"valuationAdjustmentRate\": 1,\r\n                \"valuationAdjustmentValue\": 0,\r\n                \"valuationAdjustmentTypeCode\": null\r\n            },\r\n            {\r\n                \"commodityClassification\": \"02011010\",\r\n                \"commercialGoodsDesc\": \"Oranges\",\r\n                \"supplementaryQuantity\": 100,\r\n                \"permitReferences\": [],\r\n                \"goodsStatusCode\": null,\r\n                \"countryOriginCode\": \"AD\",\r\n                \"regionOriginCode\": \"08\",\r\n                \"declaredValue\": 1100503.884045,\r\n                \"dutyAssessmentValue\": 1100503.884045,\r\n                \"freightCharge\": 0,\r\n                \"insuranceCharge\": 0,\r\n                \"tariffPreferenceClaimedCode\": null,\r\n                \"govtProcedureClaimedCode\": null,\r\n                \"containerReferences\": [\r\n                    \"MSCU2092276\"\r\n                ],\r\n                \"numberPackages\": 10000,\r\n                \"grossWeight\": 1000,\r\n                \"netWeight\": 1000,\r\n                \"vehicles\": [],\r\n                \"containers\": [\r\n                    {\r\n                        \"seals\": \"4000001, 4000002, 4000003, 4000004\",\r\n                        \"containerType\": \"20R0\",\r\n                        \"containerNumber\": \"MSCU2092276\"\r\n                    }\r\n                ],\r\n                \"manufacture\": \"Godi Cheese With Vegetable Oil\",\r\n                \"shippingMark\": \"Oranges contained in two container\",\r\n                \"modelVehicles\": [],\r\n                \"insuranceLocal\": 0,\r\n                \"packageOfVolM3\": 1,\r\n                \"deductionsLocal\": 0,\r\n                \"extFreightLocal\": 0,\r\n                \"insuranceFxRate\": \"\",\r\n                \"otherCostsLocal\": 0,\r\n                \"valuationMethod\": \"1\",\r\n                \"deductedQuantity\": null,\r\n                \"deductionsFxRate\": 0,\r\n                \"descriptionGoods\": \"--Organic meat\",\r\n                \"extFreightFxRate\": \"\",\r\n                \"insuranceForeign\": null,\r\n                \"lineCurrencyCode\": \"USD\",\r\n                \"lineExchangeRate\": 73.36692560300276,\r\n                \"netWeightUOMCode\": \"05\",\r\n                \"otherCostsFxRate\": 0,\r\n                \"deductionsForeign\": 0,\r\n                \"extFreightForeign\": null,\r\n                \"otherCostsForeign\": 0,\r\n                \"grossWeightUOMCode\": \"06\",\r\n                \"governmentProcedure\": \"4400\",\r\n                \"linePackageTypeCode\": \"4A\",\r\n                \"statisticalQuantity\": 1100503.884045,\r\n                \"statisticalUnitCode\": \"KGM\",\r\n                \"valuationMethodCode\": \"1\",\r\n                \"supplierRelationCode\": \"135\",\r\n                \"valueForeignCurrency\": \"15000\",\r\n                \"insuranceCurrencyCode\": null,\r\n                \"deductionsCurrencyCode\": 0,\r\n                \"extFreightCurrencyCode\": null,\r\n                \"otherCostsCurrencyCode\": 0,\r\n                \"associatedGovtProcedure\": false,\r\n                \"valuationAdjustmentRate\": 1,\r\n                \"valuationAdjustmentValue\": 0,\r\n                \"valuationAdjustmentTypeCode\": null\r\n            },\r\n            {\r\n                \"commodityClassification\": \"18062000\",\r\n                \"commercialGoodsDesc\": \"Oranges\",\r\n                \"supplementaryQuantity\": 1000,\r\n                \"permitReferences\": [],\r\n                \"goodsStatusCode\": null,\r\n                \"countryOriginCode\": \"AD\",\r\n                \"regionOriginCode\": \"08\",\r\n                \"declaredValue\": 293767.717865,\r\n                \"dutyAssessmentValue\": 293767.717865,\r\n                \"freightCharge\": 0,\r\n                \"insuranceCharge\": 0,\r\n                \"tariffPreferenceClaimedCode\": null,\r\n                \"govtProcedureClaimedCode\": null,\r\n                \"containerReferences\": [\r\n                    \"MSCU2092276\"\r\n                ],\r\n                \"numberPackages\": 10000,\r\n                \"grossWeight\": 1000,\r\n                \"netWeight\": 1000,\r\n                \"vehicles\": [],\r\n                \"containers\": [\r\n                    {\r\n                        \"seals\": \"4000001, 4000002, 4000003, 4000004\",\r\n                        \"containerType\": \"20R0\",\r\n                        \"containerNumber\": \"MSCU2092276\"\r\n                    }\r\n                ],\r\n                \"manufacture\": \"Godi Cheese With Vegetable Oil\",\r\n                \"shippingMark\": \"Oranges contained in two container\",\r\n                \"modelVehicles\": [],\r\n                \"insuranceLocal\": 0,\r\n                \"packageOfVolM3\": 1,\r\n                \"deductionsLocal\": 0,\r\n                \"extFreightLocal\": 0,\r\n                \"insuranceFxRate\": \"\",\r\n                \"otherCostsLocal\": 0,\r\n                \"valuationMethod\": \"1\",\r\n                \"deductedQuantity\": null,\r\n                \"deductionsFxRate\": 0,\r\n                \"descriptionGoods\": \"- Other preparations in blocks, slabs or bars weighing more than 2�kg or in liquid, paste, powder, granular or other bulk form in containers or immediate packings, of a content exceeding 2�kg\",\r\n                \"extFreightFxRate\": \"\",\r\n                \"insuranceForeign\": null,\r\n                \"lineCurrencyCode\": \"SAR\",\r\n                \"lineExchangeRate\": 19.584514524365584,\r\n                \"netWeightUOMCode\": \"08\",\r\n                \"otherCostsFxRate\": 0,\r\n                \"deductionsForeign\": 0,\r\n                \"extFreightForeign\": null,\r\n                \"otherCostsForeign\": 0,\r\n                \"grossWeightUOMCode\": \"05\",\r\n                \"governmentProcedure\": \"4000\",\r\n                \"linePackageTypeCode\": \"4A\",\r\n                \"statisticalQuantity\": 293767.717865,\r\n                \"statisticalUnitCode\": \"KGM\",\r\n                \"valuationMethodCode\": \"1\",\r\n                \"supplierRelationCode\": \"135\",\r\n                \"valueForeignCurrency\": \"15000\",\r\n                \"insuranceCurrencyCode\": null,\r\n                \"deductionsCurrencyCode\": 0,\r\n                \"extFreightCurrencyCode\": null,\r\n                \"otherCostsCurrencyCode\": 0,\r\n                \"associatedGovtProcedure\": false,\r\n                \"valuationAdjustmentRate\": 1,\r\n                \"valuationAdjustmentValue\": 0,\r\n                \"valuationAdjustmentTypeCode\": null\r\n            },\r\n            {\r\n                \"commodityClassification\": \"30012000\",\r\n                \"commercialGoodsDesc\": \"Oranges\",\r\n                \"supplementaryQuantity\": 100,\r\n                \"permitReferences\": [],\r\n                \"goodsStatusCode\": null,\r\n                \"countryOriginCode\": \"AD\",\r\n                \"regionOriginCode\": \"GU\",\r\n                \"declaredValue\": 1100503.884045,\r\n                \"dutyAssessmentValue\": 1100503.884045,\r\n                \"freightCharge\": 0,\r\n                \"insuranceCharge\": 0,\r\n                \"tariffPreferenceClaimedCode\": null,\r\n                \"govtProcedureClaimedCode\": null,\r\n                \"containerReferences\": [\r\n                    \"IPXU2148384\"\r\n                ],\r\n                \"numberPackages\": 10000,\r\n                \"grossWeight\": 1000,\r\n                \"netWeight\": 1000,\r\n                \"vehicles\": [],\r\n                \"containers\": [\r\n                    {\r\n                        \"seals\": \"5000001, 5000002, 5000003, 5000004\",\r\n                        \"containerType\": \"20R0\",\r\n                        \"containerNumber\": \"IPXU2148384\"\r\n                    }\r\n                ],\r\n                \"manufacture\": \"Godi Cheese With Vegetable Oil\",\r\n                \"shippingMark\": \"Oranges contained in two container\",\r\n                \"modelVehicles\": [],\r\n                \"insuranceLocal\": 0,\r\n                \"packageOfVolM3\": 1,\r\n                \"deductionsLocal\": 0,\r\n                \"extFreightLocal\": 0,\r\n                \"insuranceFxRate\": \"\",\r\n                \"otherCostsLocal\": 0,\r\n                \"valuationMethod\": \"1\",\r\n                \"deductedQuantity\": null,\r\n                \"deductionsFxRate\": 0,\r\n                \"descriptionGoods\": \"- Extracts of glands or other organs or of their secretions\",\r\n                \"extFreightFxRate\": \"\",\r\n                \"insuranceForeign\": null,\r\n                \"lineCurrencyCode\": \"USD\",\r\n                \"lineExchangeRate\": 73.36692560300276,\r\n                \"netWeightUOMCode\": \"05\",\r\n                \"otherCostsFxRate\": 0,\r\n                \"deductionsForeign\": 0,\r\n                \"extFreightForeign\": null,\r\n                \"otherCostsForeign\": 0,\r\n                \"grossWeightUOMCode\": \"05\",\r\n                \"governmentProcedure\": \"4400\",\r\n                \"linePackageTypeCode\": \"4A\",\r\n                \"statisticalQuantity\": 1100503.884045,\r\n                \"statisticalUnitCode\": \"KGM\",\r\n                \"valuationMethodCode\": \"1\",\r\n                \"supplierRelationCode\": \"135\",\r\n                \"valueForeignCurrency\": \"15000\",\r\n                \"insuranceCurrencyCode\": null,\r\n                \"deductionsCurrencyCode\": 0,\r\n                \"extFreightCurrencyCode\": null,\r\n                \"otherCostsCurrencyCode\": 0,\r\n                \"associatedGovtProcedure\": false,\r\n                \"valuationAdjustmentRate\": 1,\r\n                \"valuationAdjustmentValue\": 0,\r\n                \"valuationAdjustmentTypeCode\": null\r\n            },\r\n            {\r\n                \"commodityClassification\": \"50020000\",\r\n                \"commercialGoodsDesc\": \"Oranges\",\r\n                \"supplementaryQuantity\": 1000,\r\n                \"permitReferences\": [],\r\n                \"goodsStatusCode\": null,\r\n                \"countryOriginCode\": \"AD\",\r\n                \"regionOriginCode\": \"GU\",\r\n                \"declaredValue\": 1100503.884045,\r\n                \"dutyAssessmentValue\": 1100503.884045,\r\n                \"freightCharge\": 0,\r\n                \"insuranceCharge\": 0,\r\n                \"tariffPreferenceClaimedCode\": null,\r\n                \"govtProcedureClaimedCode\": null,\r\n                \"containerReferences\": [\r\n                    \"MSCU2092276\"\r\n                ],\r\n                \"numberPackages\": 10000,\r\n                \"grossWeight\": 1000,\r\n                \"netWeight\": 1000,\r\n                \"vehicles\": [],\r\n                \"containers\": [\r\n                    {\r\n                        \"seals\": \"4000001, 4000002, 4000003, 4000004\",\r\n                        \"containerType\": \"20R0\",\r\n                        \"containerNumber\": \"MSCU2092276\"\r\n                    }\r\n                ],\r\n                \"manufacture\": \"Godi Cheese With Vegetable Oil\",\r\n                \"shippingMark\": \"Oranges contained in two container\",\r\n                \"modelVehicles\": [],\r\n                \"insuranceLocal\": 0,\r\n                \"packageOfVolM3\": 1,\r\n                \"deductionsLocal\": 0,\r\n                \"extFreightLocal\": 0,\r\n                \"insuranceFxRate\": \"\",\r\n                \"otherCostsLocal\": 0,\r\n                \"valuationMethod\": \"1\",\r\n                \"deductedQuantity\": null,\r\n                \"deductionsFxRate\": 0,\r\n                \"descriptionGoods\": \"Raw silk (not thrown).\",\r\n                \"extFreightFxRate\": \"\",\r\n                \"insuranceForeign\": null,\r\n                \"lineCurrencyCode\": \"USD\",\r\n                \"lineExchangeRate\": 73.36692560300276,\r\n                \"netWeightUOMCode\": \"05\",\r\n                \"otherCostsFxRate\": 0,\r\n                \"deductionsForeign\": 0,\r\n                \"extFreightForeign\": null,\r\n                \"otherCostsForeign\": 0,\r\n                \"grossWeightUOMCode\": \"05\",\r\n                \"governmentProcedure\": \"4000\",\r\n                \"linePackageTypeCode\": \"4A\",\r\n                \"statisticalQuantity\": 1100503.884045,\r\n                \"statisticalUnitCode\": \"KGM\",\r\n                \"valuationMethodCode\": \"1\",\r\n                \"supplierRelationCode\": \"135\",\r\n                \"valueForeignCurrency\": \"15000\",\r\n                \"insuranceCurrencyCode\": null,\r\n                \"deductionsCurrencyCode\": 0,\r\n                \"extFreightCurrencyCode\": null,\r\n                \"otherCostsCurrencyCode\": 0,\r\n                \"associatedGovtProcedure\": false,\r\n                \"valuationAdjustmentRate\": 1,\r\n                \"valuationAdjustmentValue\": 0,\r\n                \"valuationAdjustmentTypeCode\": null\r\n            },\r\n            {\r\n                \"commodityClassification\": \"50010000\",\r\n                \"commercialGoodsDesc\": \"Oranges\",\r\n                \"supplementaryQuantity\": 1000,\r\n                \"permitReferences\": [],\r\n                \"goodsStatusCode\": null,\r\n                \"countryOriginCode\": \"AD\",\r\n                \"regionOriginCode\": \"GU\",\r\n                \"declaredValue\": 1100503.884045,\r\n                \"dutyAssessmentValue\": 1100503.884045,\r\n                \"freightCharge\": 0,\r\n                \"insuranceCharge\": 0,\r\n                \"tariffPreferenceClaimedCode\": null,\r\n                \"govtProcedureClaimedCode\": null,\r\n                \"containerReferences\": [\r\n                    \"IPXU2148384\"\r\n                ],\r\n                \"numberPackages\": 10000,\r\n                \"grossWeight\": 1000,\r\n                \"netWeight\": 1000,\r\n                \"vehicles\": [],\r\n                \"containers\": [\r\n                    {\r\n                        \"seals\": \"5000001, 5000002, 5000003, 5000004\",\r\n                        \"containerType\": \"20R0\",\r\n                        \"containerNumber\": \"IPXU2148384\"\r\n                    }\r\n                ],\r\n                \"manufacture\": \"Godi Cheese With Vegetable Oil\",\r\n                \"shippingMark\": \"Oranges contained in two container\",\r\n                \"modelVehicles\": [],\r\n                \"insuranceLocal\": 0,\r\n                \"packageOfVolM3\": 1,\r\n                \"deductionsLocal\": 0,\r\n                \"extFreightLocal\": 0,\r\n                \"insuranceFxRate\": \"\",\r\n                \"otherCostsLocal\": 0,\r\n                \"valuationMethod\": \"1\",\r\n                \"deductedQuantity\": null,\r\n                \"deductionsFxRate\": 0,\r\n                \"descriptionGoods\": \"Silk-worm cocoons suitable for reeling.\",\r\n                \"extFreightFxRate\": \"\",\r\n                \"insuranceForeign\": null,\r\n                \"lineCurrencyCode\": \"USD\",\r\n                \"lineExchangeRate\": 73.36692560300276,\r\n                \"netWeightUOMCode\": \"10\",\r\n                \"otherCostsFxRate\": 0,\r\n                \"deductionsForeign\": 0,\r\n                \"extFreightForeign\": null,\r\n                \"otherCostsForeign\": 0,\r\n                \"grossWeightUOMCode\": \"05\",\r\n                \"governmentProcedure\": \"4000\",\r\n                \"linePackageTypeCode\": \"4A\",\r\n                \"statisticalQuantity\": 1100503.884045,\r\n                \"statisticalUnitCode\": \"KGM\",\r\n                \"valuationMethodCode\": \"1\",\r\n                \"supplierRelationCode\": \"135\",\r\n                \"valueForeignCurrency\": \"15000\",\r\n                \"insuranceCurrencyCode\": null,\r\n                \"deductionsCurrencyCode\": 0,\r\n                \"extFreightCurrencyCode\": null,\r\n                \"otherCostsCurrencyCode\": 0,\r\n                \"associatedGovtProcedure\": false,\r\n                \"valuationAdjustmentRate\": 1,\r\n                \"valuationAdjustmentValue\": 0,\r\n                \"valuationAdjustmentTypeCode\": null\r\n            },\r\n            {\r\n                \"commodityClassification\": \"50030000\",\r\n                \"commercialGoodsDesc\": \"Oranges\",\r\n                \"supplementaryQuantity\": 1000,\r\n                \"permitReferences\": [],\r\n                \"goodsStatusCode\": null,\r\n                \"countryOriginCode\": \"AD\",\r\n                \"regionOriginCode\": \"GU\",\r\n                \"declaredValue\": 1100503.884045,\r\n                \"dutyAssessmentValue\": 1100503.884045,\r\n                \"freightCharge\": 0,\r\n                \"insuranceCharge\": 0,\r\n                \"tariffPreferenceClaimedCode\": null,\r\n                \"govtProcedureClaimedCode\": null,\r\n                \"containerReferences\": [\r\n                    \"MSCU2092276\"\r\n                ],\r\n                \"numberPackages\": 10000,\r\n                \"grossWeight\": 1000,\r\n                \"netWeight\": 1000,\r\n                \"vehicles\": [],\r\n                \"containers\": [\r\n                    {\r\n                        \"seals\": \"4000001, 4000002, 4000003, 4000004\",\r\n                        \"containerType\": \"20R0\",\r\n                        \"containerNumber\": \"MSCU2092276\"\r\n                    }\r\n                ],\r\n                \"manufacture\": \"Godi Cheese With Vegetable Oil\",\r\n                \"shippingMark\": \"Oranges contained in two container\",\r\n                \"modelVehicles\": [],\r\n                \"insuranceLocal\": 0,\r\n                \"packageOfVolM3\": 1,\r\n                \"deductionsLocal\": 0,\r\n                \"extFreightLocal\": 0,\r\n                \"insuranceFxRate\": \"\",\r\n                \"otherCostsLocal\": 0,\r\n                \"valuationMethod\": \"1\",\r\n                \"deductedQuantity\": null,\r\n                \"deductionsFxRate\": 0,\r\n                \"descriptionGoods\": \"Silk waste (including cocoons unsuitable for reeling, yarn waste and garnetted stock).\",\r\n                \"extFreightFxRate\": \"\",\r\n                \"insuranceForeign\": null,\r\n                \"lineCurrencyCode\": \"USD\",\r\n                \"lineExchangeRate\": 73.36692560300276,\r\n                \"netWeightUOMCode\": \"06\",\r\n                \"otherCostsFxRate\": 0,\r\n                \"deductionsForeign\": 0,\r\n                \"extFreightForeign\": null,\r\n                \"otherCostsForeign\": 0,\r\n                \"grossWeightUOMCode\": \"05\",\r\n                \"governmentProcedure\": \"4000\",\r\n                \"linePackageTypeCode\": \"4A\",\r\n                \"statisticalQuantity\": 1100503.884045,\r\n                \"statisticalUnitCode\": \"KGM\",\r\n                \"valuationMethodCode\": \"1\",\r\n                \"supplierRelationCode\": \"135\",\r\n                \"valueForeignCurrency\": \"15000\",\r\n                \"insuranceCurrencyCode\": null,\r\n                \"deductionsCurrencyCode\": 0,\r\n                \"extFreightCurrencyCode\": null,\r\n                \"otherCostsCurrencyCode\": 0,\r\n                \"associatedGovtProcedure\": false,\r\n                \"valuationAdjustmentRate\": 1,\r\n                \"valuationAdjustmentValue\": 0,\r\n                \"valuationAdjustmentTypeCode\": null\r\n            },\r\n            {\r\n                \"commodityClassification\": \"20029011\",\r\n                \"commercialGoodsDesc\": \"Oranges\",\r\n                \"supplementaryQuantity\": 1000,\r\n                \"permitReferences\": [],\r\n                \"goodsStatusCode\": null,\r\n                \"countryOriginCode\": \"AD\",\r\n                \"regionOriginCode\": \"GU\",\r\n                \"declaredValue\": 1100503.884045,\r\n                \"dutyAssessmentValue\": 1100503.884045,\r\n                \"freightCharge\": 0,\r\n                \"insuranceCharge\": 0,\r\n                \"tariffPreferenceClaimedCode\": null,\r\n                \"govtProcedureClaimedCode\": null,\r\n                \"containerReferences\": [\r\n                    \"MSCU2092276\"\r\n                ],\r\n                \"numberPackages\": 10000,\r\n                \"grossWeight\": 1000,\r\n                \"netWeight\": 1000,\r\n                \"vehicles\": [],\r\n                \"containers\": [\r\n                    {\r\n                        \"seals\": \"4000001, 4000002, 4000003, 4000004\",\r\n                        \"containerType\": \"20R0\",\r\n                        \"containerNumber\": \"MSCU2092276\"\r\n                    }\r\n                ],\r\n                \"manufacture\": \"Godi Cheese With Vegetable Oil\",\r\n                \"shippingMark\": \"Oranges contained in two container\",\r\n                \"modelVehicles\": [],\r\n                \"insuranceLocal\": 0,\r\n                \"packageOfVolM3\": 1,\r\n                \"deductionsLocal\": 0,\r\n                \"extFreightLocal\": 0,\r\n                \"insuranceFxRate\": \"\",\r\n                \"otherCostsLocal\": 0,\r\n                \"valuationMethod\": \"1\",\r\n                \"deductedQuantity\": null,\r\n                \"deductionsFxRate\": 0,\r\n                \"descriptionGoods\": \"---  Triple concentrate\",\r\n                \"extFreightFxRate\": \"\",\r\n                \"insuranceForeign\": null,\r\n                \"lineCurrencyCode\": \"USD\",\r\n                \"lineExchangeRate\": 73.36692560300276,\r\n                \"netWeightUOMCode\": \"08\",\r\n                \"otherCostsFxRate\": 0,\r\n                \"deductionsForeign\": 0,\r\n                \"extFreightForeign\": null,\r\n                \"otherCostsForeign\": 0,\r\n                \"grossWeightUOMCode\": \"05\",\r\n                \"governmentProcedure\": \"4100\",\r\n                \"linePackageTypeCode\": \"4A\",\r\n                \"statisticalQuantity\": 1100503.884045,\r\n                \"statisticalUnitCode\": \"KGM\",\r\n                \"valuationMethodCode\": \"1\",\r\n                \"supplierRelationCode\": \"135\",\r\n                \"valueForeignCurrency\": \"15000\",\r\n                \"insuranceCurrencyCode\": null,\r\n                \"deductionsCurrencyCode\": 0,\r\n                \"extFreightCurrencyCode\": null,\r\n                \"otherCostsCurrencyCode\": 0,\r\n                \"associatedGovtProcedure\": false,\r\n                \"valuationAdjustmentRate\": 1,\r\n                \"valuationAdjustmentValue\": 0,\r\n                \"valuationAdjustmentTypeCode\": null\r\n            },\r\n            {\r\n                \"commodityClassification\": \"20049000\",\r\n                \"commercialGoodsDesc\": \"Oranges\",\r\n                \"supplementaryQuantity\": 1000,\r\n                \"permitReferences\": [],\r\n                \"goodsStatusCode\": null,\r\n                \"countryOriginCode\": \"AD\",\r\n                \"regionOriginCode\": \"GU\",\r\n                \"declaredValue\": 1100503.884045,\r\n                \"dutyAssessmentValue\": 1100503.884045,\r\n                \"freightCharge\": 0,\r\n                \"insuranceCharge\": 0,\r\n                \"tariffPreferenceClaimedCode\": null,\r\n                \"govtProcedureClaimedCode\": null,\r\n                \"containerReferences\": [\r\n                    \"MSCU2092276\"\r\n                ],\r\n                \"numberPackages\": 10000,\r\n                \"grossWeight\": 1000,\r\n                \"netWeight\": 1000,\r\n                \"vehicles\": [],\r\n                \"containers\": [\r\n                    {\r\n                        \"seals\": \"4000001, 4000002, 4000003, 4000004\",\r\n                        \"containerType\": \"20R0\",\r\n                        \"containerNumber\": \"MSCU2092276\"\r\n                    }\r\n                ],\r\n                \"manufacture\": \"Godi Cheese With Vegetable Oil\",\r\n                \"shippingMark\": \"Oranges contained in two container\",\r\n                \"modelVehicles\": [],\r\n                \"insuranceLocal\": 0,\r\n                \"packageOfVolM3\": 1,\r\n                \"deductionsLocal\": 0,\r\n                \"extFreightLocal\": 0,\r\n                \"insuranceFxRate\": \"\",\r\n                \"otherCostsLocal\": 0,\r\n                \"valuationMethod\": \"1\",\r\n                \"deductedQuantity\": null,\r\n                \"deductionsFxRate\": 0,\r\n                \"descriptionGoods\": \"- Other vegetables and mixtures of vegetables\",\r\n                \"extFreightFxRate\": \"\",\r\n                \"insuranceForeign\": null,\r\n                \"lineCurrencyCode\": \"USD\",\r\n                \"lineExchangeRate\": 73.36692560300276,\r\n                \"netWeightUOMCode\": \"08\",\r\n                \"otherCostsFxRate\": 0,\r\n                \"deductionsForeign\": 0,\r\n                \"extFreightForeign\": null,\r\n                \"otherCostsForeign\": 0,\r\n                \"grossWeightUOMCode\": \"05\",\r\n                \"governmentProcedure\": \"4300\",\r\n                \"linePackageTypeCode\": \"4A\",\r\n                \"statisticalQuantity\": 1100503.884045,\r\n                \"statisticalUnitCode\": \"KGM\",\r\n                \"valuationMethodCode\": \"1\",\r\n                \"supplierRelationCode\": \"135\",\r\n                \"valueForeignCurrency\": \"15000\",\r\n                \"insuranceCurrencyCode\": null,\r\n                \"deductionsCurrencyCode\": 0,\r\n                \"extFreightCurrencyCode\": null,\r\n                \"otherCostsCurrencyCode\": 0,\r\n                \"associatedGovtProcedure\": false,\r\n                \"valuationAdjustmentRate\": 1,\r\n                \"valuationAdjustmentValue\": 0,\r\n                \"valuationAdjustmentTypeCode\": null\r\n            },\r\n            {\r\n                \"commodityClassification\": \"60012900\",\r\n                \"commercialGoodsDesc\": \"Oranges\",\r\n                \"supplementaryQuantity\": 1000,\r\n                \"permitReferences\": [],\r\n                \"goodsStatusCode\": null,\r\n                \"countryOriginCode\": \"AD\",\r\n                \"regionOriginCode\": \"GU\",\r\n                \"declaredValue\": 1100503.884045,\r\n                \"dutyAssessmentValue\": 1100503.884045,\r\n                \"freightCharge\": 0,\r\n                \"insuranceCharge\": 0,\r\n                \"tariffPreferenceClaimedCode\": null,\r\n                \"govtProcedureClaimedCode\": null,\r\n                \"containerReferences\": [\r\n                    \"IPXU2148384\"\r\n                ],\r\n                \"numberPackages\": 10000,\r\n                \"grossWeight\": 1000,\r\n                \"netWeight\": 1000,\r\n                \"vehicles\": [],\r\n                \"containers\": [\r\n                    {\r\n                        \"seals\": \"5000001, 5000002, 5000003, 5000004\",\r\n                        \"containerType\": \"20R0\",\r\n                        \"containerNumber\": \"IPXU2148384\"\r\n                    }\r\n                ],\r\n                \"manufacture\": \"Godi Cheese With Vegetable Oil\",\r\n                \"shippingMark\": \"Oranges contained in two container\",\r\n                \"modelVehicles\": [],\r\n                \"insuranceLocal\": 0,\r\n                \"packageOfVolM3\": 1,\r\n                \"deductionsLocal\": 0,\r\n                \"extFreightLocal\": 0,\r\n                \"insuranceFxRate\": \"\",\r\n                \"otherCostsLocal\": 0,\r\n                \"valuationMethod\": \"1\",\r\n                \"deductedQuantity\": null,\r\n                \"deductionsFxRate\": 0,\r\n                \"descriptionGoods\": \"-- Of other textile materials\",\r\n                \"extFreightFxRate\": \"\",\r\n                \"insuranceForeign\": null,\r\n                \"lineCurrencyCode\": \"USD\",\r\n                \"lineExchangeRate\": 73.36692560300276,\r\n                \"netWeightUOMCode\": \"10\",\r\n                \"otherCostsFxRate\": 0,\r\n                \"deductionsForeign\": 0,\r\n                \"extFreightForeign\": null,\r\n                \"otherCostsForeign\": 0,\r\n                \"grossWeightUOMCode\": \"05\",\r\n                \"governmentProcedure\": \"4500\",\r\n                \"linePackageTypeCode\": \"4A\",\r\n                \"statisticalQuantity\": 1100503.884045,\r\n                \"statisticalUnitCode\": \"KGM\",\r\n                \"valuationMethodCode\": \"1\",\r\n                \"supplierRelationCode\": \"135\",\r\n                \"valueForeignCurrency\": \"15000\",\r\n                \"insuranceCurrencyCode\": null,\r\n                \"deductionsCurrencyCode\": 0,\r\n                \"extFreightCurrencyCode\": null,\r\n                \"otherCostsCurrencyCode\": 0,\r\n                \"associatedGovtProcedure\": false,\r\n                \"valuationAdjustmentRate\": 1,\r\n                \"valuationAdjustmentValue\": 0,\r\n                \"valuationAdjustmentTypeCode\": null\r\n            },\r\n            {\r\n                \"commodityClassification\": \"40024100\",\r\n                \"commercialGoodsDesc\": \"Oranges\",\r\n                \"supplementaryQuantity\": 4000,\r\n                \"permitReferences\": [],\r\n                \"goodsStatusCode\": null,\r\n                \"countryOriginCode\": \"AD\",\r\n                \"regionOriginCode\": \"GU\",\r\n                \"declaredValue\": 1100503.884045,\r\n                \"dutyAssessmentValue\": 1100503.884045,\r\n                \"freightCharge\": 0,\r\n                \"insuranceCharge\": 0,\r\n                \"tariffPreferenceClaimedCode\": null,\r\n                \"govtProcedureClaimedCode\": null,\r\n                \"containerReferences\": [\r\n                    \"MSCU2092276\"\r\n                ],\r\n                \"numberPackages\": 10000,\r\n                \"grossWeight\": 1000,\r\n                \"netWeight\": 1000,\r\n                \"vehicles\": [],\r\n                \"containers\": [\r\n                    {\r\n                        \"seals\": \"4000001, 4000002, 4000003, 4000004\",\r\n                        \"containerType\": \"20R0\",\r\n                        \"containerNumber\": \"MSCU2092276\"\r\n                    }\r\n                ],\r\n                \"manufacture\": \"Godi Cheese With Vegetable Oil\",\r\n                \"shippingMark\": \"Oranges contained in two container\",\r\n                \"modelVehicles\": [],\r\n                \"insuranceLocal\": 0,\r\n                \"packageOfVolM3\": 1,\r\n                \"deductionsLocal\": 0,\r\n                \"extFreightLocal\": 0,\r\n                \"insuranceFxRate\": \"\",\r\n                \"otherCostsLocal\": 0,\r\n                \"valuationMethod\": \"1\",\r\n                \"deductedQuantity\": null,\r\n                \"deductionsFxRate\": 0,\r\n                \"descriptionGoods\": \"-- Latex\",\r\n                \"extFreightFxRate\": \"\",\r\n                \"insuranceForeign\": null,\r\n                \"lineCurrencyCode\": \"USD\",\r\n                \"lineExchangeRate\": 73.36692560300276,\r\n                \"netWeightUOMCode\": \"10\",\r\n                \"otherCostsFxRate\": 0,\r\n                \"deductionsForeign\": 0,\r\n                \"extFreightForeign\": null,\r\n                \"otherCostsForeign\": 0,\r\n                \"grossWeightUOMCode\": \"05\",\r\n                \"governmentProcedure\": \"4400\",\r\n                \"linePackageTypeCode\": \"4A\",\r\n                \"statisticalQuantity\": 1100503.884045,\r\n                \"statisticalUnitCode\": \"KGM\",\r\n                \"valuationMethodCode\": \"1\",\r\n                \"supplierRelationCode\": \"135\",\r\n                \"valueForeignCurrency\": \"15000\",\r\n                \"insuranceCurrencyCode\": null,\r\n                \"deductionsCurrencyCode\": 0,\r\n                \"extFreightCurrencyCode\": null,\r\n                \"otherCostsCurrencyCode\": 0,\r\n                \"associatedGovtProcedure\": false,\r\n                \"valuationAdjustmentRate\": 1,\r\n                \"valuationAdjustmentValue\": 0,\r\n                \"valuationAdjustmentTypeCode\": null\r\n            },\r\n            {\r\n                \"commodityClassification\": \"06049000\",\r\n                \"commercialGoodsDesc\": \"Oranges\",\r\n                \"supplementaryQuantity\": 1000,\r\n                \"permitReferences\": [],\r\n                \"goodsStatusCode\": null,\r\n                \"countryOriginCode\": \"AD\",\r\n                \"regionOriginCode\": \"GU\",\r\n                \"declaredValue\": 1100503.884045,\r\n                \"dutyAssessmentValue\": 1100503.884045,\r\n                \"freightCharge\": 0,\r\n                \"insuranceCharge\": 0,\r\n                \"tariffPreferenceClaimedCode\": null,\r\n                \"govtProcedureClaimedCode\": null,\r\n                \"containerReferences\": [\r\n                    \"MSCU2092276\"\r\n                ],\r\n                \"numberPackages\": 10000,\r\n                \"grossWeight\": 1000,\r\n                \"netWeight\": 1000,\r\n                \"vehicles\": [],\r\n                \"containers\": [\r\n                    {\r\n                        \"seals\": \"4000001, 4000002, 4000003, 4000004\",\r\n                        \"containerType\": \"20R0\",\r\n                        \"containerNumber\": \"MSCU2092276\"\r\n                    }\r\n                ],\r\n                \"manufacture\": \"Godi Cheese With Vegetable Oil\",\r\n                \"shippingMark\": \"Oranges contained in two container\",\r\n                \"modelVehicles\": [],\r\n                \"insuranceLocal\": 0,\r\n                \"packageOfVolM3\": 1,\r\n                \"deductionsLocal\": 0,\r\n                \"extFreightLocal\": 0,\r\n                \"insuranceFxRate\": \"\",\r\n                \"otherCostsLocal\": 0,\r\n                \"valuationMethod\": \"1\",\r\n                \"deductedQuantity\": null,\r\n                \"deductionsFxRate\": 0,\r\n                \"descriptionGoods\": \"- Other\",\r\n                \"extFreightFxRate\": \"\",\r\n                \"insuranceForeign\": null,\r\n                \"lineCurrencyCode\": \"USD\",\r\n                \"lineExchangeRate\": 73.36692560300276,\r\n                \"netWeightUOMCode\": \"08\",\r\n                \"otherCostsFxRate\": 0,\r\n                \"deductionsForeign\": 0,\r\n                \"extFreightForeign\": null,\r\n                \"otherCostsForeign\": 0,\r\n                \"grossWeightUOMCode\": \"05\",\r\n                \"governmentProcedure\": \"4000\",\r\n                \"linePackageTypeCode\": \"4A\",\r\n                \"statisticalQuantity\": 1100503.884045,\r\n                \"statisticalUnitCode\": \"KGM\",\r\n                \"valuationMethodCode\": \"1\",\r\n                \"supplierRelationCode\": \"135\",\r\n                \"valueForeignCurrency\": \"15000\",\r\n                \"insuranceCurrencyCode\": null,\r\n                \"deductionsCurrencyCode\": 0,\r\n                \"extFreightCurrencyCode\": null,\r\n                \"otherCostsCurrencyCode\": 0,\r\n                \"associatedGovtProcedure\": true,\r\n                \"valuationAdjustmentRate\": 1,\r\n                \"valuationAdjustmentValue\": 0,\r\n                \"valuationAdjustmentTypeCode\": null\r\n            },\r\n            {\r\n                \"commodityClassification\": \"06049000\",\r\n                \"commercialGoodsDesc\": \"Oranges\",\r\n                \"supplementaryQuantity\": 1000,\r\n                \"permitReferences\": [],\r\n                \"goodsStatusCode\": null,\r\n                \"countryOriginCode\": \"AD\",\r\n                \"regionOriginCode\": \"GU\",\r\n                \"declaredValue\": 1100503.884045,\r\n                \"dutyAssessmentValue\": 1100503.884045,\r\n                \"freightCharge\": 0,\r\n                \"insuranceCharge\": 0,\r\n                \"tariffPreferenceClaimedCode\": null,\r\n                \"govtProcedureClaimedCode\": null,\r\n                \"containerReferences\": [\r\n                    \"MSCU2092276\"\r\n                ],\r\n                \"numberPackages\": 10000,\r\n                \"grossWeight\": 1000,\r\n                \"netWeight\": 1000,\r\n                \"vehicles\": [],\r\n                \"containers\": [\r\n                    {\r\n                        \"seals\": \"4000001, 4000002, 4000003, 4000004\",\r\n                        \"containerType\": \"20R0\",\r\n                        \"containerNumber\": \"MSCU2092276\"\r\n                    }\r\n                ],\r\n                \"manufacture\": \"Godi Cheese With Vegetable Oil\",\r\n                \"shippingMark\": \"Oranges contained in two container\",\r\n                \"modelVehicles\": [],\r\n                \"insuranceLocal\": 0,\r\n                \"packageOfVolM3\": 1,\r\n                \"deductionsLocal\": 0,\r\n                \"extFreightLocal\": 0,\r\n                \"insuranceFxRate\": \"\",\r\n                \"otherCostsLocal\": 0,\r\n                \"valuationMethod\": \"1\",\r\n                \"deductedQuantity\": null,\r\n                \"deductionsFxRate\": 0,\r\n                \"descriptionGoods\": \"- Other\",\r\n                \"extFreightFxRate\": \"\",\r\n                \"insuranceForeign\": null,\r\n                \"lineCurrencyCode\": \"USD\",\r\n                \"lineExchangeRate\": 73.36692560300276,\r\n                \"netWeightUOMCode\": \"05\",\r\n                \"otherCostsFxRate\": 0,\r\n                \"deductionsForeign\": 0,\r\n                \"extFreightForeign\": null,\r\n                \"otherCostsForeign\": 0,\r\n                \"grossWeightUOMCode\": \"05\",\r\n                \"governmentProcedure\": \"4000\",\r\n                \"linePackageTypeCode\": \"4A\",\r\n                \"statisticalQuantity\": 1100503.884045,\r\n                \"statisticalUnitCode\": \"KGM\",\r\n                \"valuationMethodCode\": \"1\",\r\n                \"supplierRelationCode\": \"135\",\r\n                \"valueForeignCurrency\": \"15000\",\r\n                \"insuranceCurrencyCode\": null,\r\n                \"deductionsCurrencyCode\": 0,\r\n                \"extFreightCurrencyCode\": null,\r\n                \"otherCostsCurrencyCode\": 0,\r\n                \"associatedGovtProcedure\": true,\r\n                \"valuationAdjustmentRate\": 1,\r\n                \"valuationAdjustmentValue\": 0,\r\n                \"valuationAdjustmentTypeCode\": null\r\n            },\r\n            {\r\n                \"commodityClassification\": \"06049000\",\r\n                \"commercialGoodsDesc\": \"Oranges\",\r\n                \"supplementaryQuantity\": 1000,\r\n                \"permitReferences\": [],\r\n                \"goodsStatusCode\": null,\r\n                \"countryOriginCode\": \"AD\",\r\n                \"regionOriginCode\": \"GU\",\r\n                \"declaredValue\": 1100503.884045,\r\n                \"dutyAssessmentValue\": 1100503.884045,\r\n                \"freightCharge\": 0,\r\n                \"insuranceCharge\": 0,\r\n                \"tariffPreferenceClaimedCode\": null,\r\n                \"govtProcedureClaimedCode\": null,\r\n                \"containerReferences\": [\r\n                    \"MSCU2092276\"\r\n                ],\r\n                \"numberPackages\": 10000,\r\n                \"grossWeight\": 1000,\r\n                \"netWeight\": 1000,\r\n                \"vehicles\": [],\r\n                \"containers\": [\r\n                    {\r\n                        \"seals\": \"4000001, 4000002, 4000003, 4000004\",\r\n                        \"containerType\": \"20R0\",\r\n                        \"containerNumber\": \"MSCU2092276\"\r\n                    }\r\n                ],\r\n                \"manufacture\": \"Godi Cheese With Vegetable Oil\",\r\n                \"shippingMark\": \"Oranges contained in two container\",\r\n                \"modelVehicles\": [],\r\n                \"insuranceLocal\": 0,\r\n                \"packageOfVolM3\": 1,\r\n                \"deductionsLocal\": 0,\r\n                \"extFreightLocal\": 0,\r\n                \"insuranceFxRate\": \"\",\r\n                \"otherCostsLocal\": 0,\r\n                \"valuationMethod\": \"1\",\r\n                \"deductedQuantity\": null,\r\n                \"deductionsFxRate\": 0,\r\n                \"descriptionGoods\": \"- Other\",\r\n                \"extFreightFxRate\": \"\",\r\n                \"insuranceForeign\": null,\r\n                \"lineCurrencyCode\": \"USD\",\r\n                \"lineExchangeRate\": 73.36692560300276,\r\n                \"netWeightUOMCode\": \"05\",\r\n                \"otherCostsFxRate\": 0,\r\n                \"deductionsForeign\": 0,\r\n                \"extFreightForeign\": null,\r\n                \"otherCostsForeign\": 0,\r\n                \"grossWeightUOMCode\": \"05\",\r\n                \"governmentProcedure\": \"4000\",\r\n                \"linePackageTypeCode\": \"4A\",\r\n                \"statisticalQuantity\": 1100503.884045,\r\n                \"statisticalUnitCode\": \"KGM\",\r\n                \"valuationMethodCode\": \"1\",\r\n                \"supplierRelationCode\": \"135\",\r\n                \"valueForeignCurrency\": \"15000\",\r\n                \"insuranceCurrencyCode\": null,\r\n                \"deductionsCurrencyCode\": 0,\r\n                \"extFreightCurrencyCode\": null,\r\n                \"otherCostsCurrencyCode\": 0,\r\n                \"associatedGovtProcedure\": true,\r\n                \"valuationAdjustmentRate\": 1,\r\n                \"valuationAdjustmentValue\": 0,\r\n                \"valuationAdjustmentTypeCode\": null\r\n            },\r\n            {\r\n                \"commodityClassification\": \"06049000\",\r\n                \"commercialGoodsDesc\": \"Oranges\",\r\n                \"supplementaryQuantity\": 1000,\r\n                \"permitReferences\": [],\r\n                \"goodsStatusCode\": null,\r\n                \"countryOriginCode\": \"AD\",\r\n                \"regionOriginCode\": \"GU\",\r\n                \"declaredValue\": 1100503.884045,\r\n                \"dutyAssessmentValue\": 1100503.884045,\r\n                \"freightCharge\": 0,\r\n                \"insuranceCharge\": 0,\r\n                \"tariffPreferenceClaimedCode\": null,\r\n                \"govtProcedureClaimedCode\": null,\r\n                \"containerReferences\": [\r\n                    \"MSCU2092276\"\r\n                ],\r\n                \"numberPackages\": 10000,\r\n                \"grossWeight\": 1000,\r\n                \"netWeight\": 1000,\r\n                \"vehicles\": [],\r\n                \"containers\": [\r\n                    {\r\n                        \"seals\": \"4000001, 4000002, 4000003, 4000004\",\r\n                        \"containerType\": \"20R0\",\r\n                        \"containerNumber\": \"MSCU2092276\"\r\n                    }\r\n                ],\r\n                \"manufacture\": \"Godi Cheese With Vegetable Oil\",\r\n                \"shippingMark\": \"Oranges contained in two container\",\r\n                \"modelVehicles\": [],\r\n                \"insuranceLocal\": 0,\r\n                \"packageOfVolM3\": 1,\r\n                \"deductionsLocal\": 0,\r\n                \"extFreightLocal\": 0,\r\n                \"insuranceFxRate\": \"\",\r\n                \"otherCostsLocal\": 0,\r\n                \"valuationMethod\": \"1\",\r\n                \"deductedQuantity\": null,\r\n                \"deductionsFxRate\": 0,\r\n                \"descriptionGoods\": \"- Other\",\r\n                \"extFreightFxRate\": \"\",\r\n                \"insuranceForeign\": null,\r\n                \"lineCurrencyCode\": \"USD\",\r\n                \"lineExchangeRate\": 73.36692560300276,\r\n                \"netWeightUOMCode\": \"05\",\r\n                \"otherCostsFxRate\": 0,\r\n                \"deductionsForeign\": 0,\r\n                \"extFreightForeign\": null,\r\n                \"otherCostsForeign\": 0,\r\n                \"grossWeightUOMCode\": \"05\",\r\n                \"governmentProcedure\": \"4000\",\r\n                \"linePackageTypeCode\": \"4A\",\r\n                \"statisticalQuantity\": 1100503.884045,\r\n                \"statisticalUnitCode\": \"KGM\",\r\n                \"valuationMethodCode\": \"1\",\r\n                \"supplierRelationCode\": \"135\",\r\n                \"valueForeignCurrency\": \"15000\",\r\n                \"insuranceCurrencyCode\": null,\r\n                \"deductionsCurrencyCode\": 0,\r\n                \"extFreightCurrencyCode\": null,\r\n                \"otherCostsCurrencyCode\": 0,\r\n                \"associatedGovtProcedure\": true,\r\n                \"valuationAdjustmentRate\": 1,\r\n                \"valuationAdjustmentValue\": 0,\r\n                \"valuationAdjustmentTypeCode\": null\r\n            },\r\n            {\r\n                \"commodityClassification\": \"06049000\",\r\n                \"commercialGoodsDesc\": \"Oranges\",\r\n                \"supplementaryQuantity\": 1000,\r\n                \"permitReferences\": [],\r\n                \"goodsStatusCode\": null,\r\n                \"countryOriginCode\": \"AD\",\r\n                \"regionOriginCode\": \"GU\",\r\n                \"declaredValue\": 1100503.884045,\r\n                \"dutyAssessmentValue\": 1100503.884045,\r\n                \"freightCharge\": 0,\r\n                \"insuranceCharge\": 0,\r\n                \"tariffPreferenceClaimedCode\": null,\r\n                \"govtProcedureClaimedCode\": null,\r\n                \"containerReferences\": [\r\n                    \"MSCU2092276\"\r\n                ],\r\n                \"numberPackages\": 10000,\r\n                \"grossWeight\": 1000,\r\n                \"netWeight\": 1000,\r\n                \"vehicles\": [],\r\n                \"containers\": [\r\n                    {\r\n                        \"seals\": \"4000001, 4000002, 4000003, 4000004\",\r\n                        \"containerType\": \"20R0\",\r\n                        \"containerNumber\": \"MSCU2092276\"\r\n                    }\r\n                ],\r\n                \"manufacture\": \"Godi Cheese With Vegetable Oil\",\r\n                \"shippingMark\": \"Oranges contained in two container\",\r\n                \"modelVehicles\": [],\r\n                \"insuranceLocal\": 0,\r\n                \"packageOfVolM3\": 1,\r\n                \"deductionsLocal\": 0,\r\n                \"extFreightLocal\": 0,\r\n                \"insuranceFxRate\": \"\",\r\n                \"otherCostsLocal\": 0,\r\n                \"valuationMethod\": \"1\",\r\n                \"deductedQuantity\": null,\r\n                \"deductionsFxRate\": 0,\r\n                \"descriptionGoods\": \"- Other\",\r\n                \"extFreightFxRate\": \"\",\r\n                \"insuranceForeign\": null,\r\n                \"lineCurrencyCode\": \"USD\",\r\n                \"lineExchangeRate\": 73.36692560300276,\r\n                \"netWeightUOMCode\": \"05\",\r\n                \"otherCostsFxRate\": 0,\r\n                \"deductionsForeign\": 0,\r\n                \"extFreightForeign\": null,\r\n                \"otherCostsForeign\": 0,\r\n                \"grossWeightUOMCode\": \"05\",\r\n                \"governmentProcedure\": \"4000\",\r\n                \"linePackageTypeCode\": \"4A\",\r\n                \"statisticalQuantity\": 1100503.884045,\r\n                \"statisticalUnitCode\": \"KGM\",\r\n                \"valuationMethodCode\": \"1\",\r\n                \"supplierRelationCode\": \"135\",\r\n                \"valueForeignCurrency\": \"15000\",\r\n                \"insuranceCurrencyCode\": null,\r\n                \"deductionsCurrencyCode\": 0,\r\n                \"extFreightCurrencyCode\": null,\r\n                \"otherCostsCurrencyCode\": 0,\r\n                \"associatedGovtProcedure\": true,\r\n                \"valuationAdjustmentRate\": 1,\r\n                \"valuationAdjustmentValue\": 0,\r\n                \"valuationAdjustmentTypeCode\": null\r\n            },\r\n             {\r\n            \r\n                \"commodityClassification\": \"06049000\",\r\n                \"commercialGoodsDesc\": \"Oranges\",\r\n                \"supplementaryQuantity\": 1000,\r\n                \"permitReferences\": [],\r\n                \"goodsStatusCode\": null,\r\n                \"countryOriginCode\": \"AD\",\r\n                \"regionOriginCode\": \"GU\",\r\n                \"declaredValue\": 1100503.884045,\r\n                \"dutyAssessmentValue\": 1100503.884045,\r\n                \"freightCharge\": 0,\r\n                \"insuranceCharge\": 0,\r\n                \"tariffPreferenceClaimedCode\": null,\r\n                \"govtProcedureClaimedCode\": null,\r\n                \"containerReferences\": [\r\n                    \"MSCU2092276\"\r\n                ],\r\n                \"numberPackages\": 10000,\r\n                \"grossWeight\": 1000,\r\n                \"netWeight\": 1000,\r\n                \"vehicles\": [],\r\n                \"containers\": [\r\n                    {\r\n                        \"seals\": \"4000001, 4000002, 4000003, 4000004\",\r\n                        \"containerType\": \"20R0\",\r\n                        \"containerNumber\": \"MSCU2092276\"\r\n                    }\r\n                ],\r\n                \"manufacture\": \"Godi Cheese With Vegetable Oil\",\r\n                \"shippingMark\": \"Oranges contained in two container\",\r\n                \"modelVehicles\": [],\r\n                \"insuranceLocal\": 0,\r\n                \"packageOfVolM3\": 1,\r\n                \"deductionsLocal\": 0,\r\n                \"extFreightLocal\": 0,\r\n                \"insuranceFxRate\": \"\",\r\n                \"otherCostsLocal\": 0,\r\n                \"valuationMethod\": \"1\",\r\n                \"deductedQuantity\": null,\r\n                \"deductionsFxRate\": 0,\r\n                \"descriptionGoods\": \"- Other\",\r\n                \"extFreightFxRate\": \"\",\r\n                \"insuranceForeign\": null,\r\n                \"lineCurrencyCode\": \"USD\",\r\n                \"lineExchangeRate\": 73.36692560300276,\r\n                \"netWeightUOMCode\": \"05\",\r\n                \"otherCostsFxRate\": 0,\r\n                \"deductionsForeign\": 0,\r\n                \"extFreightForeign\": null,\r\n                \"otherCostsForeign\": 0,\r\n                \"grossWeightUOMCode\": \"05\",\r\n                \"governmentProcedure\": \"4000\",\r\n                \"linePackageTypeCode\": \"4A\",\r\n                \"statisticalQuantity\": 1100503.884045,\r\n                \"statisticalUnitCode\": \"KGM\",\r\n                \"valuationMethodCode\": \"1\",\r\n                \"supplierRelationCode\": \"135\",\r\n                \"valueForeignCurrency\": \"15000\",\r\n                \"insuranceCurrencyCode\": null,\r\n                \"deductionsCurrencyCode\": 0,\r\n                \"extFreightCurrencyCode\": null,\r\n                \"otherCostsCurrencyCode\": 0,\r\n                \"associatedGovtProcedure\": true,\r\n                \"valuationAdjustmentRate\": 1,\r\n                \"valuationAdjustmentValue\": 0,\r\n                \"valuationAdjustmentTypeCode\": null\r\n            },\r\n             {\r\n                \"commodityClassification\": \"06049000\",\r\n                \"commercialGoodsDesc\": \"Oranges\",\r\n                \"supplementaryQuantity\": 1000,\r\n                \"permitReferences\": [],\r\n                \"goodsStatusCode\": null,\r\n                \"countryOriginCode\": \"AD\",\r\n                \"regionOriginCode\": \"GU\",\r\n                \"declaredValue\": 1100503.884045,\r\n                \"dutyAssessmentValue\": 1100503.884045,\r\n                \"freightCharge\": 0,\r\n                \"insuranceCharge\": 0,\r\n                \"tariffPreferenceClaimedCode\": null,\r\n                \"govtProcedureClaimedCode\": null,\r\n                \"containerReferences\": [\r\n                    \"MSCU2092276\"\r\n                ],\r\n                \"numberPackages\": 10000,\r\n                \"grossWeight\": 1000,\r\n                \"netWeight\": 1000,\r\n                \"vehicles\": [],\r\n                \"containers\": [\r\n                    {\r\n                        \"seals\": \"4000001, 4000002, 4000003, 4000004\",\r\n                        \"containerType\": \"20R0\",\r\n                        \"containerNumber\": \"MSCU2092276\"\r\n                    }\r\n                ],\r\n                \"manufacture\": \"Godi Cheese With Vegetable Oil\",\r\n                \"shippingMark\": \"Oranges contained in two container\",\r\n                \"modelVehicles\": [],\r\n                \"insuranceLocal\": 0,\r\n                \"packageOfVolM3\": 1,\r\n                \"deductionsLocal\": 0,\r\n                \"extFreightLocal\": 0,\r\n                \"insuranceFxRate\": \"\",\r\n                \"otherCostsLocal\": 0,\r\n                \"valuationMethod\": \"1\",\r\n                \"deductedQuantity\": null,\r\n                \"deductionsFxRate\": 0,\r\n                \"descriptionGoods\": \"- Other\",\r\n                \"extFreightFxRate\": \"\",\r\n                \"insuranceForeign\": null,\r\n                \"lineCurrencyCode\": \"USD\",\r\n                \"lineExchangeRate\": 73.36692560300276,\r\n                \"netWeightUOMCode\": \"05\",\r\n                \"otherCostsFxRate\": 0,\r\n                \"deductionsForeign\": 0,\r\n                \"extFreightForeign\": null,\r\n                \"otherCostsForeign\": 0,\r\n                \"grossWeightUOMCode\": \"05\",\r\n                \"governmentProcedure\": \"4000\",\r\n                \"linePackageTypeCode\": \"4A\",\r\n                \"statisticalQuantity\": 1100503.884045,\r\n                \"statisticalUnitCode\": \"KGM\",\r\n                \"valuationMethodCode\": \"1\",\r\n                \"supplierRelationCode\": \"135\",\r\n                \"valueForeignCurrency\": \"15000\",\r\n                \"insuranceCurrencyCode\": null,\r\n                \"deductionsCurrencyCode\": 0,\r\n                \"extFreightCurrencyCode\": null,\r\n                \"otherCostsCurrencyCode\": 0,\r\n                \"associatedGovtProcedure\": true,\r\n                \"valuationAdjustmentRate\": 1,\r\n                \"valuationAdjustmentValue\": 0,\r\n                \"valuationAdjustmentTypeCode\": null\r\n            },\r\n             {\r\n\r\n                \"commodityClassification\": \"06049000\",\r\n                \"commercialGoodsDesc\": \"Oranges\",\r\n                \"supplementaryQuantity\": 1000,\r\n                \"permitReferences\": [],\r\n                \"goodsStatusCode\": null,\r\n                \"countryOriginCode\": \"AD\",\r\n                \"regionOriginCode\": \"GU\",\r\n                \"declaredValue\": 1100503.884045,\r\n                \"dutyAssessmentValue\": 1100503.884045,\r\n                \"freightCharge\": 0,\r\n                \"insuranceCharge\": 0,\r\n                \"tariffPreferenceClaimedCode\": null,\r\n                \"govtProcedureClaimedCode\": null,\r\n                \"containerReferences\": [\r\n                    \"MSCU2092276\"\r\n                ],\r\n                \"numberPackages\": 10000,\r\n                \"grossWeight\": 1000,\r\n                \"netWeight\": 1000,\r\n                \"vehicles\": [],\r\n                \"containers\": [\r\n                    {\r\n                        \"seals\": \"4000001, 4000002, 4000003, 4000004\",\r\n                        \"containerType\": \"20R0\",\r\n                        \"containerNumber\": \"MSCU2092276\"\r\n                    }\r\n                ],\r\n                \"manufacture\": \"Godi Cheese With Vegetable Oil\",\r\n                \"shippingMark\": \"Oranges contained in two container\",\r\n                \"modelVehicles\": [],\r\n                \"insuranceLocal\": 0,\r\n                \"packageOfVolM3\": 1,\r\n                \"deductionsLocal\": 0,\r\n                \"extFreightLocal\": 0,\r\n                \"insuranceFxRate\": \"\",\r\n                \"otherCostsLocal\": 0,\r\n                \"valuationMethod\": \"1\",\r\n                \"deductedQuantity\": null,\r\n                \"deductionsFxRate\": 0,\r\n                \"descriptionGoods\": \"- Other\",\r\n                \"extFreightFxRate\": \"\",\r\n                \"insuranceForeign\": null,\r\n                \"lineCurrencyCode\": \"USD\",\r\n                \"lineExchangeRate\": 73.36692560300276,\r\n                \"netWeightUOMCode\": \"05\",\r\n                \"otherCostsFxRate\": 0,\r\n                \"deductionsForeign\": 0,\r\n                \"extFreightForeign\": null,\r\n                \"otherCostsForeign\": 0,\r\n                \"grossWeightUOMCode\": \"05\",\r\n                \"governmentProcedure\": \"4000\",\r\n                \"linePackageTypeCode\": \"4A\",\r\n                \"statisticalQuantity\": 1100503.884045,\r\n                \"statisticalUnitCode\": \"KGM\",\r\n                \"valuationMethodCode\": \"1\",\r\n                \"supplierRelationCode\": \"135\",\r\n                \"valueForeignCurrency\": \"15000\",\r\n                \"insuranceCurrencyCode\": null,\r\n                \"deductionsCurrencyCode\": 0,\r\n                \"extFreightCurrencyCode\": null,\r\n                \"otherCostsCurrencyCode\": 0,\r\n                \"associatedGovtProcedure\": true,\r\n                \"valuationAdjustmentRate\": 1,\r\n                \"valuationAdjustmentValue\": 0,\r\n                \"valuationAdjustmentTypeCode\": null\r\n            },\r\n             {\r\n\r\n                \"commodityClassification\": \"06049000\",\r\n                \"commercialGoodsDesc\": \"Oranges\",\r\n                \"supplementaryQuantity\": 1000,\r\n                \"permitReferences\": [],\r\n                \"goodsStatusCode\": null,\r\n                \"countryOriginCode\": \"AD\",\r\n                \"regionOriginCode\": \"GU\",\r\n                \"declaredValue\": 1100503.884045,\r\n                \"dutyAssessmentValue\": 1100503.884045,\r\n                \"freightCharge\": 0,\r\n                \"insuranceCharge\": 0,\r\n                \"tariffPreferenceClaimedCode\": null,\r\n                \"govtProcedureClaimedCode\": null,\r\n                \"containerReferences\": [\r\n                    \"MSCU2092276\"\r\n                ],\r\n                \"numberPackages\": 10000,\r\n                \"grossWeight\": 1000,\r\n                \"netWeight\": 1000,\r\n                \"vehicles\": [],\r\n                \"containers\": [\r\n                    {\r\n                        \"seals\": \"4000001, 4000002, 4000003, 4000004\",\r\n                        \"containerType\": \"20R0\",\r\n                        \"containerNumber\": \"MSCU2092276\"\r\n                    }\r\n                ],\r\n                \"manufacture\": \"Godi Cheese With Vegetable Oil\",\r\n                \"shippingMark\": \"Oranges contained in two container\",\r\n                \"modelVehicles\": [],\r\n                \"insuranceLocal\": 0,\r\n                \"packageOfVolM3\": 1,\r\n                \"deductionsLocal\": 0,\r\n                \"extFreightLocal\": 0,\r\n                \"insuranceFxRate\": \"\",\r\n                \"otherCostsLocal\": 0,\r\n                \"valuationMethod\": \"1\",\r\n                \"deductedQuantity\": null,\r\n                \"deductionsFxRate\": 0,\r\n                \"descriptionGoods\": \"- Other\",\r\n                \"extFreightFxRate\": \"\",\r\n                \"insuranceForeign\": null,\r\n                \"lineCurrencyCode\": \"USD\",\r\n                \"lineExchangeRate\": 73.36692560300276,\r\n                \"netWeightUOMCode\": \"05\",\r\n                \"otherCostsFxRate\": 0,\r\n                \"deductionsForeign\": 0,\r\n                \"extFreightForeign\": null,\r\n                \"otherCostsForeign\": 0,\r\n                \"grossWeightUOMCode\": \"05\",\r\n                \"governmentProcedure\": \"4000\",\r\n                \"linePackageTypeCode\": \"4A\",\r\n                \"statisticalQuantity\": 1100503.884045,\r\n                \"statisticalUnitCode\": \"KGM\",\r\n                \"valuationMethodCode\": \"1\",\r\n                \"supplierRelationCode\": \"135\",\r\n                \"valueForeignCurrency\": \"15000\",\r\n                \"insuranceCurrencyCode\": null,\r\n                \"deductionsCurrencyCode\": 0,\r\n                \"extFreightCurrencyCode\": null,\r\n                \"otherCostsCurrencyCode\": 0,\r\n                \"associatedGovtProcedure\": true,\r\n                \"valuationAdjustmentRate\": 1,\r\n                \"valuationAdjustmentValue\": 0,\r\n                \"valuationAdjustmentTypeCode\": null\r\n            },\r\n             {\r\n                \"commodityClassification\": \"06049000\",\r\n                \"commercialGoodsDesc\": \"Oranges\",\r\n                \"supplementaryQuantity\": 1000,\r\n                \"permitReferences\": [],\r\n                \"goodsStatusCode\": null,\r\n                \"countryOriginCode\": \"AD\",\r\n                \"regionOriginCode\": \"GU\",\r\n                \"declaredValue\": 1100503.884045,\r\n                \"dutyAssessmentValue\": 1100503.884045,\r\n                \"freightCharge\": 0,\r\n                \"insuranceCharge\": 0,\r\n                \"tariffPreferenceClaimedCode\": null,\r\n                \"govtProcedureClaimedCode\": null,\r\n                \"containerReferences\": [\r\n                    \"MSCU2092276\"\r\n                ],\r\n                \"numberPackages\": 10000,\r\n                \"grossWeight\": 1000,\r\n                \"netWeight\": 1000,\r\n                \"vehicles\": [],\r\n                \"containers\": [\r\n                    {\r\n                        \"seals\": \"4000001, 4000002, 4000003, 4000004\",\r\n                        \"containerType\": \"20R0\",\r\n                        \"containerNumber\": \"MSCU2092276\"\r\n                    }\r\n                ],\r\n                \"manufacture\": \"Godi Cheese With Vegetable Oil\",\r\n                \"shippingMark\": \"Oranges contained in two container\",\r\n                \"modelVehicles\": [],\r\n                \"insuranceLocal\": 0,\r\n                \"packageOfVolM3\": 1,\r\n                \"deductionsLocal\": 0,\r\n                \"extFreightLocal\": 0,\r\n                \"insuranceFxRate\": \"\",\r\n                \"otherCostsLocal\": 0,\r\n                \"valuationMethod\": \"1\",\r\n                \"deductedQuantity\": null,\r\n                \"deductionsFxRate\": 0,\r\n                \"descriptionGoods\": \"- Other\",\r\n                \"extFreightFxRate\": \"\",\r\n                \"insuranceForeign\": null,\r\n                \"lineCurrencyCode\": \"USD\",\r\n                \"lineExchangeRate\": 73.36692560300276,\r\n                \"netWeightUOMCode\": \"05\",\r\n                \"otherCostsFxRate\": 0,\r\n                \"deductionsForeign\": 0,\r\n                \"extFreightForeign\": null,\r\n                \"otherCostsForeign\": 0,\r\n                \"grossWeightUOMCode\": \"05\",\r\n                \"governmentProcedure\": \"4000\",\r\n                \"linePackageTypeCode\": \"4A\",\r\n                \"statisticalQuantity\": 1100503.884045,\r\n                \"statisticalUnitCode\": \"KGM\",\r\n                \"valuationMethodCode\": \"1\",\r\n                \"supplierRelationCode\": \"135\",\r\n                \"valueForeignCurrency\": \"15000\",\r\n                \"insuranceCurrencyCode\": null,\r\n                \"deductionsCurrencyCode\": 0,\r\n                \"extFreightCurrencyCode\": null,\r\n                \"otherCostsCurrencyCode\": 0,\r\n                \"associatedGovtProcedure\": true,\r\n                \"valuationAdjustmentRate\": 1,\r\n                \"valuationAdjustmentValue\": 0,\r\n                \"valuationAdjustmentTypeCode\": null\r\n            },\r\n             {\r\n                \"commodityClassification\": \"06049000\",\r\n                \"commercialGoodsDesc\": \"Oranges\",\r\n                \"supplementaryQuantity\": 1000,\r\n                \"permitReferences\": [],\r\n                \"goodsStatusCode\": null,\r\n                \"countryOriginCode\": \"AD\",\r\n                \"regionOriginCode\": \"GU\",\r\n                \"declaredValue\": 1100503.884045,\r\n                \"dutyAssessmentValue\": 1100503.884045,\r\n                \"freightCharge\": 0,\r\n                \"insuranceCharge\": 0,\r\n                \"tariffPreferenceClaimedCode\": null,\r\n                \"govtProcedureClaimedCode\": null,\r\n                \"containerReferences\": [\r\n                    \"MSCU2092276\"\r\n                ],\r\n                \"numberPackages\": 10000,\r\n                \"grossWeight\": 1000,\r\n                \"netWeight\": 1000,\r\n                \"vehicles\": [],\r\n                \"containers\": [\r\n                    {\r\n                        \"seals\": \"4000001, 4000002, 4000003, 4000004\",\r\n                        \"containerType\": \"20R0\",\r\n                        \"containerNumber\": \"MSCU2092276\"\r\n                    }\r\n                ],\r\n                \"manufacture\": \"Godi Cheese With Vegetable Oil\",\r\n                \"shippingMark\": \"Oranges contained in two container\",\r\n                \"modelVehicles\": [],\r\n                \"insuranceLocal\": 0,\r\n                \"packageOfVolM3\": 1,\r\n                \"deductionsLocal\": 0,\r\n                \"extFreightLocal\": 0,\r\n                \"insuranceFxRate\": \"\",\r\n                \"otherCostsLocal\": 0,\r\n                \"valuationMethod\": \"1\",\r\n                \"deductedQuantity\": null,\r\n                \"deductionsFxRate\": 0,\r\n                \"descriptionGoods\": \"- Other\",\r\n                \"extFreightFxRate\": \"\",\r\n                \"insuranceForeign\": null,\r\n                \"lineCurrencyCode\": \"USD\",\r\n                \"lineExchangeRate\": 73.36692560300276,\r\n                \"netWeightUOMCode\": \"05\",\r\n                \"otherCostsFxRate\": 0,\r\n                \"deductionsForeign\": 0,\r\n                \"extFreightForeign\": null,\r\n                \"otherCostsForeign\": 0,\r\n                \"grossWeightUOMCode\": \"05\",\r\n                \"governmentProcedure\": \"4000\",\r\n                \"linePackageTypeCode\": \"4A\",\r\n                \"statisticalQuantity\": 1100503.884045,\r\n                \"statisticalUnitCode\": \"KGM\",\r\n                \"valuationMethodCode\": \"1\",\r\n                \"supplierRelationCode\": \"135\",\r\n                \"valueForeignCurrency\": \"15000\",\r\n                \"insuranceCurrencyCode\": null,\r\n                \"deductionsCurrencyCode\": 0,\r\n                \"extFreightCurrencyCode\": null,\r\n                \"otherCostsCurrencyCode\": 0,\r\n                \"associatedGovtProcedure\": true,\r\n                \"valuationAdjustmentRate\": 1,\r\n                \"valuationAdjustmentValue\": 0,\r\n                \"valuationAdjustmentTypeCode\": null\r\n            },\r\n             {\r\n                \"commodityClassification\": \"06049000\",\r\n                \"commercialGoodsDesc\": \"Oranges\",\r\n                \"supplementaryQuantity\": 1000,\r\n                \"permitReferences\": [],\r\n                \"goodsStatusCode\": null,\r\n                \"countryOriginCode\": \"AD\",\r\n                \"regionOriginCode\": \"GU\",\r\n                \"declaredValue\": 1100503.884045,\r\n                \"dutyAssessmentValue\": 1100503.884045,\r\n                \"freightCharge\": 0,\r\n                \"insuranceCharge\": 0,\r\n                \"tariffPreferenceClaimedCode\": null,\r\n                \"govtProcedureClaimedCode\": null,\r\n                \"containerReferences\": [\r\n                    \"MSCU2092276\"\r\n                ],\r\n                \"numberPackages\": 10000,\r\n                \"grossWeight\": 1000,\r\n                \"netWeight\": 1000,\r\n                \"vehicles\": [],\r\n                \"containers\": [\r\n                    {\r\n                        \"seals\": \"4000001, 4000002, 4000003, 4000004\",\r\n                        \"containerType\": \"20R0\",\r\n                        \"containerNumber\": \"MSCU2092276\"\r\n                    }\r\n                ],\r\n                \"manufacture\": \"Godi Cheese With Vegetable Oil\",\r\n                \"shippingMark\": \"Oranges contained in two container\",\r\n                \"modelVehicles\": [],\r\n                \"insuranceLocal\": 0,\r\n                \"packageOfVolM3\": 1,\r\n                \"deductionsLocal\": 0,\r\n                \"extFreightLocal\": 0,\r\n                \"insuranceFxRate\": \"\",\r\n                \"otherCostsLocal\": 0,\r\n                \"valuationMethod\": \"1\",\r\n                \"deductedQuantity\": null,\r\n                \"deductionsFxRate\": 0,\r\n                \"descriptionGoods\": \"- Other\",\r\n                \"extFreightFxRate\": \"\",\r\n                \"insuranceForeign\": null,\r\n                \"lineCurrencyCode\": \"USD\",\r\n                \"lineExchangeRate\": 73.36692560300276,\r\n                \"netWeightUOMCode\": \"05\",\r\n                \"otherCostsFxRate\": 0,\r\n                \"deductionsForeign\": 0,\r\n                \"extFreightForeign\": null,\r\n                \"otherCostsForeign\": 0,\r\n                \"grossWeightUOMCode\": \"05\",\r\n                \"governmentProcedure\": \"4000\",\r\n                \"linePackageTypeCode\": \"4A\",\r\n                \"statisticalQuantity\": 1100503.884045,\r\n                \"statisticalUnitCode\": \"KGM\",\r\n                \"valuationMethodCode\": \"1\",\r\n                \"supplierRelationCode\": \"135\",\r\n                \"valueForeignCurrency\": \"15000\",\r\n                \"insuranceCurrencyCode\": null,\r\n                \"deductionsCurrencyCode\": 0,\r\n                \"extFreightCurrencyCode\": null,\r\n                \"otherCostsCurrencyCode\": 0,\r\n                \"associatedGovtProcedure\": true,\r\n                \"valuationAdjustmentRate\": 1,\r\n                \"valuationAdjustmentValue\": 0,\r\n                \"valuationAdjustmentTypeCode\": null\r\n            },\r\n             {\r\n                \"commodityClassification\": \"06049000\",\r\n                \"commercialGoodsDesc\": \"Oranges\",\r\n                \"supplementaryQuantity\": 1000,\r\n                \"permitReferences\": [],\r\n                \"goodsStatusCode\": null,\r\n                \"countryOriginCode\": \"AD\",\r\n                \"regionOriginCode\": \"GU\",\r\n                \"declaredValue\": 1100503.884045,\r\n                \"dutyAssessmentValue\": 1100503.884045,\r\n                \"freightCharge\": 0,\r\n                \"insuranceCharge\": 0,\r\n                \"tariffPreferenceClaimedCode\": null,\r\n                \"govtProcedureClaimedCode\": null,\r\n                \"containerReferences\": [\r\n                    \"MSCU2092276\"\r\n                ],\r\n                \"numberPackages\": 10000,\r\n                \"grossWeight\": 1000,\r\n                \"netWeight\": 1000,\r\n                \"vehicles\": [],\r\n                \"containers\": [\r\n                    {\r\n                        \"seals\": \"4000001, 4000002, 4000003, 4000004\",\r\n                        \"containerType\": \"20R0\",\r\n                        \"containerNumber\": \"MSCU2092276\"\r\n                    }\r\n                ],\r\n                \"manufacture\": \"Godi Cheese With Vegetable Oil\",\r\n                \"shippingMark\": \"Oranges contained in two container\",\r\n                \"modelVehicles\": [],\r\n                \"insuranceLocal\": 0,\r\n                \"packageOfVolM3\": 1,\r\n                \"deductionsLocal\": 0,\r\n                \"extFreightLocal\": 0,\r\n                \"insuranceFxRate\": \"\",\r\n                \"otherCostsLocal\": 0,\r\n                \"valuationMethod\": \"1\",\r\n                \"deductedQuantity\": null,\r\n                \"deductionsFxRate\": 0,\r\n                \"descriptionGoods\": \"- Other\",\r\n                \"extFreightFxRate\": \"\",\r\n                \"insuranceForeign\": null,\r\n                \"lineCurrencyCode\": \"USD\",\r\n                \"lineExchangeRate\": 73.36692560300276,\r\n                \"netWeightUOMCode\": \"05\",\r\n                \"otherCostsFxRate\": 0,\r\n                \"deductionsForeign\": 0,\r\n                \"extFreightForeign\": null,\r\n                \"otherCostsForeign\": 0,\r\n                \"grossWeightUOMCode\": \"05\",\r\n                \"governmentProcedure\": \"4000\",\r\n                \"linePackageTypeCode\": \"4A\",\r\n                \"statisticalQuantity\": 1100503.884045,\r\n                \"statisticalUnitCode\": \"KGM\",\r\n                \"valuationMethodCode\": \"1\",\r\n                \"supplierRelationCode\": \"135\",\r\n                \"valueForeignCurrency\": \"15000\",\r\n                \"insuranceCurrencyCode\": null,\r\n                \"deductionsCurrencyCode\": 0,\r\n                \"extFreightCurrencyCode\": null,\r\n                \"otherCostsCurrencyCode\": 0,\r\n                \"associatedGovtProcedure\": true,\r\n                \"valuationAdjustmentRate\": 1,\r\n                \"valuationAdjustmentValue\": 0,\r\n                \"valuationAdjustmentTypeCode\": null\r\n            }\r\n            \r\n        ],\r\n        \"containers\": [\r\n            {\r\n                \"seals\": \"4000001, 4000002, 4000003, 4000004\",\r\n                \"containerType\": \"20R0\",\r\n                \"containerNumber\": \"MSCU2092276\"\r\n            },\r\n            {\r\n                \"seals\": \"5000001, 5000002, 5000003, 5000004\",\r\n                \"containerType\": \"20R0\",\r\n                \"containerNumber\": \"IPXU2148384\"\r\n            }\r\n        ],\r\n        \"attachments\": [],\r\n        \"totalNetWeight\": 15000,\r\n        \"totalVehicles\": 0,\r\n        \"totalContainers\": 2,\r\n        \"facilities\": [],\r\n        \"securityDetails\": null,\r\n        \"selfDeclared\": true,\r\n        \"agentId\": \"7d4e0dcb-0e3e-4fbb-87fb-acb555ae4edd\",\r\n        \"agentBlacklistedLatest\": false,\r\n        \"reasons\": [],\r\n        \"rejectReasons\": null,\r\n        \"cancelReasons\": null,\r\n        \"inquiries\": null,\r\n        \"errorReason\": null,\r\n        \"agent\": \"90184561\",\r\n        \"trader\": \"90184561\",\r\n        \"parties\": [\r\n            {\r\n                \"name\": \"Godi Cheese With Vegetable Oil\",\r\n                \"type\": \"NOTIFY_PARTIES\",\r\n                \"address\": \"1001 Industry Rd, Suite AKenner, LA 70062\",\r\n                \"communication\": \"TE\",\r\n                \"communicationReference\": \"973172696\"\r\n            }\r\n        ],\r\n        \"remarks\": null,\r\n        \"version\": 0,\r\n        \"packages\": [\r\n            {\r\n                \"total\": 1000,\r\n                \"packageType\": \"1A\"\r\n            }\r\n        ],\r\n        \"traderId\": \"7d4e0dcb-0e3e-4fbb-87fb-acb555ae4edd\",\r\n        \"consignor\": \"3658714209\",\r\n        \"check10000\": null,\r\n        \"totalLines\": 15,\r\n        \"arrivalDate\": \"2022-08-13T00:00:00.000Z\",\r\n        \"carrierCode\": null,\r\n        \"incotermCode\": \"CFR\",\r\n        \"totalFreight\": 0,\r\n        \"consignorName\": \"ABB\",\r\n        \"totalPackages\": 150000,\r\n        \"898OptionalFee\": false,\r\n        \"totalInsurance\": 0,\r\n        \"ecvrOptionalFee\": false,\r\n        \"invoiceDocument\": [],\r\n        \"officeEntryCode\": \"SAJED\",\r\n        \"tetsOptionalFee\": false,\r\n        \"traderReference\": \"Direct Import\",\r\n        \"consignorAddress\": \"AAB\",\r\n        \"consignorCountry\": \"OM\",\r\n        \"hlevyOptionalFee\": false,\r\n        \"loadingPlaceCode\": \"GHABK\",\r\n        \"officeExportCode\": \"SAJED\",\r\n        \"risklabReference\": \"94e856e8-ac35-4131-a408-316fb8921e00\",\r\n        \"securityTypeCode\": null,\r\n        \"totalGrossWeight\": 15000,\r\n        \"typeMeansTavCode\": \"1\",\r\n        \"countryExportCode\": \"IN\",\r\n        \"goodsLocationCode\": \"889911CCA\",\r\n        \"htt001OptionalFee\": false,\r\n        \"incotermPlaceCode\": \"INSTV\",\r\n        \"incotermPlaceName\": \"Surat\",\r\n        \"additionalDocument\": [],\r\n        \"chidoanOptionalFee\": false,\r\n        \"placeDischargeCode\": \"INSTV\",\r\n        \"totalInvoiceAmount\": 225000,\r\n        \"nationalMeansTavCode\": \"IN\",\r\n        \"natureTransactionCode\": \"1\",\r\n        \"officeDeclarationCode\": \"GHABK\",\r\n        \"totalInsuranceForeign\": 0,\r\n        \"consignorCommunication\": \"AH\",\r\n        \"freightApportQualifier\": \"VOL\",\r\n        \"identificationMeansTav\": \"SA578\",\r\n        \"totalExtFreightForeign\": 0,\r\n        \"declarationCurrencyCode\": \"AFN\",\r\n        \"traderBlacklistedLatest\": false,\r\n        \"freightApportQualifierCode\": null,\r\n        \"consignorCommunicationReference\": \"AH\",\r\n        \"totalDocuments\": 0\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://bv-{{evn}}.ttekglobal.com/api/gateway/v1/decman/requests",
							"protocol": "https",
							"host": [
								"bv-{{evn}}",
								"ttekglobal",
								"com"
							],
							"path": [
								"api",
								"gateway",
								"v1",
								"decman",
								"requests"
							]
						}
					},
					"response": []
				},
				{
					"name": "test888",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data;\r",
									"data = pm.response.json();\r",
									"if(data)\r",
									"{\r",
									"   pm.environment.set(\"IDReference_IMForhomeUsedraft\", data.data.id);\r",
									"    pm.environment.set(\"Reference_IMForhomeUsedraft\", data.data.reference);\r",
									"    pm.environment.set(\"IDReference_LineIMForhomeUsedraft\", data.data.lines[0].id);\r",
									"    pm.environment.set(\"Reference_LineIMForhomeUsedraft\", data.data.lines[0].hash);\r",
									"   \r",
									"   \r",
									"   \r",
									"}\r",
									"pm.test(\"Status is DRAFT\", function () {\r",
									"    pm.expect(data.data.status).to.include(\"DRAFT\");\r",
									"});\r",
									"pm.test(\"line array has a length of 1\", function () {\r",
									"    pm.expect(data.data.lines).to.have.lengthOf(1);\r",
									"});\r",
									"\r",
									"pm.test(\"Response status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"if(pm.response.to.have.status(200))\r",
									"{\r",
									"   pm.execution.setNextRequest(\"ValidationDec_TemporaryIMOneline\");\r",
									"  \r",
									"}\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const evn = pm.variables.get(\"evn\");\r",
									"const realms = pm.variables.get(\"realms\");\r",
									"pm.sendRequest({\r",
									"      url: `https://bv-${evn}.ttekglobal.com/apps/keycloak/realms/${realms}/protocol/openid-connect/token`,\r",
									"      method: 'POST',\r",
									"       header: {\r",
									"    'Content-Type': 'application/x-www-form-urlencoded',\r",
									"  },\r",
									"      body: {\r",
									"          mode: 'urlencoded',\r",
									"          urlencoded: [\r",
									"            {key: \"grant_type\", value: \"password\"},\r",
									"            {key: \"client_id\", value: \"BV_SWAGGER_UI\"},\r",
									"            {key: \"username\", value: \"atlas.officer@yopmail.com\"},\r",
									"            {key: \"password\", value: \"@Ttek1234\"},\r",
									"        ]\r",
									"      }\r",
									"  }, \r",
									"  function (err, response) {\r",
									"    console.log(\"token\",response.json().access_token);\r",
									"        pm.environment.set(\"tokenIMEX\", response.json().access_token);\r",
									"  });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJGdjIxcThWV1l4MzlGSUZYeEktTkZBcDRpMU9za3hSV0ZzaXM2UlRvQzJFIn0.eyJleHAiOjE3MzcxMTAwODAsImlhdCI6MTczNzEwOTc4MCwiYXV0aF90aW1lIjoxNzM3MTA1NjAwLCJqdGkiOiI1NTFjM2RkMS0zMTY2LTRhNTUtYWVhMC1kZjA4NTgzYzQ1YzkiLCJpc3MiOiJodHRwczovL2J2LWNvcmUtZGV2LnR0ZWtnbG9iYWwuY29tL2FwcHMva2V5Y2xvYWsvcmVhbG1zL1RURUtfU1RBR0lORyIsImF1ZCI6ImJ2LWNvcmUtZGV2LW1pbmlvLXYxIiwic3ViIjoiODVkYzYwNmYtYThlMC00YTA2LWFkOGUtZTg0YmM2MTJlOTkxIiwidHlwIjoiQmVhcmVyIiwiYXpwIjoiQlZfVlVFX0FQUCIsInNlc3Npb25fc3RhdGUiOiJiYTVjNTI0OS1jMGNhLTRmNmEtYmZkZC0zNmYxZDA2NDU4ZGYiLCJzY29wZSI6Im9wZW5pZCB0dGVrLXByb2ZpbGUgbG9jYWxlIG1pbmlvIGVtYWlsIiwic2lkIjoiYmE1YzUyNDktYzBjYS00ZjZhLWJmZGQtMzZmMWQwNjQ1OGRmIiwibmF0aW9uYWxpdHktY29kZSI6IkFEIiwiZW1haWxfdmVyaWZpZWQiOnRydWUsImdlbmRlciI6Ik0iLCJ2YWxpZC10byI6IjE3NjcyODY3OTk5OTkiLCJiaXJ0aC1wbGFjZSI6IjE5ODktMDMtMTUgMTQ6NTY6MjkiLCJncm91cHMiOlsiYnYtdXNlcnMiXSwicG8tYm94LW51bWJlciI6IjQzNDY0NiIsImZpcnN0LW5hbWUiOiJKdW1hIiwib2ZmaWNlLXBob25lIjoiNDM0NjQ2IiwiYmlydGgtZGF0ZSI6IjYwNTk3Njk4OTAwMCIsIm1vYmlsZS1waG9uZSI6IjkyODU5NDY0NDQzNCIsIm1pZGRsZS1uYW1lIjoiLSIsImRlc2lnbmF0aW9uIjoiRlIiLCJ0YXgtaWQiOiI2NTQzNTQzNiIsImVtYWlsIjoiYXRsYXMub2ZmaWNlckB5b3BtYWlsLmNvbSIsInBvbGljeSI6W10sImxhc3QtbmFtZSI6IkFsZ2hhaXRoIiwidmFsaWQtZnJvbSI6IjE2NDc0MTczMDAwMDAifQ.UXmts5FRkCa80MkuUTY-M2BwpE8lNNTqsJ0YRDilSloCQVJ734hkmZmlnuNKWcNaIdzZAs6Yq6jSldkVNyBoK63BOxwWOslgd-oAJSB4aEtQBPh2bHGf_J5BJMImO9qVMYKeDxCDV9rqiwUQSuTRoHOkA5bnm7qzErkPxxj0BuGwO2i6pmGK4_4MGzSZXpbOlFt-QMT5-awt1ETohIUy-qwG5W0GxUMcAgGUFkCHeodM5WiYUaoZELdopq3I4G2ZbSCDUX8vvTM_fbe44n4peLYzDpYfT8x_ze55cycJQtIi053Kj48R14umli3sKCTbUFdrvba4MskO69XtGn_HWw",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"type\": \"SUBMISSION\",\r\n    \"data\": {\r\n        \"status\": \"DRAFT\",\r\n        \"regimeCode\": \"2\",\r\n        \"agentName\": \"Atlas World Logistics\",\r\n        \"agentTaxId\": \"90184561\",\r\n        \"agentBizFunction\": \"IM\",\r\n        \"agentCommunication\": \"EM\",\r\n        \"agentCommunicationRef\": \"atlas@yopmail.com\",\r\n        \"agentAddress\": {\r\n            \"id\": \"f6968f7d-5643-4f47-a1f7-e1d9f1ca1368\",\r\n            \"street\": \"Jeddah 7777\",\r\n            \"city\": \"Jeddah\",\r\n            \"poBoxNumber\": \"10101010\",\r\n            \"countryCode\": \"SA\",\r\n            \"address1\": \"111111\",\r\n            \"address2\": \"111111\",\r\n            \"address3\": \"11111\",\r\n            \"country\": \"SA\"\r\n        },\r\n        \"agentCountry\": \"SA\",\r\n        \"carrierName\": null,\r\n        \"traderName\": \"Atlas World Logistics\",\r\n        \"traderTaxId\": \"90184561\",\r\n        \"traderBizFunction\": \"IM\",\r\n        \"traderCommunication\": \"EM\",\r\n        \"traderCommunicationRef\": \"atlas@yopmail.com\",\r\n        \"traderAddress\": {\r\n            \"id\": \"f6968f7d-5643-4f47-a1f7-e1d9f1ca1368\",\r\n            \"street\": \"Jeddah 7777\",\r\n            \"city\": \"Jeddah\",\r\n            \"poBoxNumber\": \"10101010\",\r\n            \"countryCode\": \"SA\",\r\n            \"address1\": \"111111\",\r\n            \"address2\": \"111111\",\r\n            \"address3\": \"11111\",\r\n            \"country\": \"SA\"\r\n        },\r\n        \"traderCountry\": \"SA\",\r\n        \"procedureCode\": \"4\",\r\n        \"transportModeCode\": \"1\",\r\n        \"lines\": [\r\n            {\r\n                \"commodityClassification\": \"03078800\",\r\n                \"commercialGoodsDesc\": \"Oranges\",\r\n                \"supplementaryQuantity\": 1000,\r\n                \"permitReferences\": [],\r\n                \"goodsStatusCode\": null,\r\n                \"countryOriginCode\": \"AD\",\r\n                \"regionOriginCode\": \"08\",\r\n                \"declaredValue\": 15000,\r\n                \"dutyAssessmentValue\": 15000,\r\n                \"freightCharge\": 0,\r\n                \"insuranceCharge\": 0,\r\n                \"tariffPreferenceClaimedCode\": null,\r\n                \"govtProcedureClaimedCode\": null,\r\n                \"containerReferences\": [\r\n                    \"MSCU2092276\"\r\n                ],\r\n                \"numberPackages\": 10000,\r\n                \"grossWeight\": 1000,\r\n                \"netWeight\": 1000,\r\n                \"vehicles\": [],\r\n                \"containers\": [\r\n                    {\r\n                        \"seals\": \"4000001, 4000002, 4000003, 4000004\",\r\n                        \"containerType\": \"20R0\",\r\n                        \"containerNumber\": \"MSCU2092276\"\r\n                    }\r\n                ],\r\n                \"manufacture\": \"Godi Cheese With Vegetable Oil\",\r\n                \"shippingMark\": \"Oranges contained in two container\",\r\n                \"modelVehicles\": [],\r\n                \"insuranceLocal\": 0,\r\n                \"packageOfVolM3\": 1,\r\n                \"quotaProfileId\": null,\r\n                \"deductionsLocal\": 0,\r\n                \"extFreightLocal\": 0,\r\n                \"insuranceFxRate\": \"\",\r\n                \"otherCostsLocal\": 0,\r\n                \"valuationMethod\": \"1\",\r\n                \"deductedQuantity\": null,\r\n                \"deductionsFxRate\": 0,\r\n                \"descriptionGoods\": \"- Of the dried leguminous vegetables of heading 07.13\",\r\n                \"extFreightFxRate\": \"\",\r\n                \"insuranceForeign\": null,\r\n                \"lineCurrencyCode\": \"AFN\",\r\n                \"lineExchangeRate\": 1,\r\n                \"netWeightUOMCode\": \"05\",\r\n                \"otherCostsFxRate\": 0,\r\n                \"deductionsForeign\": 0,\r\n                \"extFreightForeign\": null,\r\n                \"otherCostsForeign\": 0,\r\n                \"grossWeightUOMCode\": \"06\",\r\n                \"governmentProcedure\": \"4000\",\r\n                \"linePackageTypeCode\": \"4A\",\r\n                \"statisticalQuantity\": 15000,\r\n                \"statisticalUnitCode\": \"KGM\",\r\n                \"valuationMethodCode\": \"1\",\r\n                \"supplierRelationCode\": \"135\",\r\n                \"valueForeignCurrency\": \"15000\",\r\n                \"insuranceCurrencyCode\": null,\r\n                \"deductionsCurrencyCode\": 0,\r\n                \"extFreightCurrencyCode\": null,\r\n                \"otherCostsCurrencyCode\": 0,\r\n                \"associatedGovtProcedure\": false,\r\n                \"valuationAdjustmentRate\": 1,\r\n                \"valuationAdjustmentValue\": 0,\r\n                \"valuationAdjustmentTypeCode\": null\r\n            },\r\n            {\r\n                \"commodityClassification\": \"08011900\",\r\n                \"commercialGoodsDesc\": \"Oranges\",\r\n                \"supplementaryQuantity\": 1000,\r\n                \"permitReferences\": [],\r\n                \"goodsStatusCode\": null,\r\n                \"countryOriginCode\": \"AD\",\r\n                \"regionOriginCode\": \"08\",\r\n                \"declaredValue\": 15000,\r\n                \"dutyAssessmentValue\": 15000,\r\n                \"freightCharge\": 0,\r\n                \"insuranceCharge\": 0,\r\n                \"tariffPreferenceClaimedCode\": null,\r\n                \"govtProcedureClaimedCode\": null,\r\n                \"containerReferences\": [\r\n                    \"MSCU2092276\"\r\n                ],\r\n                \"numberPackages\": 10000,\r\n                \"grossWeight\": 1000,\r\n                \"netWeight\": 1000,\r\n                \"vehicles\": [],\r\n                \"containers\": [\r\n                    {\r\n                        \"seals\": \"4000001, 4000002, 4000003, 4000004\",\r\n                        \"containerType\": \"20R0\",\r\n                        \"containerNumber\": \"MSCU2092276\"\r\n                    }\r\n                ],\r\n                \"manufacture\": \"Godi Cheese With Vegetable Oil\",\r\n                \"shippingMark\": \"Oranges contained in two container\",\r\n                \"modelVehicles\": [],\r\n                \"insuranceLocal\": 0,\r\n                \"packageOfVolM3\": 1,\r\n                \"quotaProfileId\": null,\r\n                \"deductionsLocal\": 0,\r\n                \"extFreightLocal\": 0,\r\n                \"insuranceFxRate\": \"\",\r\n                \"otherCostsLocal\": 0,\r\n                \"valuationMethod\": \"1\",\r\n                \"deductedQuantity\": null,\r\n                \"deductionsFxRate\": 0,\r\n                \"descriptionGoods\": \"-- Other\",\r\n                \"extFreightFxRate\": \"\",\r\n                \"insuranceForeign\": null,\r\n                \"lineCurrencyCode\": \"AFN\",\r\n                \"lineExchangeRate\": 1,\r\n                \"netWeightUOMCode\": \"05\",\r\n                \"otherCostsFxRate\": 0,\r\n                \"deductionsForeign\": 0,\r\n                \"extFreightForeign\": null,\r\n                \"otherCostsForeign\": 0,\r\n                \"grossWeightUOMCode\": \"06\",\r\n                \"governmentProcedure\": \"4000\",\r\n                \"linePackageTypeCode\": \"4A\",\r\n                \"statisticalQuantity\": 15000,\r\n                \"statisticalUnitCode\": \"KGM\",\r\n                \"valuationMethodCode\": \"1\",\r\n                \"supplierRelationCode\": \"135\",\r\n                \"valueForeignCurrency\": \"15000\",\r\n                \"insuranceCurrencyCode\": null,\r\n                \"deductionsCurrencyCode\": 0,\r\n                \"extFreightCurrencyCode\": null,\r\n                \"otherCostsCurrencyCode\": 0,\r\n                \"associatedGovtProcedure\": false,\r\n                \"valuationAdjustmentRate\": 1,\r\n                \"valuationAdjustmentValue\": 0,\r\n                \"valuationAdjustmentTypeCode\": null\r\n            },\r\n            {\r\n                \"commodityClassification\": \"32061100\",\r\n                \"commercialGoodsDesc\": \"Oranges\",\r\n                \"supplementaryQuantity\": 1000,\r\n                \"permitReferences\": [\r\n                    \"2100001797\"\r\n                ],\r\n                \"goodsStatusCode\": null,\r\n                \"countryOriginCode\": \"AD\",\r\n                \"regionOriginCode\": \"08\",\r\n                \"declaredValue\": 15000,\r\n                \"dutyAssessmentValue\": 15000,\r\n                \"freightCharge\": 0,\r\n                \"insuranceCharge\": 0,\r\n                \"tariffPreferenceClaimedCode\": null,\r\n                \"govtProcedureClaimedCode\": null,\r\n                \"containerReferences\": [\r\n                    \"MSCU2092276\"\r\n                ],\r\n                \"numberPackages\": 10000,\r\n                \"grossWeight\": 1000,\r\n                \"netWeight\": 1000,\r\n                \"vehicles\": [],\r\n                \"containers\": [\r\n                    {\r\n                        \"seals\": \"4000001, 4000002, 4000003, 4000004\",\r\n                        \"containerType\": \"20R0\",\r\n                        \"containerNumber\": \"MSCU2092276\"\r\n                    }\r\n                ],\r\n                \"manufacture\": \"Godi Cheese With Vegetable Oil\",\r\n                \"shippingMark\": \"Oranges contained in two container\",\r\n                \"modelVehicles\": [],\r\n                \"insuranceLocal\": 0,\r\n                \"packageOfVolM3\": 1,\r\n                \"quotaProfileId\": null,\r\n                \"deductionsLocal\": 0,\r\n                \"extFreightLocal\": 0,\r\n                \"insuranceFxRate\": \"\",\r\n                \"otherCostsLocal\": 0,\r\n                \"valuationMethod\": \"1\",\r\n                \"deductedQuantity\": null,\r\n                \"deductionsFxRate\": 0,\r\n                \"descriptionGoods\": \"-- Containing 80 % or more by weight of titanium dioxide calculated on the dry matter\",\r\n                \"extFreightFxRate\": \"\",\r\n                \"insuranceForeign\": null,\r\n                \"lineCurrencyCode\": \"AFN\",\r\n                \"lineExchangeRate\": 1,\r\n                \"netWeightUOMCode\": \"05\",\r\n                \"otherCostsFxRate\": 0,\r\n                \"deductionsForeign\": 0,\r\n                \"extFreightForeign\": null,\r\n                \"otherCostsForeign\": 0,\r\n                \"grossWeightUOMCode\": \"06\",\r\n                \"governmentProcedure\": \"4000\",\r\n                \"linePackageTypeCode\": \"4A\",\r\n                \"statisticalQuantity\": 15000,\r\n                \"statisticalUnitCode\": \"KGM\",\r\n                \"valuationMethodCode\": \"1\",\r\n                \"supplierRelationCode\": \"135\",\r\n                \"valueForeignCurrency\": \"15000\",\r\n                \"insuranceCurrencyCode\": null,\r\n                \"deductionsCurrencyCode\": 0,\r\n                \"extFreightCurrencyCode\": null,\r\n                \"otherCostsCurrencyCode\": 0,\r\n                \"associatedGovtProcedure\": false,\r\n                \"valuationAdjustmentRate\": 1,\r\n                \"valuationAdjustmentValue\": 0,\r\n                \"valuationAdjustmentTypeCode\": null\r\n            },\r\n            {\r\n                \"commodityClassification\": \"02011010\",\r\n                \"commercialGoodsDesc\": \"Oranges\",\r\n                \"supplementaryQuantity\": 100,\r\n                \"permitReferences\": [],\r\n                \"goodsStatusCode\": null,\r\n                \"countryOriginCode\": \"AD\",\r\n                \"regionOriginCode\": \"08\",\r\n                \"declaredValue\": 1100503.884045,\r\n                \"dutyAssessmentValue\": 1100503.884045,\r\n                \"freightCharge\": 0,\r\n                \"insuranceCharge\": 0,\r\n                \"tariffPreferenceClaimedCode\": null,\r\n                \"govtProcedureClaimedCode\": null,\r\n                \"containerReferences\": [\r\n                    \"MSCU2092276\"\r\n                ],\r\n                \"numberPackages\": 10000,\r\n                \"grossWeight\": 1000,\r\n                \"netWeight\": 1000,\r\n                \"vehicles\": [],\r\n                \"containers\": [\r\n                    {\r\n                        \"seals\": \"4000001, 4000002, 4000003, 4000004\",\r\n                        \"containerType\": \"20R0\",\r\n                        \"containerNumber\": \"MSCU2092276\"\r\n                    }\r\n                ],\r\n                \"manufacture\": \"Godi Cheese With Vegetable Oil\",\r\n                \"shippingMark\": \"Oranges contained in two container\",\r\n                \"modelVehicles\": [],\r\n                \"insuranceLocal\": 0,\r\n                \"packageOfVolM3\": 1,\r\n                \"quotaProfileId\": null,\r\n                \"deductionsLocal\": 0,\r\n                \"extFreightLocal\": 0,\r\n                \"insuranceFxRate\": \"\",\r\n                \"otherCostsLocal\": 0,\r\n                \"valuationMethod\": \"1\",\r\n                \"deductedQuantity\": null,\r\n                \"deductionsFxRate\": 0,\r\n                \"descriptionGoods\": \"--Organic meat\",\r\n                \"extFreightFxRate\": \"\",\r\n                \"insuranceForeign\": null,\r\n                \"lineCurrencyCode\": \"USD\",\r\n                \"lineExchangeRate\": 73.36692560300276,\r\n                \"netWeightUOMCode\": \"05\",\r\n                \"otherCostsFxRate\": 0,\r\n                \"deductionsForeign\": 0,\r\n                \"extFreightForeign\": null,\r\n                \"otherCostsForeign\": 0,\r\n                \"grossWeightUOMCode\": \"06\",\r\n                \"governmentProcedure\": \"4400\",\r\n                \"linePackageTypeCode\": \"4A\",\r\n                \"statisticalQuantity\": 1100503.884045,\r\n                \"statisticalUnitCode\": \"KGM\",\r\n                \"valuationMethodCode\": \"1\",\r\n                \"supplierRelationCode\": \"135\",\r\n                \"valueForeignCurrency\": \"15000\",\r\n                \"insuranceCurrencyCode\": null,\r\n                \"deductionsCurrencyCode\": 0,\r\n                \"extFreightCurrencyCode\": null,\r\n                \"otherCostsCurrencyCode\": 0,\r\n                \"associatedGovtProcedure\": false,\r\n                \"valuationAdjustmentRate\": 1,\r\n                \"valuationAdjustmentValue\": 0,\r\n                \"valuationAdjustmentTypeCode\": null\r\n            },\r\n            {\r\n\r\n                \"commodityClassification\": \"18062000\",\r\n                \"commercialGoodsDesc\": \"Oranges\",\r\n                \"supplementaryQuantity\": 1000,\r\n                \"permitReferences\": [],\r\n                \"goodsStatusCode\": null,\r\n                \"countryOriginCode\": \"AD\",\r\n                \"regionOriginCode\": \"08\",\r\n                \"declaredValue\": 293767.717865,\r\n                \"dutyAssessmentValue\": 293767.717865,\r\n                \"freightCharge\": 0,\r\n                \"insuranceCharge\": 0,\r\n                \"tariffPreferenceClaimedCode\": null,\r\n                \"govtProcedureClaimedCode\": null,\r\n                \"containerReferences\": [\r\n                    \"MSCU2092276\"\r\n                ],\r\n                \"numberPackages\": 10000,\r\n                \"grossWeight\": 1000,\r\n                \"netWeight\": 1000,\r\n                \"vehicles\": [],\r\n                \"containers\": [\r\n                    {\r\n                        \"seals\": \"4000001, 4000002, 4000003, 4000004\",\r\n                        \"containerType\": \"20R0\",\r\n                        \"containerNumber\": \"MSCU2092276\"\r\n                    }\r\n                ],\r\n                \"manufacture\": \"Godi Cheese With Vegetable Oil\",\r\n                \"shippingMark\": \"Oranges contained in two container\",\r\n                \"modelVehicles\": [],\r\n                \"insuranceLocal\": 0,\r\n                \"packageOfVolM3\": 1,\r\n                \"deductionsLocal\": 0,\r\n                \"extFreightLocal\": 0,\r\n                \"insuranceFxRate\": \"\",\r\n                \"otherCostsLocal\": 0,\r\n                \"valuationMethod\": \"1\",\r\n                \"deductedQuantity\": null,\r\n                \"deductionsFxRate\": 0,\r\n                \"descriptionGoods\": \"- Other preparations in blocks, slabs or bars weighing more than 2�kg or in liquid, paste, powder, granular or other bulk form in containers or immediate packings, of a content exceeding 2�kg\",\r\n                \"extFreightFxRate\": \"\",\r\n                \"insuranceForeign\": null,\r\n                \"lineCurrencyCode\": \"SAR\",\r\n                \"lineExchangeRate\": 19.584514524365584,\r\n                \"netWeightUOMCode\": \"08\",\r\n                \"otherCostsFxRate\": 0,\r\n                \"deductionsForeign\": 0,\r\n                \"extFreightForeign\": null,\r\n                \"otherCostsForeign\": 0,\r\n                \"grossWeightUOMCode\": \"05\",\r\n                \"governmentProcedure\": \"4000\",\r\n                \"linePackageTypeCode\": \"4A\",\r\n                \"statisticalQuantity\": 293767.717865,\r\n                \"statisticalUnitCode\": \"KGM\",\r\n                \"valuationMethodCode\": \"1\",\r\n                \"supplierRelationCode\": \"135\",\r\n                \"valueForeignCurrency\": \"15000\",\r\n                \"insuranceCurrencyCode\": null,\r\n                \"deductionsCurrencyCode\": 0,\r\n                \"extFreightCurrencyCode\": null,\r\n                \"otherCostsCurrencyCode\": 0,\r\n                \"associatedGovtProcedure\": false,\r\n                \"valuationAdjustmentRate\": 1,\r\n                \"valuationAdjustmentValue\": 0,\r\n                \"valuationAdjustmentTypeCode\": null\r\n            },\r\n            {\r\n                \"commodityClassification\": \"30012000\",\r\n                \"commercialGoodsDesc\": \"Oranges\",\r\n                \"supplementaryQuantity\": 100,\r\n                \"permitReferences\": [],\r\n                \"goodsStatusCode\": null,\r\n                \"countryOriginCode\": \"AD\",\r\n                \"regionOriginCode\": \"GU\",\r\n                \"declaredValue\": 1100503.884045,\r\n                \"dutyAssessmentValue\": 1100503.884045,\r\n                \"freightCharge\": 0,\r\n                \"insuranceCharge\": 0,\r\n                \"tariffPreferenceClaimedCode\": null,\r\n                \"govtProcedureClaimedCode\": null,\r\n                \"containerReferences\": [\r\n                    \"IPXU2148384\"\r\n                ],\r\n                \"numberPackages\": 10000,\r\n                \"grossWeight\": 1000,\r\n                \"netWeight\": 1000,\r\n                \"vehicles\": [],\r\n                \"containers\": [\r\n                    {\r\n                        \"seals\": \"5000001, 5000002, 5000003, 5000004\",\r\n                        \"containerType\": \"20R0\",\r\n                        \"containerNumber\": \"IPXU2148384\"\r\n                    }\r\n                ],\r\n                \"manufacture\": \"Godi Cheese With Vegetable Oil\",\r\n                \"shippingMark\": \"Oranges contained in two container\",\r\n                \"modelVehicles\": [],\r\n                \"insuranceLocal\": 0,\r\n                \"packageOfVolM3\": 1,\r\n                \"deductionsLocal\": 0,\r\n                \"extFreightLocal\": 0,\r\n                \"insuranceFxRate\": \"\",\r\n                \"otherCostsLocal\": 0,\r\n                \"valuationMethod\": \"1\",\r\n                \"deductedQuantity\": null,\r\n                \"deductionsFxRate\": 0,\r\n                \"descriptionGoods\": \"- Extracts of glands or other organs or of their secretions\",\r\n                \"extFreightFxRate\": \"\",\r\n                \"insuranceForeign\": null,\r\n                \"lineCurrencyCode\": \"USD\",\r\n                \"lineExchangeRate\": 73.36692560300276,\r\n                \"netWeightUOMCode\": \"05\",\r\n                \"otherCostsFxRate\": 0,\r\n                \"deductionsForeign\": 0,\r\n                \"extFreightForeign\": null,\r\n                \"otherCostsForeign\": 0,\r\n                \"grossWeightUOMCode\": \"05\",\r\n                \"governmentProcedure\": \"4400\",\r\n                \"linePackageTypeCode\": \"4A\",\r\n                \"statisticalQuantity\": 1100503.884045,\r\n                \"statisticalUnitCode\": \"KGM\",\r\n                \"valuationMethodCode\": \"1\",\r\n                \"supplierRelationCode\": \"135\",\r\n                \"valueForeignCurrency\": \"15000\",\r\n                \"insuranceCurrencyCode\": null,\r\n                \"deductionsCurrencyCode\": 0,\r\n                \"extFreightCurrencyCode\": null,\r\n                \"otherCostsCurrencyCode\": 0,\r\n                \"associatedGovtProcedure\": false,\r\n                \"valuationAdjustmentRate\": 1,\r\n                \"valuationAdjustmentValue\": 0,\r\n                \"valuationAdjustmentTypeCode\": null\r\n            },\r\n            {\r\n                \"commodityClassification\": \"50020000\",\r\n                \"commercialGoodsDesc\": \"Oranges\",\r\n                \"supplementaryQuantity\": 1000,\r\n                \"permitReferences\": [],\r\n                \"goodsStatusCode\": null,\r\n                \"countryOriginCode\": \"AD\",\r\n                \"regionOriginCode\": \"GU\",\r\n                \"declaredValue\": 1100503.884045,\r\n                \"dutyAssessmentValue\": 1100503.884045,\r\n                \"freightCharge\": 0,\r\n                \"insuranceCharge\": 0,\r\n                \"tariffPreferenceClaimedCode\": null,\r\n                \"govtProcedureClaimedCode\": null,\r\n                \"containerReferences\": [\r\n                    \"MSCU2092276\"\r\n                ],\r\n                \"numberPackages\": 10000,\r\n                \"grossWeight\": 1000,\r\n                \"netWeight\": 1000,\r\n                \"vehicles\": [],\r\n                \"containers\": [\r\n                    {\r\n                        \"seals\": \"4000001, 4000002, 4000003, 4000004\",\r\n                        \"containerType\": \"20R0\",\r\n                        \"containerNumber\": \"MSCU2092276\"\r\n                    }\r\n                ],\r\n                \"manufacture\": \"Godi Cheese With Vegetable Oil\",\r\n                \"shippingMark\": \"Oranges contained in two container\",\r\n                \"modelVehicles\": [],\r\n                \"insuranceLocal\": 0,\r\n                \"packageOfVolM3\": 1,\r\n                \"deductionsLocal\": 0,\r\n                \"extFreightLocal\": 0,\r\n                \"insuranceFxRate\": \"\",\r\n                \"otherCostsLocal\": 0,\r\n                \"valuationMethod\": \"1\",\r\n                \"deductedQuantity\": null,\r\n                \"deductionsFxRate\": 0,\r\n                \"descriptionGoods\": \"Raw silk (not thrown).\",\r\n                \"extFreightFxRate\": \"\",\r\n                \"insuranceForeign\": null,\r\n                \"lineCurrencyCode\": \"USD\",\r\n                \"lineExchangeRate\": 73.36692560300276,\r\n                \"netWeightUOMCode\": \"05\",\r\n                \"otherCostsFxRate\": 0,\r\n                \"deductionsForeign\": 0,\r\n                \"extFreightForeign\": null,\r\n                \"otherCostsForeign\": 0,\r\n                \"grossWeightUOMCode\": \"05\",\r\n                \"governmentProcedure\": \"4000\",\r\n                \"linePackageTypeCode\": \"4A\",\r\n                \"statisticalQuantity\": 1100503.884045,\r\n                \"statisticalUnitCode\": \"KGM\",\r\n                \"valuationMethodCode\": \"1\",\r\n                \"supplierRelationCode\": \"135\",\r\n                \"valueForeignCurrency\": \"15000\",\r\n                \"insuranceCurrencyCode\": null,\r\n                \"deductionsCurrencyCode\": 0,\r\n                \"extFreightCurrencyCode\": null,\r\n                \"otherCostsCurrencyCode\": 0,\r\n                \"associatedGovtProcedure\": false,\r\n                \"valuationAdjustmentRate\": 1,\r\n                \"valuationAdjustmentValue\": 0,\r\n                \"valuationAdjustmentTypeCode\": null\r\n            },\r\n            {\r\n                \"commodityClassification\": \"50010000\",\r\n                \"commercialGoodsDesc\": \"Oranges\",\r\n                \"supplementaryQuantity\": 1000,\r\n                \"permitReferences\": [],\r\n                \"goodsStatusCode\": null,\r\n                \"countryOriginCode\": \"AD\",\r\n                \"regionOriginCode\": \"GU\",\r\n                \"declaredValue\": 1100503.884045,\r\n                \"dutyAssessmentValue\": 1100503.884045,\r\n                \"freightCharge\": 0,\r\n                \"insuranceCharge\": 0,\r\n                \"tariffPreferenceClaimedCode\": null,\r\n                \"govtProcedureClaimedCode\": null,\r\n                \"containerReferences\": [\r\n                    \"IPXU2148384\"\r\n                ],\r\n                \"numberPackages\": 10000,\r\n                \"grossWeight\": 1000,\r\n                \"netWeight\": 1000,\r\n                \"vehicles\": [],\r\n                \"containers\": [\r\n                    {\r\n                        \"seals\": \"5000001, 5000002, 5000003, 5000004\",\r\n                        \"containerType\": \"20R0\",\r\n                        \"containerNumber\": \"IPXU2148384\"\r\n                    }\r\n                ],\r\n                \"manufacture\": \"Godi Cheese With Vegetable Oil\",\r\n                \"shippingMark\": \"Oranges contained in two container\",\r\n                \"modelVehicles\": [],\r\n                \"insuranceLocal\": 0,\r\n                \"packageOfVolM3\": 1,\r\n                \"deductionsLocal\": 0,\r\n                \"extFreightLocal\": 0,\r\n                \"insuranceFxRate\": \"\",\r\n                \"otherCostsLocal\": 0,\r\n                \"valuationMethod\": \"1\",\r\n                \"deductedQuantity\": null,\r\n                \"deductionsFxRate\": 0,\r\n                \"descriptionGoods\": \"Silk-worm cocoons suitable for reeling.\",\r\n                \"extFreightFxRate\": \"\",\r\n                \"insuranceForeign\": null,\r\n                \"lineCurrencyCode\": \"USD\",\r\n                \"lineExchangeRate\": 73.36692560300276,\r\n                \"netWeightUOMCode\": \"10\",\r\n                \"otherCostsFxRate\": 0,\r\n                \"deductionsForeign\": 0,\r\n                \"extFreightForeign\": null,\r\n                \"otherCostsForeign\": 0,\r\n                \"grossWeightUOMCode\": \"05\",\r\n                \"governmentProcedure\": \"4000\",\r\n                \"linePackageTypeCode\": \"4A\",\r\n                \"statisticalQuantity\": 1100503.884045,\r\n                \"statisticalUnitCode\": \"KGM\",\r\n                \"valuationMethodCode\": \"1\",\r\n                \"supplierRelationCode\": \"135\",\r\n                \"valueForeignCurrency\": \"15000\",\r\n                \"insuranceCurrencyCode\": null,\r\n                \"deductionsCurrencyCode\": 0,\r\n                \"extFreightCurrencyCode\": null,\r\n                \"otherCostsCurrencyCode\": 0,\r\n                \"associatedGovtProcedure\": false,\r\n                \"valuationAdjustmentRate\": 1,\r\n                \"valuationAdjustmentValue\": 0,\r\n                \"valuationAdjustmentTypeCode\": null\r\n            },\r\n            {\r\n                \"commodityClassification\": \"50030000\",\r\n                \"commercialGoodsDesc\": \"Oranges\",\r\n                \"supplementaryQuantity\": 1000,\r\n                \"permitReferences\": [],\r\n                \"goodsStatusCode\": null,\r\n                \"countryOriginCode\": \"AD\",\r\n                \"regionOriginCode\": \"GU\",\r\n                \"declaredValue\": 1100503.884045,\r\n                \"dutyAssessmentValue\": 1100503.884045,\r\n                \"freightCharge\": 0,\r\n                \"insuranceCharge\": 0,\r\n                \"tariffPreferenceClaimedCode\": null,\r\n                \"govtProcedureClaimedCode\": null,\r\n                \"containerReferences\": [\r\n                    \"MSCU2092276\"\r\n                ],\r\n                \"numberPackages\": 10000,\r\n                \"grossWeight\": 1000,\r\n                \"netWeight\": 1000,\r\n                \"vehicles\": [],\r\n                \"containers\": [\r\n                    {\r\n                        \"seals\": \"4000001, 4000002, 4000003, 4000004\",\r\n                        \"containerType\": \"20R0\",\r\n                        \"containerNumber\": \"MSCU2092276\"\r\n                    }\r\n                ],\r\n                \"manufacture\": \"Godi Cheese With Vegetable Oil\",\r\n                \"shippingMark\": \"Oranges contained in two container\",\r\n                \"modelVehicles\": [],\r\n                \"insuranceLocal\": 0,\r\n                \"packageOfVolM3\": 1,\r\n                \"deductionsLocal\": 0,\r\n                \"extFreightLocal\": 0,\r\n                \"insuranceFxRate\": \"\",\r\n                \"otherCostsLocal\": 0,\r\n                \"valuationMethod\": \"1\",\r\n                \"deductedQuantity\": null,\r\n                \"deductionsFxRate\": 0,\r\n                \"descriptionGoods\": \"Silk waste (including cocoons unsuitable for reeling, yarn waste and garnetted stock).\",\r\n                \"extFreightFxRate\": \"\",\r\n                \"insuranceForeign\": null,\r\n                \"lineCurrencyCode\": \"USD\",\r\n                \"lineExchangeRate\": 73.36692560300276,\r\n                \"netWeightUOMCode\": \"06\",\r\n                \"otherCostsFxRate\": 0,\r\n                \"deductionsForeign\": 0,\r\n                \"extFreightForeign\": null,\r\n                \"otherCostsForeign\": 0,\r\n                \"grossWeightUOMCode\": \"05\",\r\n                \"governmentProcedure\": \"4000\",\r\n                \"linePackageTypeCode\": \"4A\",\r\n                \"statisticalQuantity\": 1100503.884045,\r\n                \"statisticalUnitCode\": \"KGM\",\r\n                \"valuationMethodCode\": \"1\",\r\n                \"supplierRelationCode\": \"135\",\r\n                \"valueForeignCurrency\": \"15000\",\r\n                \"insuranceCurrencyCode\": null,\r\n                \"deductionsCurrencyCode\": 0,\r\n                \"extFreightCurrencyCode\": null,\r\n                \"otherCostsCurrencyCode\": 0,\r\n                \"associatedGovtProcedure\": false,\r\n                \"valuationAdjustmentRate\": 1,\r\n                \"valuationAdjustmentValue\": 0,\r\n                \"valuationAdjustmentTypeCode\": null\r\n            },\r\n            {\r\n                \"commodityClassification\": \"20029011\",\r\n                \"commercialGoodsDesc\": \"Oranges\",\r\n                \"supplementaryQuantity\": 1000,\r\n                \"permitReferences\": [],\r\n                \"goodsStatusCode\": null,\r\n                \"countryOriginCode\": \"AD\",\r\n                \"regionOriginCode\": \"GU\",\r\n                \"declaredValue\": 1100503.884045,\r\n                \"dutyAssessmentValue\": 1100503.884045,\r\n                \"freightCharge\": 0,\r\n                \"insuranceCharge\": 0,\r\n                \"tariffPreferenceClaimedCode\": null,\r\n                \"govtProcedureClaimedCode\": null,\r\n                \"containerReferences\": [\r\n                    \"MSCU2092276\"\r\n                ],\r\n                \"numberPackages\": 10000,\r\n                \"grossWeight\": 1000,\r\n                \"netWeight\": 1000,\r\n                \"vehicles\": [],\r\n                \"containers\": [\r\n                    {\r\n                        \"seals\": \"4000001, 4000002, 4000003, 4000004\",\r\n                        \"containerType\": \"20R0\",\r\n                        \"containerNumber\": \"MSCU2092276\"\r\n                    }\r\n                ],\r\n                \"manufacture\": \"Godi Cheese With Vegetable Oil\",\r\n                \"shippingMark\": \"Oranges contained in two container\",\r\n                \"modelVehicles\": [],\r\n                \"insuranceLocal\": 0,\r\n                \"packageOfVolM3\": 1,\r\n                \"deductionsLocal\": 0,\r\n                \"extFreightLocal\": 0,\r\n                \"insuranceFxRate\": \"\",\r\n                \"otherCostsLocal\": 0,\r\n                \"valuationMethod\": \"1\",\r\n                \"deductedQuantity\": null,\r\n                \"deductionsFxRate\": 0,\r\n                \"descriptionGoods\": \"---  Triple concentrate\",\r\n                \"extFreightFxRate\": \"\",\r\n                \"insuranceForeign\": null,\r\n                \"lineCurrencyCode\": \"USD\",\r\n                \"lineExchangeRate\": 73.36692560300276,\r\n                \"netWeightUOMCode\": \"08\",\r\n                \"otherCostsFxRate\": 0,\r\n                \"deductionsForeign\": 0,\r\n                \"extFreightForeign\": null,\r\n                \"otherCostsForeign\": 0,\r\n                \"grossWeightUOMCode\": \"05\",\r\n                \"governmentProcedure\": \"4100\",\r\n                \"linePackageTypeCode\": \"4A\",\r\n                \"statisticalQuantity\": 1100503.884045,\r\n                \"statisticalUnitCode\": \"KGM\",\r\n                \"valuationMethodCode\": \"1\",\r\n                \"supplierRelationCode\": \"135\",\r\n                \"valueForeignCurrency\": \"15000\",\r\n                \"insuranceCurrencyCode\": null,\r\n                \"deductionsCurrencyCode\": 0,\r\n                \"extFreightCurrencyCode\": null,\r\n                \"otherCostsCurrencyCode\": 0,\r\n                \"associatedGovtProcedure\": false,\r\n                \"valuationAdjustmentRate\": 1,\r\n                \"valuationAdjustmentValue\": 0,\r\n                \"valuationAdjustmentTypeCode\": null\r\n            },\r\n            {\r\n                \"commodityClassification\": \"20049000\",\r\n                \"commercialGoodsDesc\": \"Oranges\",\r\n                \"supplementaryQuantity\": 1000,\r\n                \"permitReferences\": [],\r\n                \"goodsStatusCode\": null,\r\n                \"countryOriginCode\": \"AD\",\r\n                \"regionOriginCode\": \"GU\",\r\n                \"declaredValue\": 1100503.884045,\r\n                \"dutyAssessmentValue\": 1100503.884045,\r\n                \"freightCharge\": 0,\r\n                \"insuranceCharge\": 0,\r\n                \"tariffPreferenceClaimedCode\": null,\r\n                \"govtProcedureClaimedCode\": null,\r\n                \"containerReferences\": [\r\n                    \"MSCU2092276\"\r\n                ],\r\n                \"numberPackages\": 10000,\r\n                \"grossWeight\": 1000,\r\n                \"netWeight\": 1000,\r\n                \"vehicles\": [],\r\n                \"containers\": [\r\n                    {\r\n                        \"seals\": \"4000001, 4000002, 4000003, 4000004\",\r\n                        \"containerType\": \"20R0\",\r\n                        \"containerNumber\": \"MSCU2092276\"\r\n                    }\r\n                ],\r\n                \"manufacture\": \"Godi Cheese With Vegetable Oil\",\r\n                \"shippingMark\": \"Oranges contained in two container\",\r\n                \"modelVehicles\": [],\r\n                \"insuranceLocal\": 0,\r\n                \"packageOfVolM3\": 1,\r\n                \"deductionsLocal\": 0,\r\n                \"extFreightLocal\": 0,\r\n                \"insuranceFxRate\": \"\",\r\n                \"otherCostsLocal\": 0,\r\n                \"valuationMethod\": \"1\",\r\n                \"deductedQuantity\": null,\r\n                \"deductionsFxRate\": 0,\r\n                \"descriptionGoods\": \"- Other vegetables and mixtures of vegetables\",\r\n                \"extFreightFxRate\": \"\",\r\n                \"insuranceForeign\": null,\r\n                \"lineCurrencyCode\": \"USD\",\r\n                \"lineExchangeRate\": 73.36692560300276,\r\n                \"netWeightUOMCode\": \"08\",\r\n                \"otherCostsFxRate\": 0,\r\n                \"deductionsForeign\": 0,\r\n                \"extFreightForeign\": null,\r\n                \"otherCostsForeign\": 0,\r\n                \"grossWeightUOMCode\": \"05\",\r\n                \"governmentProcedure\": \"4300\",\r\n                \"linePackageTypeCode\": \"4A\",\r\n                \"statisticalQuantity\": 1100503.884045,\r\n                \"statisticalUnitCode\": \"KGM\",\r\n                \"valuationMethodCode\": \"1\",\r\n                \"supplierRelationCode\": \"135\",\r\n                \"valueForeignCurrency\": \"15000\",\r\n                \"insuranceCurrencyCode\": null,\r\n                \"deductionsCurrencyCode\": 0,\r\n                \"extFreightCurrencyCode\": null,\r\n                \"otherCostsCurrencyCode\": 0,\r\n                \"associatedGovtProcedure\": false,\r\n                \"valuationAdjustmentRate\": 1,\r\n                \"valuationAdjustmentValue\": 0,\r\n                \"valuationAdjustmentTypeCode\": null\r\n            },\r\n            {\r\n                \"commodityClassification\": \"60012900\",\r\n                \"commercialGoodsDesc\": \"Oranges\",\r\n                \"supplementaryQuantity\": 1000,\r\n                \"permitReferences\": [],\r\n                \"goodsStatusCode\": null,\r\n                \"countryOriginCode\": \"AD\",\r\n                \"regionOriginCode\": \"GU\",\r\n                \"declaredValue\": 1100503.884045,\r\n                \"dutyAssessmentValue\": 1100503.884045,\r\n                \"freightCharge\": 0,\r\n                \"insuranceCharge\": 0,\r\n                \"tariffPreferenceClaimedCode\": null,\r\n                \"govtProcedureClaimedCode\": null,\r\n                \"containerReferences\": [\r\n                    \"IPXU2148384\"\r\n                ],\r\n                \"numberPackages\": 10000,\r\n                \"grossWeight\": 1000,\r\n                \"netWeight\": 1000,\r\n                \"vehicles\": [],\r\n                \"containers\": [\r\n                    {\r\n                        \"seals\": \"5000001, 5000002, 5000003, 5000004\",\r\n                        \"containerType\": \"20R0\",\r\n                        \"containerNumber\": \"IPXU2148384\"\r\n                    }\r\n                ],\r\n                \"manufacture\": \"Godi Cheese With Vegetable Oil\",\r\n                \"shippingMark\": \"Oranges contained in two container\",\r\n                \"modelVehicles\": [],\r\n                \"insuranceLocal\": 0,\r\n                \"packageOfVolM3\": 1,\r\n                \"deductionsLocal\": 0,\r\n                \"extFreightLocal\": 0,\r\n                \"insuranceFxRate\": \"\",\r\n                \"otherCostsLocal\": 0,\r\n                \"valuationMethod\": \"1\",\r\n                \"deductedQuantity\": null,\r\n                \"deductionsFxRate\": 0,\r\n                \"descriptionGoods\": \"-- Of other textile materials\",\r\n                \"extFreightFxRate\": \"\",\r\n                \"insuranceForeign\": null,\r\n                \"lineCurrencyCode\": \"USD\",\r\n                \"lineExchangeRate\": 73.36692560300276,\r\n                \"netWeightUOMCode\": \"10\",\r\n                \"otherCostsFxRate\": 0,\r\n                \"deductionsForeign\": 0,\r\n                \"extFreightForeign\": null,\r\n                \"otherCostsForeign\": 0,\r\n                \"grossWeightUOMCode\": \"05\",\r\n                \"governmentProcedure\": \"4500\",\r\n                \"linePackageTypeCode\": \"4A\",\r\n                \"statisticalQuantity\": 1100503.884045,\r\n                \"statisticalUnitCode\": \"KGM\",\r\n                \"valuationMethodCode\": \"1\",\r\n                \"supplierRelationCode\": \"135\",\r\n                \"valueForeignCurrency\": \"15000\",\r\n                \"insuranceCurrencyCode\": null,\r\n                \"deductionsCurrencyCode\": 0,\r\n                \"extFreightCurrencyCode\": null,\r\n                \"otherCostsCurrencyCode\": 0,\r\n                \"associatedGovtProcedure\": false,\r\n                \"valuationAdjustmentRate\": 1,\r\n                \"valuationAdjustmentValue\": 0,\r\n                \"valuationAdjustmentTypeCode\": null\r\n            },\r\n            {\r\n                \"commodityClassification\": \"40024100\",\r\n                \"commercialGoodsDesc\": \"Oranges\",\r\n                \"supplementaryQuantity\": 4000,\r\n                \"permitReferences\": [],\r\n                \"goodsStatusCode\": null,\r\n                \"countryOriginCode\": \"AD\",\r\n                \"regionOriginCode\": \"GU\",\r\n                \"declaredValue\": 1100503.884045,\r\n                \"dutyAssessmentValue\": 1100503.884045,\r\n                \"freightCharge\": 0,\r\n                \"insuranceCharge\": 0,\r\n                \"tariffPreferenceClaimedCode\": null,\r\n                \"govtProcedureClaimedCode\": null,\r\n                \"containerReferences\": [\r\n                    \"MSCU2092276\"\r\n                ],\r\n                \"numberPackages\": 10000,\r\n                \"grossWeight\": 1000,\r\n                \"netWeight\": 1000,\r\n                \"vehicles\": [],\r\n                \"containers\": [\r\n                    {\r\n                        \"seals\": \"4000001, 4000002, 4000003, 4000004\",\r\n                        \"containerType\": \"20R0\",\r\n                        \"containerNumber\": \"MSCU2092276\"\r\n                    }\r\n                ],\r\n                \"manufacture\": \"Godi Cheese With Vegetable Oil\",\r\n                \"shippingMark\": \"Oranges contained in two container\",\r\n                \"modelVehicles\": [],\r\n                \"insuranceLocal\": 0,\r\n                \"packageOfVolM3\": 1,\r\n                \"deductionsLocal\": 0,\r\n                \"extFreightLocal\": 0,\r\n                \"insuranceFxRate\": \"\",\r\n                \"otherCostsLocal\": 0,\r\n                \"valuationMethod\": \"1\",\r\n                \"deductedQuantity\": null,\r\n                \"deductionsFxRate\": 0,\r\n                \"descriptionGoods\": \"-- Latex\",\r\n                \"extFreightFxRate\": \"\",\r\n                \"insuranceForeign\": null,\r\n                \"lineCurrencyCode\": \"USD\",\r\n                \"lineExchangeRate\": 73.36692560300276,\r\n                \"netWeightUOMCode\": \"10\",\r\n                \"otherCostsFxRate\": 0,\r\n                \"deductionsForeign\": 0,\r\n                \"extFreightForeign\": null,\r\n                \"otherCostsForeign\": 0,\r\n                \"grossWeightUOMCode\": \"05\",\r\n                \"governmentProcedure\": \"4400\",\r\n                \"linePackageTypeCode\": \"4A\",\r\n                \"statisticalQuantity\": 1100503.884045,\r\n                \"statisticalUnitCode\": \"KGM\",\r\n                \"valuationMethodCode\": \"1\",\r\n                \"supplierRelationCode\": \"135\",\r\n                \"valueForeignCurrency\": \"15000\",\r\n                \"insuranceCurrencyCode\": null,\r\n                \"deductionsCurrencyCode\": 0,\r\n                \"extFreightCurrencyCode\": null,\r\n                \"otherCostsCurrencyCode\": 0,\r\n                \"associatedGovtProcedure\": false,\r\n                \"valuationAdjustmentRate\": 1,\r\n                \"valuationAdjustmentValue\": 0,\r\n                \"valuationAdjustmentTypeCode\": null\r\n            },\r\n            {\r\n                \"commodityClassification\": \"09011124\",\r\n                \"commercialGoodsDesc\": \"Oranges\",\r\n                \"supplementaryQuantity\": 1000,\r\n                \"permitReferences\": [],\r\n                \"goodsStatusCode\": null,\r\n                \"countryOriginCode\": \"AD\",\r\n                \"regionOriginCode\": \"GU\",\r\n                \"declaredValue\": 1100503.884045,\r\n                \"dutyAssessmentValue\": 1100503.884045,\r\n                \"freightCharge\": 0,\r\n                \"insuranceCharge\": 0,\r\n                \"tariffPreferenceClaimedCode\": null,\r\n                \"govtProcedureClaimedCode\": null,\r\n                \"containerReferences\": [\r\n                    \"MSCU2092276\"\r\n                ],\r\n                \"numberPackages\": 10000,\r\n                \"grossWeight\": 1000,\r\n                \"netWeight\": 1000,\r\n                \"vehicles\": [],\r\n                \"containers\": [\r\n                    {\r\n                        \"seals\": \"4000001, 4000002, 4000003, 4000004\",\r\n                        \"containerType\": \"20R0\",\r\n                        \"containerNumber\": \"MSCU2092276\"\r\n                    }\r\n                ],\r\n                \"manufacture\": \"Godi Cheese With Vegetable Oil\",\r\n                \"shippingMark\": \"Oranges contained in two container\",\r\n                \"modelVehicles\": [],\r\n                \"insuranceLocal\": 0,\r\n                \"packageOfVolM3\": 1,\r\n                \"deductionsLocal\": 0,\r\n                \"extFreightLocal\": 0,\r\n                \"insuranceFxRate\": \"\",\r\n                \"otherCostsLocal\": 0,\r\n                \"valuationMethod\": \"1\",\r\n                \"deductedQuantity\": null,\r\n                \"deductionsFxRate\": 0,\r\n                \"descriptionGoods\": \"----  Normal extra prima, small, very small sized grade two\",\r\n                \"extFreightFxRate\": \"\",\r\n                \"insuranceForeign\": null,\r\n                \"lineCurrencyCode\": \"USD\",\r\n                \"lineExchangeRate\": 73.36692560300276,\r\n                \"netWeightUOMCode\": \"08\",\r\n                \"otherCostsFxRate\": 0,\r\n                \"deductionsForeign\": 0,\r\n                \"extFreightForeign\": null,\r\n                \"otherCostsForeign\": 0,\r\n                \"grossWeightUOMCode\": \"05\",\r\n                \"governmentProcedure\": \"4000\",\r\n                \"linePackageTypeCode\": \"4A\",\r\n                \"statisticalQuantity\": 1100503.884045,\r\n                \"statisticalUnitCode\": \"KGM\",\r\n                \"valuationMethodCode\": \"1\",\r\n                \"supplierRelationCode\": \"135\",\r\n                \"valueForeignCurrency\": \"15000\",\r\n                \"insuranceCurrencyCode\": null,\r\n                \"deductionsCurrencyCode\": 0,\r\n                \"extFreightCurrencyCode\": null,\r\n                \"otherCostsCurrencyCode\": 0,\r\n                \"associatedGovtProcedure\": false,\r\n                \"valuationAdjustmentRate\": 1,\r\n                \"valuationAdjustmentValue\": 0,\r\n                \"valuationAdjustmentTypeCode\": null\r\n            },\r\n            {\r\n                \"commodityClassification\": \"90031100\",\r\n                \"commercialGoodsDesc\": \"Oranges\",\r\n                \"supplementaryQuantity\": 1000,\r\n                \"permitReferences\": [],\r\n                \"goodsStatusCode\": null,\r\n                \"countryOriginCode\": \"AD\",\r\n                \"regionOriginCode\": \"GU\",\r\n                \"declaredValue\": 1100503.884045,\r\n                \"dutyAssessmentValue\": 1100503.884045,\r\n                \"freightCharge\": 0,\r\n                \"insuranceCharge\": 0,\r\n                \"tariffPreferenceClaimedCode\": null,\r\n                \"govtProcedureClaimedCode\": null,\r\n                \"containerReferences\": [\r\n                    \"MSCU2092276\"\r\n                ],\r\n                \"numberPackages\": 10000,\r\n                \"grossWeight\": 1000,\r\n                \"netWeight\": 1000,\r\n                \"vehicles\": [],\r\n                \"containers\": [\r\n                    {\r\n                        \"seals\": \"4000001, 4000002, 4000003, 4000004\",\r\n                        \"containerType\": \"20R0\",\r\n                        \"containerNumber\": \"MSCU2092276\"\r\n                    }\r\n                ],\r\n                \"manufacture\": \"Godi Cheese With Vegetable Oil\",\r\n                \"shippingMark\": \"Oranges contained in two container\",\r\n                \"modelVehicles\": [],\r\n                \"insuranceLocal\": 0,\r\n                \"packageOfVolM3\": 1,\r\n                \"deductionsLocal\": 0,\r\n                \"extFreightLocal\": 0,\r\n                \"insuranceFxRate\": \"\",\r\n                \"otherCostsLocal\": 0,\r\n                \"valuationMethod\": \"1\",\r\n                \"deductedQuantity\": null,\r\n                \"deductionsFxRate\": 0,\r\n                \"descriptionGoods\": \"-- Of plastics\",\r\n                \"extFreightFxRate\": \"\",\r\n                \"insuranceForeign\": null,\r\n                \"lineCurrencyCode\": \"USD\",\r\n                \"lineExchangeRate\": 73.36692560300276,\r\n                \"netWeightUOMCode\": \"05\",\r\n                \"otherCostsFxRate\": 0,\r\n                \"deductionsForeign\": 0,\r\n                \"extFreightForeign\": null,\r\n                \"otherCostsForeign\": 0,\r\n                \"grossWeightUOMCode\": \"05\",\r\n                \"governmentProcedure\": \"4000\",\r\n                \"linePackageTypeCode\": \"4A\",\r\n                \"statisticalQuantity\": 1100503.884045,\r\n                \"statisticalUnitCode\": \"MND\",\r\n                \"valuationMethodCode\": \"1\",\r\n                \"supplierRelationCode\": \"135\",\r\n                \"valueForeignCurrency\": \"15000\",\r\n                \"insuranceCurrencyCode\": null,\r\n                \"deductionsCurrencyCode\": 0,\r\n                \"extFreightCurrencyCode\": null,\r\n                \"otherCostsCurrencyCode\": 0,\r\n                \"associatedGovtProcedure\": false,\r\n                \"valuationAdjustmentRate\": 1,\r\n                \"valuationAdjustmentValue\": 0,\r\n                \"valuationAdjustmentTypeCode\": null\r\n            },\r\n            {\r\n                \"commodityClassification\": \"09011144\",\r\n                \"commercialGoodsDesc\": \"Oranges\",\r\n                \"supplementaryQuantity\": 1000,\r\n                \"permitReferences\": [],\r\n                \"goodsStatusCode\": null,\r\n                \"countryOriginCode\": \"AD\",\r\n                \"regionOriginCode\": \"GU\",\r\n                \"declaredValue\": 1100503.884045,\r\n                \"dutyAssessmentValue\": 1100503.884045,\r\n                \"freightCharge\": 0,\r\n                \"insuranceCharge\": 0,\r\n                \"tariffPreferenceClaimedCode\": null,\r\n                \"govtProcedureClaimedCode\": null,\r\n                \"containerReferences\": [\r\n                    \"MSCU2092276\"\r\n                ],\r\n                \"numberPackages\": 10000,\r\n                \"grossWeight\": 1000,\r\n                \"netWeight\": 1000,\r\n                \"vehicles\": [],\r\n                \"containers\": [\r\n                    {\r\n                        \"seals\": \"4000001, 4000002, 4000003, 4000004\",\r\n                        \"containerType\": \"20R0\",\r\n                        \"containerNumber\": \"MSCU2092276\"\r\n                    }\r\n                ],\r\n                \"manufacture\": \"Godi Cheese With Vegetable Oil\",\r\n                \"shippingMark\": \"Oranges contained in two container\",\r\n                \"modelVehicles\": [],\r\n                \"insuranceLocal\": 0,\r\n                \"packageOfVolM3\": 1,\r\n                \"deductionsLocal\": 0,\r\n                \"extFreightLocal\": 0,\r\n                \"insuranceFxRate\": \"\",\r\n                \"otherCostsLocal\": 0,\r\n                \"valuationMethod\": \"1\",\r\n                \"deductedQuantity\": null,\r\n                \"deductionsFxRate\": 0,\r\n                \"descriptionGoods\": \"---- Other\",\r\n                \"extFreightFxRate\": \"\",\r\n                \"insuranceForeign\": null,\r\n                \"lineCurrencyCode\": \"USD\",\r\n                \"lineExchangeRate\": 73.36692560300276,\r\n                \"netWeightUOMCode\": \"05\",\r\n                \"otherCostsFxRate\": 0,\r\n                \"deductionsForeign\": 0,\r\n                \"extFreightForeign\": null,\r\n                \"otherCostsForeign\": 0,\r\n                \"grossWeightUOMCode\": \"05\",\r\n                \"governmentProcedure\": \"4000\",\r\n                \"linePackageTypeCode\": \"4A\",\r\n                \"statisticalQuantity\": 1100503.884045,\r\n                \"statisticalUnitCode\": \"KGM\",\r\n                \"valuationMethodCode\": \"1\",\r\n                \"supplierRelationCode\": \"135\",\r\n                \"valueForeignCurrency\": \"15000\",\r\n                \"insuranceCurrencyCode\": null,\r\n                \"deductionsCurrencyCode\": 0,\r\n                \"extFreightCurrencyCode\": null,\r\n                \"otherCostsCurrencyCode\": 0,\r\n                \"associatedGovtProcedure\": false,\r\n                \"valuationAdjustmentRate\": 1,\r\n                \"valuationAdjustmentValue\": 0,\r\n                \"valuationAdjustmentTypeCode\": null\r\n            },\r\n            {\r\n                \"commodityClassification\": \"70049000\",\r\n                \"commercialGoodsDesc\": \"Oranges\",\r\n                \"supplementaryQuantity\": 1000,\r\n                \"permitReferences\": [],\r\n                \"goodsStatusCode\": null,\r\n                \"countryOriginCode\": \"AD\",\r\n                \"regionOriginCode\": \"GU\",\r\n                \"declaredValue\": 1100503.884045,\r\n                \"dutyAssessmentValue\": 1100503.884045,\r\n                \"freightCharge\": 0,\r\n                \"insuranceCharge\": 0,\r\n                \"tariffPreferenceClaimedCode\": null,\r\n                \"govtProcedureClaimedCode\": null,\r\n                \"containerReferences\": [\r\n                    \"MSCU2092276\"\r\n                ],\r\n                \"numberPackages\": 10000,\r\n                \"grossWeight\": 1000,\r\n                \"netWeight\": 1000,\r\n                \"vehicles\": [],\r\n                \"containers\": [\r\n                    {\r\n                        \"seals\": \"4000001, 4000002, 4000003, 4000004\",\r\n                        \"containerType\": \"20R0\",\r\n                        \"containerNumber\": \"MSCU2092276\"\r\n                    }\r\n                ],\r\n                \"manufacture\": \"Godi Cheese With Vegetable Oil\",\r\n                \"shippingMark\": \"Oranges contained in two container\",\r\n                \"modelVehicles\": [],\r\n                \"insuranceLocal\": 0,\r\n                \"packageOfVolM3\": 1,\r\n                \"deductionsLocal\": 0,\r\n                \"extFreightLocal\": 0,\r\n                \"insuranceFxRate\": \"\",\r\n                \"otherCostsLocal\": 0,\r\n                \"valuationMethod\": \"1\",\r\n                \"deductedQuantity\": null,\r\n                \"deductionsFxRate\": 0,\r\n                \"descriptionGoods\": \"- Other glass\",\r\n                \"extFreightFxRate\": \"\",\r\n                \"insuranceForeign\": null,\r\n                \"lineCurrencyCode\": \"USD\",\r\n                \"lineExchangeRate\": 73.36692560300276,\r\n                \"netWeightUOMCode\": \"05\",\r\n                \"otherCostsFxRate\": 0,\r\n                \"deductionsForeign\": 0,\r\n                \"extFreightForeign\": null,\r\n                \"otherCostsForeign\": 0,\r\n                \"grossWeightUOMCode\": \"05\",\r\n                \"governmentProcedure\": \"4000\",\r\n                \"linePackageTypeCode\": \"4A\",\r\n                \"statisticalQuantity\": 1100503.884045,\r\n                \"statisticalUnitCode\": \"MTK\",\r\n                \"valuationMethodCode\": \"1\",\r\n                \"supplierRelationCode\": \"135\",\r\n                \"valueForeignCurrency\": \"15000\",\r\n                \"insuranceCurrencyCode\": null,\r\n                \"deductionsCurrencyCode\": 0,\r\n                \"extFreightCurrencyCode\": null,\r\n                \"otherCostsCurrencyCode\": 0,\r\n                \"associatedGovtProcedure\": false,\r\n                \"valuationAdjustmentRate\": 1,\r\n                \"valuationAdjustmentValue\": 0,\r\n                \"valuationAdjustmentTypeCode\": null\r\n            },\r\n            {\r\n                \"commodityClassification\": \"08022100\",\r\n                \"commercialGoodsDesc\": \"Oranges\",\r\n                \"supplementaryQuantity\": 1000,\r\n                \"permitReferences\": [],\r\n                \"goodsStatusCode\": null,\r\n                \"countryOriginCode\": \"AD\",\r\n                \"regionOriginCode\": \"GU\",\r\n                \"declaredValue\": 1100503.884045,\r\n                \"dutyAssessmentValue\": 1100503.884045,\r\n                \"freightCharge\": 0,\r\n                \"insuranceCharge\": 0,\r\n                \"tariffPreferenceClaimedCode\": null,\r\n                \"govtProcedureClaimedCode\": null,\r\n                \"containerReferences\": [\r\n                    \"MSCU2092276\"\r\n                ],\r\n                \"numberPackages\": 10000,\r\n                \"grossWeight\": 1000,\r\n                \"netWeight\": 1000,\r\n                \"vehicles\": [],\r\n                \"containers\": [\r\n                    {\r\n                        \"seals\": \"4000001, 4000002, 4000003, 4000004\",\r\n                        \"containerType\": \"20R0\",\r\n                        \"containerNumber\": \"MSCU2092276\"\r\n                    }\r\n                ],\r\n                \"manufacture\": \"Godi Cheese With Vegetable Oil\",\r\n                \"shippingMark\": \"Oranges contained in two container\",\r\n                \"modelVehicles\": [],\r\n                \"insuranceLocal\": 0,\r\n                \"packageOfVolM3\": 1,\r\n                \"deductionsLocal\": 0,\r\n                \"extFreightLocal\": 0,\r\n                \"insuranceFxRate\": \"\",\r\n                \"otherCostsLocal\": 0,\r\n                \"valuationMethod\": \"1\",\r\n                \"deductedQuantity\": null,\r\n                \"deductionsFxRate\": 0,\r\n                \"descriptionGoods\": \"-- In shell\",\r\n                \"extFreightFxRate\": \"\",\r\n                \"insuranceForeign\": null,\r\n                \"lineCurrencyCode\": \"USD\",\r\n                \"lineExchangeRate\": 73.36692560300276,\r\n                \"netWeightUOMCode\": \"05\",\r\n                \"otherCostsFxRate\": 0,\r\n                \"deductionsForeign\": 0,\r\n                \"extFreightForeign\": null,\r\n                \"otherCostsForeign\": 0,\r\n                \"grossWeightUOMCode\": \"05\",\r\n                \"governmentProcedure\": \"4000\",\r\n                \"linePackageTypeCode\": \"4A\",\r\n                \"statisticalQuantity\": 1100503.884045,\r\n                \"statisticalUnitCode\": \"KGM\",\r\n                \"valuationMethodCode\": \"1\",\r\n                \"supplierRelationCode\": \"135\",\r\n                \"valueForeignCurrency\": \"15000\",\r\n                \"insuranceCurrencyCode\": null,\r\n                \"deductionsCurrencyCode\": 0,\r\n                \"extFreightCurrencyCode\": null,\r\n                \"otherCostsCurrencyCode\": 0,\r\n                \"associatedGovtProcedure\": false,\r\n                \"valuationAdjustmentRate\": 1,\r\n                \"valuationAdjustmentValue\": 0,\r\n                \"valuationAdjustmentTypeCode\": null\r\n            },\r\n            {\r\n                \"commodityClassification\": \"36050000\",\r\n                \"commercialGoodsDesc\": \"Oranges\",\r\n                \"supplementaryQuantity\": 1000,\r\n                \"permitReferences\": [],\r\n                \"goodsStatusCode\": null,\r\n                \"countryOriginCode\": \"AD\",\r\n                \"regionOriginCode\": \"GU\",\r\n                \"declaredValue\": 1100503.884045,\r\n                \"dutyAssessmentValue\": 1100503.884045,\r\n                \"freightCharge\": 0,\r\n                \"insuranceCharge\": 0,\r\n                \"tariffPreferenceClaimedCode\": null,\r\n                \"govtProcedureClaimedCode\": null,\r\n                \"containerReferences\": [\r\n                    \"MSCU2092276\"\r\n                ],\r\n                \"numberPackages\": 10000,\r\n                \"grossWeight\": 1000,\r\n                \"netWeight\": 1000,\r\n                \"vehicles\": [],\r\n                \"containers\": [\r\n                    {\r\n                        \"seals\": \"4000001, 4000002, 4000003, 4000004\",\r\n                        \"containerType\": \"20R0\",\r\n                        \"containerNumber\": \"MSCU2092276\"\r\n                    }\r\n                ],\r\n                \"manufacture\": \"Godi Cheese With Vegetable Oil\",\r\n                \"shippingMark\": \"Oranges contained in two container\",\r\n                \"modelVehicles\": [],\r\n                \"insuranceLocal\": 0,\r\n                \"packageOfVolM3\": 1,\r\n                \"deductionsLocal\": 0,\r\n                \"extFreightLocal\": 0,\r\n                \"insuranceFxRate\": \"\",\r\n                \"otherCostsLocal\": 0,\r\n                \"valuationMethod\": \"1\",\r\n                \"deductedQuantity\": null,\r\n                \"deductionsFxRate\": 0,\r\n                \"descriptionGoods\": \"Matches, other than pyrotechnic articles of heading 36.04.\",\r\n                \"extFreightFxRate\": \"\",\r\n                \"insuranceForeign\": null,\r\n                \"lineCurrencyCode\": \"USD\",\r\n                \"lineExchangeRate\": 73.36692560300276,\r\n                \"netWeightUOMCode\": \"05\",\r\n                \"otherCostsFxRate\": 0,\r\n                \"deductionsForeign\": 0,\r\n                \"extFreightForeign\": null,\r\n                \"otherCostsForeign\": 0,\r\n                \"grossWeightUOMCode\": \"05\",\r\n                \"governmentProcedure\": \"4000\",\r\n                \"linePackageTypeCode\": \"4A\",\r\n                \"statisticalQuantity\": 1100503.884045,\r\n                \"statisticalUnitCode\": \"KGM\",\r\n                \"valuationMethodCode\": \"1\",\r\n                \"supplierRelationCode\": \"135\",\r\n                \"valueForeignCurrency\": \"15000\",\r\n                \"insuranceCurrencyCode\": null,\r\n                \"deductionsCurrencyCode\": 0,\r\n                \"extFreightCurrencyCode\": null,\r\n                \"otherCostsCurrencyCode\": 0,\r\n                \"associatedGovtProcedure\": false,\r\n                \"valuationAdjustmentRate\": 1,\r\n                \"valuationAdjustmentValue\": 0,\r\n                \"valuationAdjustmentTypeCode\": null\r\n            },\r\n            {\r\n                \"id\": \"0f4b74f7-5aad-402e-824f-ee6dab9f9a2d\",\r\n                \"commodityClassification\": \"52053400\",\r\n                \"commercialGoodsDesc\": \"Oranges\",\r\n                \"supplementaryQuantity\": 1000,\r\n                \"permitReferences\": [],\r\n                \"goodsStatusCode\": null,\r\n                \"countryOriginCode\": \"AD\",\r\n                \"regionOriginCode\": \"GU\",\r\n                \"declaredValue\": 1100503.884045,\r\n                \"dutyAssessmentValue\": 1100503.884045,\r\n                \"freightCharge\": 0,\r\n                \"insuranceCharge\": 0,\r\n                \"tariffPreferenceClaimedCode\": null,\r\n                \"govtProcedureClaimedCode\": null,\r\n                \"containerReferences\": [\r\n                    \"MSCU2092276\"\r\n                ],\r\n                \"numberPackages\": 10000,\r\n                \"grossWeight\": 1000,\r\n                \"netWeight\": 1000,\r\n                \"vehicles\": [],\r\n                \"containers\": [\r\n                    {\r\n                        \"seals\": \"4000001, 4000002, 4000003, 4000004\",\r\n                        \"containerType\": \"20R0\",\r\n                        \"containerNumber\": \"MSCU2092276\"\r\n                    }\r\n                ],\r\n                \"manufacture\": \"Godi Cheese With Vegetable Oil\",\r\n                \"shippingMark\": \"Oranges contained in two container\",\r\n                \"modelVehicles\": [],\r\n                \"insuranceLocal\": 0,\r\n                \"packageOfVolM3\": 1,\r\n                \"deductionsLocal\": 0,\r\n                \"extFreightLocal\": 0,\r\n                \"insuranceFxRate\": \"\",\r\n                \"otherCostsLocal\": 0,\r\n                \"valuationMethod\": \"1\",\r\n                \"deductedQuantity\": null,\r\n                \"deductionsFxRate\": 0,\r\n                \"descriptionGoods\": \"-- Measuring per single yarn less than 192.31 decitex but not less than  125 decitex (exceeding 52 metric number but not exceeding 80 metric number per single yarn)\",\r\n                \"extFreightFxRate\": \"\",\r\n                \"insuranceForeign\": null,\r\n                \"lineCurrencyCode\": \"USD\",\r\n                \"lineExchangeRate\": 73.36692560300276,\r\n                \"netWeightUOMCode\": \"05\",\r\n                \"otherCostsFxRate\": 0,\r\n                \"deductionsForeign\": 0,\r\n                \"extFreightForeign\": null,\r\n                \"otherCostsForeign\": 0,\r\n                \"grossWeightUOMCode\": \"05\",\r\n                \"governmentProcedure\": \"4000\",\r\n                \"linePackageTypeCode\": \"4A\",\r\n                \"statisticalQuantity\": 1100503.884045,\r\n                \"statisticalUnitCode\": \"KGM\",\r\n                \"valuationMethodCode\": \"1\",\r\n                \"supplierRelationCode\": \"135\",\r\n                \"valueForeignCurrency\": \"15000\",\r\n                \"insuranceCurrencyCode\": null,\r\n                \"deductionsCurrencyCode\": 0,\r\n                \"extFreightCurrencyCode\": null,\r\n                \"otherCostsCurrencyCode\": 0,\r\n                \"associatedGovtProcedure\": false,\r\n                \"valuationAdjustmentRate\": 1,\r\n                \"valuationAdjustmentValue\": 0,\r\n                \"valuationAdjustmentTypeCode\": null\r\n            },\r\n            {\r\n                \"commodityClassification\": \"50072000\",\r\n                \"commercialGoodsDesc\": \"Oranges\",\r\n                \"supplementaryQuantity\": 1000,\r\n                \"permitReferences\": [],\r\n                \"goodsStatusCode\": null,\r\n                \"countryOriginCode\": \"AD\",\r\n                \"regionOriginCode\": \"GU\",\r\n                \"declaredValue\": 1100503.884045,\r\n                \"dutyAssessmentValue\": 1100503.884045,\r\n                \"freightCharge\": 0,\r\n                \"insuranceCharge\": 0,\r\n                \"tariffPreferenceClaimedCode\": null,\r\n                \"govtProcedureClaimedCode\": null,\r\n                \"containerReferences\": [\r\n                    \"MSCU2092276\"\r\n                ],\r\n                \"numberPackages\": 10000,\r\n                \"grossWeight\": 1000,\r\n                \"netWeight\": 1000,\r\n                \"vehicles\": [],\r\n                \"containers\": [\r\n                    {\r\n                        \"seals\": \"4000001, 4000002, 4000003, 4000004\",\r\n                        \"containerType\": \"20R0\",\r\n                        \"containerNumber\": \"MSCU2092276\"\r\n                    }\r\n                ],\r\n                \"manufacture\": \"Godi Cheese With Vegetable Oil\",\r\n                \"shippingMark\": \"Oranges contained in two container\",\r\n                \"modelVehicles\": [],\r\n                \"insuranceLocal\": 0,\r\n                \"packageOfVolM3\": 1,\r\n                \"deductionsLocal\": 0,\r\n                \"extFreightLocal\": 0,\r\n                \"insuranceFxRate\": \"\",\r\n                \"otherCostsLocal\": 0,\r\n                \"valuationMethod\": \"1\",\r\n                \"deductedQuantity\": null,\r\n                \"deductionsFxRate\": 0,\r\n                \"descriptionGoods\": \"- Other fabrics, containing 85 % or more by weight of silk or of silk waste other than noil silk\",\r\n                \"extFreightFxRate\": \"\",\r\n                \"insuranceForeign\": null,\r\n                \"lineCurrencyCode\": \"USD\",\r\n                \"lineExchangeRate\": 73.36692560300276,\r\n                \"netWeightUOMCode\": \"05\",\r\n                \"otherCostsFxRate\": 0,\r\n                \"deductionsForeign\": 0,\r\n                \"extFreightForeign\": null,\r\n                \"otherCostsForeign\": 0,\r\n                \"grossWeightUOMCode\": \"05\",\r\n                \"governmentProcedure\": \"4000\",\r\n                \"linePackageTypeCode\": \"4A\",\r\n                \"statisticalQuantity\": 1100503.884045,\r\n                \"statisticalUnitCode\": \"KGM\",\r\n                \"valuationMethodCode\": \"1\",\r\n                \"supplierRelationCode\": \"135\",\r\n                \"valueForeignCurrency\": \"15000\",\r\n                \"insuranceCurrencyCode\": null,\r\n                \"deductionsCurrencyCode\": 0,\r\n                \"extFreightCurrencyCode\": null,\r\n                \"otherCostsCurrencyCode\": 0,\r\n                \"associatedGovtProcedure\": false,\r\n                \"valuationAdjustmentRate\": 1,\r\n                \"valuationAdjustmentValue\": 0,\r\n                \"valuationAdjustmentTypeCode\": null\r\n            },\r\n            {\r\n                \"commodityClassification\": \"90012000\",\r\n                \"commercialGoodsDesc\": \"Oranges\",\r\n                \"supplementaryQuantity\": 1000,\r\n                \"permitReferences\": [],\r\n                \"goodsStatusCode\": null,\r\n                \"countryOriginCode\": \"AD\",\r\n                \"regionOriginCode\": \"GU\",\r\n                \"declaredValue\": 1100503.884045,\r\n                \"dutyAssessmentValue\": 1100503.884045,\r\n                \"freightCharge\": 0,\r\n                \"insuranceCharge\": 0,\r\n                \"tariffPreferenceClaimedCode\": null,\r\n                \"govtProcedureClaimedCode\": null,\r\n                \"containerReferences\": [\r\n                    \"MSCU2092276\"\r\n                ],\r\n                \"numberPackages\": 10000,\r\n                \"grossWeight\": 1000,\r\n                \"netWeight\": 1000,\r\n                \"vehicles\": [],\r\n                \"containers\": [\r\n                    {\r\n                        \"seals\": \"4000001, 4000002, 4000003, 4000004\",\r\n                        \"containerType\": \"20R0\",\r\n                        \"containerNumber\": \"MSCU2092276\"\r\n                    }\r\n                ],\r\n                \"manufacture\": \"Godi Cheese With Vegetable Oil\",\r\n                \"shippingMark\": \"Oranges contained in two container\",\r\n                \"modelVehicles\": [],\r\n                \"insuranceLocal\": 0,\r\n                \"packageOfVolM3\": 1,\r\n                \"deductionsLocal\": 0,\r\n                \"extFreightLocal\": 0,\r\n                \"insuranceFxRate\": \"\",\r\n                \"otherCostsLocal\": 0,\r\n                \"valuationMethod\": \"1\",\r\n                \"deductedQuantity\": null,\r\n                \"deductionsFxRate\": 0,\r\n                \"descriptionGoods\": \"- Sheets and plates of polarising material\",\r\n                \"extFreightFxRate\": \"\",\r\n                \"insuranceForeign\": null,\r\n                \"lineCurrencyCode\": \"USD\",\r\n                \"lineExchangeRate\": 73.36692560300276,\r\n                \"netWeightUOMCode\": \"05\",\r\n                \"otherCostsFxRate\": 0,\r\n                \"deductionsForeign\": 0,\r\n                \"extFreightForeign\": null,\r\n                \"otherCostsForeign\": 0,\r\n                \"grossWeightUOMCode\": \"05\",\r\n                \"governmentProcedure\": \"4000\",\r\n                \"linePackageTypeCode\": \"4A\",\r\n                \"statisticalQuantity\": 1100503.884045,\r\n                \"statisticalUnitCode\": \"KGM\",\r\n                \"valuationMethodCode\": \"1\",\r\n                \"supplierRelationCode\": \"135\",\r\n                \"valueForeignCurrency\": \"15000\",\r\n                \"insuranceCurrencyCode\": null,\r\n                \"deductionsCurrencyCode\": 0,\r\n                \"extFreightCurrencyCode\": null,\r\n                \"otherCostsCurrencyCode\": 0,\r\n                \"associatedGovtProcedure\": false,\r\n                \"valuationAdjustmentRate\": 1,\r\n                \"valuationAdjustmentValue\": 0,\r\n                \"valuationAdjustmentTypeCode\": null\r\n            },\r\n            {\r\n                \"commodityClassification\": \"90031900\",\r\n                \"commercialGoodsDesc\": \"Oranges\",\r\n                \"supplementaryQuantity\": 1000,\r\n                \"permitReferences\": [],\r\n                \"goodsStatusCode\": null,\r\n                \"countryOriginCode\": \"AD\",\r\n                \"regionOriginCode\": \"GU\",\r\n                \"declaredValue\": 1100503.884045,\r\n                \"dutyAssessmentValue\": 1100503.884045,\r\n                \"freightCharge\": 0,\r\n                \"insuranceCharge\": 0,\r\n                \"tariffPreferenceClaimedCode\": null,\r\n                \"govtProcedureClaimedCode\": null,\r\n                \"containerReferences\": [\r\n                    \"MSCU2092276\"\r\n                ],\r\n                \"numberPackages\": 10000,\r\n                \"grossWeight\": 1000,\r\n                \"netWeight\": 1000,\r\n                \"vehicles\": [],\r\n                \"containers\": [\r\n                    {\r\n                        \"seals\": \"4000001, 4000002, 4000003, 4000004\",\r\n                        \"containerType\": \"20R0\",\r\n                        \"containerNumber\": \"MSCU2092276\"\r\n                    }\r\n                ],\r\n                \"manufacture\": \"Godi Cheese With Vegetable Oil\",\r\n                \"shippingMark\": \"Oranges contained in two container\",\r\n                \"modelVehicles\": [],\r\n                \"insuranceLocal\": 0,\r\n                \"packageOfVolM3\": 1,\r\n                \"deductionsLocal\": 0,\r\n                \"extFreightLocal\": 0,\r\n                \"insuranceFxRate\": \"\",\r\n                \"otherCostsLocal\": 0,\r\n                \"valuationMethod\": \"1\",\r\n                \"deductedQuantity\": null,\r\n                \"deductionsFxRate\": 0,\r\n                \"descriptionGoods\": \"-- Of other materials\",\r\n                \"extFreightFxRate\": \"\",\r\n                \"insuranceForeign\": null,\r\n                \"lineCurrencyCode\": \"USD\",\r\n                \"lineExchangeRate\": 73.36692560300276,\r\n                \"netWeightUOMCode\": \"05\",\r\n                \"otherCostsFxRate\": 0,\r\n                \"deductionsForeign\": 0,\r\n                \"extFreightForeign\": null,\r\n                \"otherCostsForeign\": 0,\r\n                \"grossWeightUOMCode\": \"05\",\r\n                \"governmentProcedure\": \"4000\",\r\n                \"linePackageTypeCode\": \"4A\",\r\n                \"statisticalQuantity\": 1100503.884045,\r\n                \"statisticalUnitCode\": \"MND\",\r\n                \"valuationMethodCode\": \"1\",\r\n                \"supplierRelationCode\": \"135\",\r\n                \"valueForeignCurrency\": \"15000\",\r\n                \"insuranceCurrencyCode\": null,\r\n                \"deductionsCurrencyCode\": 0,\r\n                \"extFreightCurrencyCode\": null,\r\n                \"otherCostsCurrencyCode\": 0,\r\n                \"associatedGovtProcedure\": false,\r\n                \"valuationAdjustmentRate\": 1,\r\n                \"valuationAdjustmentValue\": 0,\r\n                \"valuationAdjustmentTypeCode\": null\r\n            },\r\n            {\r\n                \"commodityClassification\": \"70052900\",\r\n                \"commercialGoodsDesc\": \"Oranges\",\r\n                \"supplementaryQuantity\": 1000,\r\n                \"permitReferences\": [],\r\n                \"goodsStatusCode\": null,\r\n                \"countryOriginCode\": \"AD\",\r\n                \"regionOriginCode\": \"GU\",\r\n                \"declaredValue\": 1100503.884045,\r\n                \"dutyAssessmentValue\": 1100503.884045,\r\n                \"freightCharge\": 0,\r\n                \"insuranceCharge\": 0,\r\n                \"tariffPreferenceClaimedCode\": null,\r\n                \"govtProcedureClaimedCode\": null,\r\n                \"containerReferences\": [\r\n                    \"MSCU2092276\"\r\n                ],\r\n                \"numberPackages\": 10000,\r\n                \"grossWeight\": 1000,\r\n                \"netWeight\": 1000,\r\n                \"vehicles\": [],\r\n                \"containers\": [\r\n                    {\r\n                        \"seals\": \"4000001, 4000002, 4000003, 4000004\",\r\n                        \"containerType\": \"20R0\",\r\n                        \"containerNumber\": \"MSCU2092276\"\r\n                    }\r\n                ],\r\n                \"manufacture\": \"Godi Cheese With Vegetable Oil\",\r\n                \"shippingMark\": \"Oranges contained in two container\",\r\n                \"modelVehicles\": [],\r\n                \"insuranceLocal\": 0,\r\n                \"packageOfVolM3\": 1,\r\n                \"deductionsLocal\": 0,\r\n                \"extFreightLocal\": 0,\r\n                \"insuranceFxRate\": \"\",\r\n                \"otherCostsLocal\": 0,\r\n                \"valuationMethod\": \"1\",\r\n                \"deductedQuantity\": null,\r\n                \"deductionsFxRate\": 0,\r\n                \"descriptionGoods\": \"-- Other\",\r\n                \"extFreightFxRate\": \"\",\r\n                \"insuranceForeign\": null,\r\n                \"lineCurrencyCode\": \"USD\",\r\n                \"lineExchangeRate\": 73.36692560300276,\r\n                \"netWeightUOMCode\": \"05\",\r\n                \"otherCostsFxRate\": 0,\r\n                \"deductionsForeign\": 0,\r\n                \"extFreightForeign\": null,\r\n                \"otherCostsForeign\": 0,\r\n                \"grossWeightUOMCode\": \"05\",\r\n                \"governmentProcedure\": \"4000\",\r\n                \"linePackageTypeCode\": \"4A\",\r\n                \"statisticalQuantity\": 1100503.884045,\r\n                \"statisticalUnitCode\": \"MTK\",\r\n                \"valuationMethodCode\": \"1\",\r\n                \"supplierRelationCode\": \"135\",\r\n                \"valueForeignCurrency\": \"15000\",\r\n                \"insuranceCurrencyCode\": null,\r\n                \"deductionsCurrencyCode\": 0,\r\n                \"extFreightCurrencyCode\": null,\r\n                \"otherCostsCurrencyCode\": 0,\r\n                \"associatedGovtProcedure\": false,\r\n                \"valuationAdjustmentRate\": 1,\r\n                \"valuationAdjustmentValue\": 0,\r\n                \"valuationAdjustmentTypeCode\": null\r\n            },\r\n            {\r\n                \"commodityClassification\": \"48114910\",\r\n                \"commercialGoodsDesc\": \"Oranges\",\r\n                \"supplementaryQuantity\": 1000,\r\n                \"permitReferences\": [],\r\n                \"goodsStatusCode\": null,\r\n                \"countryOriginCode\": \"AD\",\r\n                \"regionOriginCode\": \"GU\",\r\n                \"declaredValue\": 1100503.884045,\r\n                \"dutyAssessmentValue\": 1100503.884045,\r\n                \"freightCharge\": 0,\r\n                \"insuranceCharge\": 0,\r\n                \"tariffPreferenceClaimedCode\": null,\r\n                \"govtProcedureClaimedCode\": null,\r\n                \"containerReferences\": [\r\n                    \"MSCU2092276\"\r\n                ],\r\n                \"numberPackages\": 10000,\r\n                \"grossWeight\": 1000,\r\n                \"netWeight\": 1000,\r\n                \"vehicles\": [],\r\n                \"containers\": [\r\n                    {\r\n                        \"seals\": \"4000001, 4000002, 4000003, 4000004\",\r\n                        \"containerType\": \"20R0\",\r\n                        \"containerNumber\": \"MSCU2092276\"\r\n                    }\r\n                ],\r\n                \"manufacture\": \"Godi Cheese With Vegetable Oil\",\r\n                \"shippingMark\": \"Oranges contained in two container\",\r\n                \"modelVehicles\": [],\r\n                \"insuranceLocal\": 0,\r\n                \"packageOfVolM3\": 1,\r\n                \"deductionsLocal\": 0,\r\n                \"extFreightLocal\": 0,\r\n                \"insuranceFxRate\": \"\",\r\n                \"otherCostsLocal\": 0,\r\n                \"valuationMethod\": \"1\",\r\n                \"deductedQuantity\": null,\r\n                \"deductionsFxRate\": 0,\r\n                \"descriptionGoods\": \"---  In rolls of a width not exceeding 150mm or in rectangular (including square) sheets, with one side not exceeding 435mm and the other side not exceeding 297mm in the unfolded state\",\r\n                \"extFreightFxRate\": \"\",\r\n                \"insuranceForeign\": null,\r\n                \"lineCurrencyCode\": \"USD\",\r\n                \"lineExchangeRate\": 73.36692560300276,\r\n                \"netWeightUOMCode\": \"05\",\r\n                \"otherCostsFxRate\": 0,\r\n                \"deductionsForeign\": 0,\r\n                \"extFreightForeign\": null,\r\n                \"otherCostsForeign\": 0,\r\n                \"grossWeightUOMCode\": \"05\",\r\n                \"governmentProcedure\": \"4000\",\r\n                \"linePackageTypeCode\": \"4A\",\r\n                \"statisticalQuantity\": 1100503.884045,\r\n                \"statisticalUnitCode\": \"KGM\",\r\n                \"valuationMethodCode\": \"1\",\r\n                \"supplierRelationCode\": \"135\",\r\n                \"valueForeignCurrency\": \"15000\",\r\n                \"insuranceCurrencyCode\": null,\r\n                \"deductionsCurrencyCode\": 0,\r\n                \"extFreightCurrencyCode\": null,\r\n                \"otherCostsCurrencyCode\": 0,\r\n                \"associatedGovtProcedure\": false,\r\n                \"valuationAdjustmentRate\": 1,\r\n                \"valuationAdjustmentValue\": 0,\r\n                \"valuationAdjustmentTypeCode\": null\r\n            },\r\n            {\r\n                \"commodityClassification\": \"48102210\",\r\n                \"commercialGoodsDesc\": \"Oranges\",\r\n                \"supplementaryQuantity\": 1000,\r\n                \"permitReferences\": [],\r\n                \"goodsStatusCode\": null,\r\n                \"countryOriginCode\": \"AD\",\r\n                \"regionOriginCode\": \"GU\",\r\n                \"declaredValue\": 1100503.884045,\r\n                \"dutyAssessmentValue\": 1100503.884045,\r\n                \"freightCharge\": 0,\r\n                \"insuranceCharge\": 0,\r\n                \"tariffPreferenceClaimedCode\": null,\r\n                \"govtProcedureClaimedCode\": null,\r\n                \"containerReferences\": [\r\n                    \"MSCU2092276\"\r\n                ],\r\n                \"numberPackages\": 10000,\r\n                \"grossWeight\": 1000,\r\n                \"netWeight\": 1000,\r\n                \"vehicles\": [],\r\n                \"containers\": [\r\n                    {\r\n                        \"seals\": \"4000001, 4000002, 4000003, 4000004\",\r\n                        \"containerType\": \"20R0\",\r\n                        \"containerNumber\": \"MSCU2092276\"\r\n                    }\r\n                ],\r\n                \"manufacture\": \"Godi Cheese With Vegetable Oil\",\r\n                \"shippingMark\": \"Oranges contained in two container\",\r\n                \"modelVehicles\": [],\r\n                \"insuranceLocal\": 0,\r\n                \"packageOfVolM3\": 1,\r\n                \"deductionsLocal\": 0,\r\n                \"extFreightLocal\": 0,\r\n                \"insuranceFxRate\": \"\",\r\n                \"otherCostsLocal\": 0,\r\n                \"valuationMethod\": \"1\",\r\n                \"deductedQuantity\": null,\r\n                \"deductionsFxRate\": 0,\r\n                \"descriptionGoods\": \"---  In rolls of a width not exceeding 150mm or in rectangular (including square) sheets, with one side not exceeding 435mm and the other side not exceeding 297mm in the unfolded state\",\r\n                \"extFreightFxRate\": \"\",\r\n                \"insuranceForeign\": null,\r\n                \"lineCurrencyCode\": \"USD\",\r\n                \"lineExchangeRate\": 73.36692560300276,\r\n                \"netWeightUOMCode\": \"05\",\r\n                \"otherCostsFxRate\": 0,\r\n                \"deductionsForeign\": 0,\r\n                \"extFreightForeign\": null,\r\n                \"otherCostsForeign\": 0,\r\n                \"grossWeightUOMCode\": \"05\",\r\n                \"governmentProcedure\": \"4000\",\r\n                \"linePackageTypeCode\": \"4A\",\r\n                \"statisticalQuantity\": 1100503.884045,\r\n                \"statisticalUnitCode\": \"KGM\",\r\n                \"valuationMethodCode\": \"1\",\r\n                \"supplierRelationCode\": \"135\",\r\n                \"valueForeignCurrency\": \"15000\",\r\n                \"insuranceCurrencyCode\": null,\r\n                \"deductionsCurrencyCode\": 0,\r\n                \"extFreightCurrencyCode\": null,\r\n                \"otherCostsCurrencyCode\": 0,\r\n                \"associatedGovtProcedure\": false,\r\n                \"valuationAdjustmentRate\": 1,\r\n                \"valuationAdjustmentValue\": 0,\r\n                \"valuationAdjustmentTypeCode\": null\r\n            }\r\n        ],\r\n        \"containers\": [\r\n            {\r\n                \"seals\": \"4000001, 4000002, 4000003, 4000004\",\r\n                \"containerType\": \"20R0\",\r\n                \"containerNumber\": \"MSCU2092276\"\r\n            },\r\n            {\r\n                \"seals\": \"5000001, 5000002, 5000003, 5000004\",\r\n                \"containerType\": \"20R0\",\r\n                \"containerNumber\": \"IPXU2148384\"\r\n            }\r\n        ],\r\n        \"attachments\": [],\r\n        \"totalNetWeight\": 26000,\r\n        \"totalVehicles\": 0,\r\n        \"totalContainers\": 2,\r\n        \"facilities\": [],\r\n        \"securityDetails\": null,\r\n        \"selfDeclared\": true,\r\n        \"agentId\": \"7d4e0dcb-0e3e-4fbb-87fb-acb555ae4edd\",\r\n        \"agentBlacklistedLatest\": false,\r\n        \"reasons\": [],\r\n        \"rejectReasons\": null,\r\n        \"cancelReasons\": null,\r\n        \"inquiries\": null,\r\n        \"errorReason\": null,\r\n        \"agent\": \"90184561\",\r\n        \"trader\": \"90184561\",\r\n        \"parties\": [\r\n            {\r\n                \"name\": \"Godi Cheese With Vegetable Oil\",\r\n                \"type\": \"NOTIFY_PARTIES\",\r\n                \"address\": \"1001 Industry Rd, Suite AKenner, LA 70062\",\r\n                \"communication\": \"TE\",\r\n                \"communicationReference\": \"973172696\"\r\n            }\r\n        ],\r\n        \"remarks\": null,\r\n        \"version\": 0,\r\n        \"packages\": [\r\n            {\r\n                \"total\": 1000,\r\n                \"packageType\": \"1A\"\r\n            }\r\n        ],\r\n        \"traderId\": \"7d4e0dcb-0e3e-4fbb-87fb-acb555ae4edd\",\r\n        \"consignor\": \"3658714209\",\r\n        \"check10000\": null,\r\n        \"totalLines\": 26,\r\n        \"arrivalDate\": \"2022-08-13T00:00:00.000Z\",\r\n        \"carrierCode\": null,\r\n        \"incotermCode\": \"CFR\",\r\n        \"totalFreight\": 0,\r\n        \"consignorName\": \"ABB\",\r\n        \"totalPackages\": 260000,\r\n        \"898OptionalFee\": false,\r\n        \"totalDocuments\": 0,\r\n        \"totalInsurance\": 0,\r\n        \"ecvrOptionalFee\": false,\r\n        \"invoiceDocument\": [],\r\n        \"officeEntryCode\": \"SAJED\",\r\n        \"tetsOptionalFee\": false,\r\n        \"traderReference\": \"Direct Import\",\r\n        \"agentBlacklisted\": false,\r\n        \"consignorAddress\": \"AAB\",\r\n        \"consignorCountry\": \"OM\",\r\n        \"hlevyOptionalFee\": false,\r\n        \"loadingPlaceCode\": \"GHABK\",\r\n        \"officeExportCode\": \"SAJED\",\r\n        \"risklabReference\": \"94e856e8-ac35-4131-a408-316fb8921e00\",\r\n        \"securityTypeCode\": null,\r\n        \"totalGrossWeight\": 26000,\r\n        \"typeMeansTavCode\": \"1\",\r\n        \"countryExportCode\": \"IN\",\r\n        \"goodsLocationCode\": \"889911CCA\",\r\n        \"htt001OptionalFee\": false,\r\n        \"incotermPlaceCode\": \"INSTV\",\r\n        \"incotermPlaceName\": \"Surat\",\r\n        \"traderBlacklisted\": false,\r\n        \"additionalDocument\": [],\r\n        \"chidoanOptionalFee\": false,\r\n        \"placeDischargeCode\": \"INSTV\",\r\n        \"totalInvoiceAmount\": 390000,\r\n        \"nationalMeansTavCode\": \"IN\",\r\n        \"natureTransactionCode\": \"1\",\r\n        \"officeDeclarationCode\": \"GHABK\",\r\n        \"totalInsuranceForeign\": 0,\r\n        \"consignorCommunication\": \"AH\",\r\n        \"freightApportQualifier\": \"VOL\",\r\n        \"identificationMeansTav\": \"SA578\",\r\n        \"totalExtFreightForeign\": 0,\r\n        \"declarationCurrencyCode\": \"AFN\",\r\n        \"traderBlacklistedLatest\": false,\r\n        \"freightApportQualifierCode\": null,\r\n        \"consignorCommunicationReference\": \"AH\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://bv-{{evn}}.ttekglobal.com/api/gateway/v1/decman/requests",
							"protocol": "https",
							"host": [
								"bv-{{evn}}",
								"ttekglobal",
								"com"
							],
							"path": [
								"api",
								"gateway",
								"v1",
								"decman",
								"requests"
							]
						}
					},
					"response": []
				},
				{
					"name": "SearchDecIMforhomeUse_Draft",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();\r",
									"\r",
									"pm.test(\"Response success is true\", function () {\r",
									"   pm.expect(data.success).to.be.true;\r",
									"});\r",
									" pm.test(\"Compare data after searching based on the Declaration document.\", function () {\r",
									" pm.expect(data.data.content[0].reference).to.contain(pm.variables.get(\"Reference_IMForhomeUsedraft\"));\r",
									"   \r",
									"\r",
									"});\r",
									"pm.execution.setNextRequest(\"SearchinvoidceDec\");\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenIMEX}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://bv-core-dev.ttekglobal.com/api/gateway/v1/decman/requests?page=0&size=10&reference={{Reference_IMForhomeUsedraft}}",
							"protocol": "https",
							"host": [
								"bv-core-dev",
								"ttekglobal",
								"com"
							],
							"path": [
								"api",
								"gateway",
								"v1",
								"decman",
								"requests"
							],
							"query": [
								{
									"key": "page",
									"value": "0"
								},
								{
									"key": "size",
									"value": "10"
								},
								{
									"key": "reference",
									"value": "{{Reference_IMForhomeUsedraft}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "SearchDecIMforhomeUse_PreviewDraft",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();\r",
									"\r",
									"pm.test(\"Response success is true\", function () {\r",
									"   pm.expect(data.success).to.be.true;\r",
									"});\r",
									" pm.test(\"Compare data after searching based on the Declaration document.\", function () {\r",
									"\r",
									"      pm.expect(data.data.reference).to.contain(pm.variables.get(\"Reference_IMForhomeUsedraft\"));\r",
									"\r",
									"});\r",
									"pm.execution.setNextRequest(\"SearchinvoidceDec\");"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenIMEX}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://bv-core-dev.ttekglobal.com/api/gateway/v1/decman/declarations/any/{{IDReference_IMForhomeUsedraft}}",
							"protocol": "https",
							"host": [
								"bv-core-dev",
								"ttekglobal",
								"com"
							],
							"path": [
								"api",
								"gateway",
								"v1",
								"decman",
								"declarations",
								"any",
								"{{IDReference_IMForhomeUsedraft}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "ValidationDec_IMforhomeUseOneline",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data;\r",
									"data = pm.response.json();\r",
									"if(data)\r",
									"{\r",
									"   pm.environment.set(\"errorCount\", data.data.errorCount);  \r",
									"}\r",
									"if (data.data.errorCount == 0)\r",
									"{\r",
									"     pm.execution.setNextRequest(\"SubmitDecTemporaryIM\");\r",
									"      pm.test(\"Check if the error count is 0\", function () {\r",
									"    pm.expect(pm.environment.get(\"errorCount\")).to.equal(0);\r",
									"});\r",
									"   \r",
									"}\r",
									"else\r",
									"{\r",
									"    pm.execution.setNextRequest(null)\r",
									"      pm.test(\"Check if the error count is more than 0\", function () {\r",
									"    pm.expect(data.data.errorCount).to.be.greaterThan(0);\r",
									"});\r",
									"}\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"\r",
									"\r",
									"//   setTimeout(function(){\r",
									"//           console.log(\"Sleeping for 3 seconds before next request.\");\r",
									"//   }, 3000);\r",
									"\r",
									"//   pm.execution.skipRequest(\"ValidationDec_TemporaryIMOneline\");\r",
									" //pm.execution.skipRequest()\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenIMEX}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"status\": \"DRAFT\",\r\n    \"regimeCode\": \"2\",\r\n    \"agentName\": \"Atlas World Logistics\",\r\n    \"agentTaxId\": \"90184561\",\r\n    \"agentBizFunction\": \"IM\",\r\n    \"agentCommunication\": \"EM\",\r\n    \"agentCommunicationRef\": \"atlas@yopmail.com\",\r\n    \"agentAddress\": {\r\n        \"id\": \"f6968f7d-5643-4f47-a1f7-e1d9f1ca1368\",\r\n        \"street\": \"Jeddah 7777\",\r\n        \"city\": \"Jeddah\",\r\n        \"poBoxNumber\": \"10101010\",\r\n        \"countryCode\": \"SA\",\r\n        \"address1\": \"111111\",\r\n        \"address2\": \"111111\",\r\n        \"address3\": \"11111\",\r\n        \"country\": \"SA\"\r\n    },\r\n    \"agentCountry\": \"SA\",\r\n    \"carrierName\": \"44440001 - Da Hua\",\r\n    \"traderName\": \"Atlas World Logistics\",\r\n    \"traderTaxId\": \"90184561\",\r\n    \"traderBizFunction\": \"IM\",\r\n    \"traderCommunication\": \"EM\",\r\n    \"traderCommunicationRef\": \"atlas@yopmail.com\",\r\n    \"traderAddress\": {\r\n        \"id\": \"f6968f7d-5643-4f47-a1f7-e1d9f1ca1368\",\r\n        \"street\": \"Jeddah 7777\",\r\n        \"city\": \"Jeddah\",\r\n        \"poBoxNumber\": \"10101010\",\r\n        \"countryCode\": \"SA\",\r\n        \"address1\": \"111111\",\r\n        \"address2\": \"111111\",\r\n        \"address3\": \"11111\",\r\n        \"country\": \"SA\"\r\n    },\r\n    \"traderCountry\": \"SA\",\r\n    \"procedureCode\": \"4\",\r\n    \"transportModeCode\": \"1\",\r\n    \"lines\": [\r\n        {\r\n            \"id\": \"{{IDReference_LineIMForhomeUsedraf}}\",\r\n            \"commodityClassification\": \"06011000\",\r\n            \"commercialGoodsDesc\": \"Other\",\r\n            \"supplementaryQuantity\": 100,\r\n            \"permitReferences\": [\r\n                \"2100002962\"\r\n            ],\r\n            \"goodsStatusCode\": \"1\",\r\n            \"countryOriginCode\": \"AI\",\r\n            \"regionOriginCode\": \"03\",\r\n            \"declaredValue\": 15000,\r\n            \"dutyAssessmentValue\": 15000,\r\n            \"freightCharge\": 135831.732,\r\n            \"insuranceCharge\": 135831.732,\r\n            \"tariffPreferenceClaimedCode\": null,\r\n            \"govtProcedureClaimedCode\": null,\r\n            \"containerReferences\": [\r\n                \"MSCU2092276\",\r\n                \"IPXU2148384\"\r\n            ],\r\n            \"numberPackages\": 10000,\r\n            \"grossWeight\": 10000,\r\n            \"netWeight\": null,\r\n            \"seqNumber\": 1,\r\n            \"hash\": {{Reference_LineIMForhomeUsedraft}},\r\n            \"vehicles\": [],\r\n            \"containers\": [\r\n                {\r\n                    \"seals\": \"4000001, 4000002, 4000003, 4000004\",\r\n                    \"containerType\": \"20R0\",\r\n                    \"containerNumber\": \"MSCU2092276\"\r\n                },\r\n                {\r\n                    \"seals\": \"5000001, 5000002, 5000003, 5000004\",\r\n                    \"containerType\": \"20R0\",\r\n                    \"containerNumber\": \"IPXU2148384\"\r\n                }\r\n            ],\r\n            \"manufacture\": \"Godi Cheese With Vegetable Oil\",\r\n            \"shippingMark\": \"Oranges contained in two container\",\r\n            \"modelVehicles\": [],\r\n            \"insuranceLocal\": 135831.732,\r\n            \"packageOfVolM3\": 1,\r\n            \"deductionsLocal\": 0,\r\n            \"extFreightLocal\": 135831.732,\r\n            \"insuranceFxRate\": 67.91586582541548,\r\n            \"otherCostsLocal\": 0,\r\n            \"valuationMethod\": \"1\",\r\n            \"deductedQuantity\": null,\r\n            \"deductionsFxRate\": 0,\r\n            \"descriptionGoods\": \"- Bulbs, tubers, tuberous roots, corms, crowns and rhizomes, dormant\",\r\n            \"extFreightFxRate\": 67.91586582541548,\r\n            \"insuranceForeign\": \"2000\",\r\n            \"lineCurrencyCode\": \"AFN\",\r\n            \"lineExchangeRate\": 1,\r\n            \"netWeightUOMCode\": \"KGM\",\r\n            \"otherCostsFxRate\": 0,\r\n            \"deductionsForeign\": 0,\r\n            \"extFreightForeign\": \"2000\",\r\n            \"intFreightForeign\": \"2000\",\r\n            \"otherCostsForeign\": 0,\r\n            \"grossWeightUOMCode\": \"KGM\",\r\n            \"governmentProcedure\": \"4000\",\r\n            \"linePackageTypeCode\": \"4A\",\r\n            \"statisticalQuantity\": 15000,\r\n            \"statisticalUnitCode\": \"MND\",\r\n            \"valuationMethodCode\": \"1\",\r\n            \"supplierRelationCode\": \"135\",\r\n            \"valueForeignCurrency\": \"15000\",\r\n            \"insuranceCurrencyCode\": \"USD\",\r\n            \"deductionsCurrencyCode\": 0,\r\n            \"extFreightCurrencyCode\": \"USD\",\r\n            \"otherCostsCurrencyCode\": 0,\r\n            \"associatedGovtProcedure\": true,\r\n            \"valuationAdjustmentRate\": 1,\r\n            \"valuationAdjustmentValue\": 0,\r\n            \"valuationAdjustmentTypeCode\": null\r\n        }\r\n    ],\r\n    \"containers\": [\r\n        {\r\n            \"seals\": \"4000001, 4000002, 4000003, 4000004\",\r\n            \"containerType\": \"20R0\",\r\n            \"containerNumber\": \"MSCU2092276\"\r\n        },\r\n        {\r\n            \"seals\": \"5000001, 5000002, 5000003, 5000004\",\r\n            \"containerType\": \"20R0\",\r\n            \"containerNumber\": \"IPXU2148384\"\r\n        }\r\n    ],\r\n    \"attachments\": [],\r\n    \"totalNetWeight\": 0,\r\n    \"totalVehicles\": 0,\r\n    \"totalContainers\": 2,\r\n    \"facilities\": [\r\n        {\r\n            \"code\": \"U002\",\r\n            \"name\": \"U002\"\r\n        }\r\n    ],\r\n    \"securityDetails\": null,\r\n    \"selfDeclared\": true,\r\n    \"agentId\": \"{{IDReference_IMForhomeUsedraft}}\",\r\n    \"agentBlacklistedLatest\": false,\r\n    \"id\": \"81cc6449-9da8-465c-86eb-b99a9c3b6824\",\r\n    \"reference\": \"{{Reference_IMForhomeUsedraft}}\",\r\n    \"reasons\": [],\r\n    \"rejectReasons\": null,\r\n    \"cancelReasons\": null,\r\n    \"inquiries\": null,\r\n    \"errorReason\": null,\r\n    \"parties\": [\r\n        {\r\n            \"name\": \"Godi Cheese With Vegetable Oil\",\r\n            \"type\": \"NOTIFY_PARTIES\",\r\n            \"address\": \"1001 Industry Rd, Suite AKenner, LA 70062\",\r\n            \"communication\": \"TE\",\r\n            \"communicationReference\": \"973172696\"\r\n        }\r\n    ],\r\n    \"remarks\": null,\r\n    \"version\": 0,\r\n    \"packages\": [\r\n        {\r\n            \"total\": 1000,\r\n            \"packageType\": \"1A\"\r\n        }\r\n    ],\r\n    \"traderId\": \"7d4e0dcb-0e3e-4fbb-87fb-acb555ae4edd\",\r\n    \"consignor\": \"7258461309\",\r\n    \"expiryDate\": \"2025-02-05T16:16:14.196Z\",\r\n    \"totalLines\": 1,\r\n    \"arrivalDate\": \"2024-09-13T00:00:00.000Z\",\r\n    \"carrierCode\": \"44440001\",\r\n    \"incotermCode\": \"CFR\",\r\n    \"totalFreight\": 135831.732,\r\n    \"consignorName\": \"Avis\",\r\n    \"totalPackages\": 10000,\r\n    \"898OptionalFee\": false,\r\n    \"totalDocuments\": 0,\r\n    \"totalInsurance\": 135831.732,\r\n    \"ecvrOptionalFee\": false,\r\n    \"invoiceDocument\": [],\r\n    \"officeEntryCode\": \"SAJED\",\r\n    \"tetsOptionalFee\": false,\r\n    \"traderReference\": \"Direct Import\",\r\n    \"agentBlacklisted\": false,\r\n    \"consignorAddress\": \"Vietnam\",\r\n    \"consignorCountry\": \"AE\",\r\n    \"hlevyOptionalFee\": false,\r\n    \"loadingPlaceCode\": \"GHABK\",\r\n    \"officeExportCode\": \"SAJED\",\r\n    \"securityTypeCode\": null,\r\n    \"totalGrossWeight\": 10000,\r\n    \"typeMeansTavCode\": \"1\",\r\n    \"countryExportCode\": \"IN\",\r\n    \"goodsLocationCode\": \"889911CCA\",\r\n    \"htt001OptionalFee\": false,\r\n    \"incotermPlaceCode\": \"SAJED\",\r\n    \"incotermPlaceName\": \"Jeddah\",\r\n    \"traderBlacklisted\": false,\r\n    \"additionalDocument\": [],\r\n    \"chidoanOptionalFee\": false,\r\n    \"placeDischargeCode\": \"SAJED\",\r\n    \"previousDocumentNo\": null,\r\n    \"totalInvoiceAmount\": 15000,\r\n    \"transportDocuments\": [],\r\n    \"nationalMeansTavCode\": \"IN\",\r\n    \"previousDocumentDate\": null,\r\n    \"natureTransactionCode\": \"1\",\r\n    \"officeDeclarationCode\": \"GHABK\",\r\n    \"totalInsuranceForeign\": 2000,\r\n    \"consignorCommunication\": \"AH\",\r\n    \"freightApportQualifier\": \"VOL\",\r\n    \"identificationMeansTav\": \"SA578\",\r\n    \"totalExtFreightForeign\": 2000,\r\n    \"declarationCurrencyCode\": \"AFN\",\r\n    \"traderBlacklistedLatest\": false,\r\n    \"freightApportQualifierCode\": null,\r\n    \"consignorCommunicationReference\": \"67777\",\r\n    \"type\": \"SUBMISSION\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://bv-core-dev.ttekglobal.com/api/gateway/v1/decman/forms/2/validations?",
							"protocol": "https",
							"host": [
								"bv-core-dev",
								"ttekglobal",
								"com"
							],
							"path": [
								"api",
								"gateway",
								"v1",
								"decman",
								"forms",
								"2",
								"validations"
							],
							"query": [
								{
									"key": "",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "SubmitDecIMforhomeUse",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data;\r",
									"data = pm.response.json();\r",
									"if(data)\r",
									"{\r",
									"   pm.environment.set(\"RegistrationReference_IMforhomeUse\", data.data.registrationReference);\r",
									"    pm.environment.set(\"IDRegistrationReference_IMforhomeUse\", data.data.request.applyTo);\r",
									"\r",
									"}\r",
									"pm.test(\"Status is SUBMITTED\", function () {\r",
									"    pm.expect(data.data.request.status).to.include(\"SUBMITTED\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									" pm.test(\"Check the declaration after submitting it successfully.\", function () {\r",
									"\r",
									"     pm.expect(data.data.registrationReference).to.include(pm.variables.get(\"RegistrationReference_IMforhomeUse\"));\r",
									"\r",
									"});\r",
									"\r",
									" pm.execution.setNextRequest(\"SearchDecTemporaryIM\");"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// if (pm.environment.get(\"errorCount\") > 0)\r",
									"// {\r",
									"  // pm.execution.skipRequest()\r",
									"//}\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenIMEX}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "https://bv-{{evn}}.ttekglobal.com/api/gateway/v1/decman/requests/{{IDReference_IMForhomeUsedraft}}/submit",
							"protocol": "https",
							"host": [
								"bv-{{evn}}",
								"ttekglobal",
								"com"
							],
							"path": [
								"api",
								"gateway",
								"v1",
								"decman",
								"requests",
								"{{IDReference_IMForhomeUsedraft}}",
								"submit"
							]
						}
					},
					"response": []
				},
				{
					"name": "SearchDecIMforhomeUse",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();\r",
									"\r",
									"pm.test(\"Response success is true\", function () {\r",
									"   pm.expect(data.success).to.be.true;\r",
									"});\r",
									" pm.test(\"Compare data after searching based on the Declaration document.\", function () {\r",
									"\r",
									"     pm.expect(data.data.content[0].reference).to.include(pm.variables.get(\"RegistrationReference_IMforhomeUse\"));\r",
									"\r",
									"});\r",
									"pm.execution.setNextRequest(\"SearchinvoidceDec\");"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenIMEX}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://bv-core-dev.ttekglobal.com/api/gateway/v1/decman/declarations?page=0&size=10&reference={{RegistrationReference_IMforhomeUse}}",
							"protocol": "https",
							"host": [
								"bv-core-dev",
								"ttekglobal",
								"com"
							],
							"path": [
								"api",
								"gateway",
								"v1",
								"decman",
								"declarations"
							],
							"query": [
								{
									"key": "page",
									"value": "0"
								},
								{
									"key": "size",
									"value": "10"
								},
								{
									"key": "reference",
									"value": "{{RegistrationReference_IMforhomeUse}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "SearchinvoidceDec",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var dec = pm.response.json();\r",
									"\r",
									"if (dec) {\r",
									"    pm.environment.set(\"InvoiceDecIMforhomeUse\", dec.data.content[0].id);\r",
									"}\r",
									"\r",
									"pm.test(\"Check RegistrationReference_Dec\", function () {\r",
									"    pm.expect(dec.data.content[0].referenceDocument).to.include(pm.variables.get(\"RegistrationReference_IMforhomeUse\"));\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.expect(dec.data.content[0].status).to.eql(\"CREATED\"); // Updated condition for 'CREATED' status\r",
									"});\r",
									"let a = dec.data.content[0].status;\r",
									"console.log(a)\r",
									"if (a === \"CREATED\") {\r",
									"  \r",
									"    pm.execution.setNextRequest(\"Payment_DecTemporaryIM\");\r",
									"}\r",
									"else\r",
									"{\r",
									"    pm.execution.setNextRequest(null)\r",
									"}\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const evn = pm.variables.get(\"evn\");\r",
									"const realms = pm.variables.get(\"realms\");\r",
									"pm.sendRequest({\r",
									"      url: `https://bv-${evn}.ttekglobal.com/apps/keycloak/realms/${realms}/protocol/openid-connect/token`,\r",
									"      method: 'POST',\r",
									"       header: {\r",
									"    'Content-Type': 'application/x-www-form-urlencoded',\r",
									"  },\r",
									"      body: {\r",
									"          mode: 'urlencoded',\r",
									"          urlencoded: [\r",
									"            {key: \"grant_type\", value: \"password\"},\r",
									"            {key: \"client_id\", value: \"BV_SWAGGER_UI\"},\r",
									"            {key: \"username\", value: \"atlas.cashier@yopmail.com\"},\r",
									"            {key: \"password\", value: \"@Ttek1234\"},\r",
									"        ]\r",
									"      }\r",
									"  }, \r",
									"  function (err, response) {\r",
									"    console.log(\"token\",response.json().access_token);\r",
									"        pm.environment.set(\"tokencashierCompany\", response.json().access_token);\r",
									"  });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokencashierCompany}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://bv-{{evn}}.ttekglobal.com/api/gateway/v1/revman/invoices?&page=0&size=10&referenceDocument={{RegistrationReference_IMforhomeUse}}",
							"protocol": "https",
							"host": [
								"bv-{{evn}}",
								"ttekglobal",
								"com"
							],
							"path": [
								"api",
								"gateway",
								"v1",
								"revman",
								"invoices"
							],
							"query": [
								{
									"key": null,
									"value": null
								},
								{
									"key": "page",
									"value": "0"
								},
								{
									"key": "size",
									"value": "10"
								},
								{
									"key": "referenceDocument",
									"value": "{{RegistrationReference_IMforhomeUse}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Payment_DecIMforhomeUse",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data;\r",
									"dataDec = pm.response.json();\r",
									"if(dataDec.success == true)\r",
									"{\r",
									"   pm.execution.setNextRequest(\"Releasing_DecTemporary\");\r",
									"   \r",
									"}\r",
									"else\r",
									"{\r",
									"    pm.execution.setNextRequest(null)\r",
									"}\r",
									" pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									" pm.test(\"Payment success\", function () {\r",
									"   pm.expect(dataDec.success).to.eql(true);\r",
									" })"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokencashierCompany}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"paymentMethod\":\"2\",\"bankGuarantorCode\":null,\"bankAccountNo\":\"\",\"receiptReference\":\"\",\"notes\":\"6666\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://bv-{{evn}}.ttekglobal.com/api/gateway/v1/revman/invoices/{{InvoiceDecIMforhomeUse}}/payments/requests",
							"protocol": "https",
							"host": [
								"bv-{{evn}}",
								"ttekglobal",
								"com"
							],
							"path": [
								"api",
								"gateway",
								"v1",
								"revman",
								"invoices",
								"{{InvoiceDecIMforhomeUse}}",
								"payments",
								"requests"
							]
						}
					},
					"response": []
				},
				{
					"name": "Releasing_DecIMforhomeUse",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var dataDec = pm.response.json();\r",
									"if(dataDec.success == true)\r",
									"{\r",
									"  pm.execution.setNextRequest(\"Release_DecTemporary\");\r",
									"   \r",
									"}\r",
									"else\r",
									"{\r",
									"    pm.execution.setNextRequest(null)\r",
									"}\r",
									" pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									" pm.test(\"Releasing success\", function () {\r",
									"   pm.expect(dataDec.success).to.eql(true);\r",
									" })"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const realms = pm.variables.get(\"realms\");\r",
									"const evn = pm.variables.get(\"evn\");\r",
									"pm.sendRequest({\r",
									"      url: `https://bv-${ebn}.ttekglobal.com/apps/keycloak/realms/${realms}/protocol/openid-connect/token`,\r",
									"      method: 'POST',\r",
									"       header: {\r",
									"    'Content-Type': 'application/x-www-form-urlencoded',\r",
									"  },\r",
									"      body: {\r",
									"          mode: 'urlencoded',\r",
									"          urlencoded: [\r",
									"            {key: \"grant_type\", value: \"password\"},\r",
									"            {key: \"client_id\", value: \"BV_SWAGGER_UI\"},\r",
									"            {key: \"username\", value: \"customs.officer@yopmail.com\"},\r",
									"            {key: \"password\", value: \"@Ttek1234\"},\r",
									"        ]\r",
									"      }\r",
									"  }, \r",
									"  function (err, response) {\r",
									"    console.log(\"tokencustomofficer\",response.json().access_token);\r",
									"        pm.environment.set(\"tokencustomofficer\", response.json().access_token);\r",
									"  });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokencustomofficer}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "https://bv-{{evn}}.ttekglobal.com/api/gateway/v1/decman/declarations/{{IDRegistrationReference_IMforhomeUse}}/releasing",
							"protocol": "https",
							"host": [
								"bv-{{evn}}",
								"ttekglobal",
								"com"
							],
							"path": [
								"api",
								"gateway",
								"v1",
								"decman",
								"declarations",
								"{{IDRegistrationReference_IMforhomeUse}}",
								"releasing"
							]
						}
					},
					"response": []
				},
				{
					"name": "Release_DecTemporary",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var dataDec = pm.response.json();\r",
									"// if(dataDec.success == true)\r",
									"// {\r",
									"//   pm.execution.setNextRequest(\"Release_DecTemporary\");\r",
									"   \r",
									"// }\r",
									" pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									" pm.test(\"Release success\", function () {\r",
									"   pm.expect(dataDec.success).to.eql(true);\r",
									" })\r",
									"  pm.test(\"Check the declaration after release success.\", function () {\r",
									"\r",
									"     pm.expect(dataDec.data.declarationReference).to.include(pm.variables.get(\"RegistrationReference_IMforhomeUse\"));\r",
									"     pm.expect(dataDec.data.releasedReference).to.is.not.null;\r",
									"\r",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokencustomofficer}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://bv-{{evn}}.ttekglobal.com/api/gateway/v1/decman/declarations/{{IDRegistrationReference_IMforhomeUse}}/release-orders",
							"protocol": "https",
							"host": [
								"bv-{{evn}}",
								"ttekglobal",
								"com"
							],
							"path": [
								"api",
								"gateway",
								"v1",
								"decman",
								"declarations",
								"{{IDRegistrationReference_IMforhomeUse}}",
								"release-orders"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Re-export",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							" pm.environment.set(\"facilityCode\",\"WHO001\");\r",
							"  pm.environment.set(\"facilityName\", \"Warahouse001\");"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{tokenIMEX}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"type\": \"SUBMISSION\",\r\n    \"data\": {\r\n        \"status\": \"DRAFT\",\r\n        \"regimeCode\": \"1\",\r\n        \"agentName\": \"Atlas World Logistics\",\r\n        \"agentTaxId\": \"90184561\",\r\n        \"agentBizFunction\": \"EX\",\r\n        \"agentCommunication\": \"EM\",\r\n        \"agentCommunicationRef\": \"atlas@yopmail.com\",\r\n        \"agentAddress\": {\r\n            \"id\": \"f6968f7d-5643-4f47-a1f7-e1d9f1ca1368\",\r\n            \"street\": \"Jeddah 7777\",\r\n            \"city\": \"Jeddah\",\r\n            \"poBoxNumber\": \"10101010\",\r\n            \"countryCode\": \"SA\",\r\n            \"address1\": \"111111\",\r\n            \"address2\": \"111111\",\r\n            \"address3\": \"11111\",\r\n            \"country\": \"SA\"\r\n        },\r\n        \"agentCountry\": \"SA\",\r\n        \"carrierName\": \"44440001 - Da Hua\",\r\n        \"traderName\": \"Atlas World Logistics\",\r\n        \"traderTaxId\": \"90184561\",\r\n        \"traderBizFunction\": \"EX\",\r\n        \"traderCommunication\": \"EM\",\r\n        \"traderCommunicationRef\": \"atlas@yopmail.com\",\r\n        \"traderAddress\": {\r\n            \"id\": \"f6968f7d-5643-4f47-a1f7-e1d9f1ca1368\",\r\n            \"street\": \"Jeddah 7777\",\r\n            \"city\": \"Jeddah\",\r\n            \"poBoxNumber\": \"10101010\",\r\n            \"countryCode\": \"SA\",\r\n            \"address1\": \"111111\",\r\n            \"address2\": \"111111\",\r\n            \"address3\": \"11111\"\r\n        },\r\n        \"traderCountry\": \"SA\",\r\n        \"procedureCode\": \"3\",\r\n        \"transportModeCode\": \"1\",\r\n        \"lines\": [\r\n            {\r\n                \"commodityClassification\": \"01061200\",\r\n                \"commercialGoodsDesc\": \"Other\",\r\n                \"supplementaryQuantity\": 100,\r\n                \"permitReferences\": null,\r\n                \"goodsStatusCode\": null,\r\n                \"countryOriginCode\": \"AD\",\r\n                \"regionOriginCode\": \"\",\r\n                \"declaredValue\": 1014445.0208,\r\n                \"dutyAssessmentValue\": 1014445.0208,\r\n                \"freightCharge\": 0,\r\n                \"insuranceCharge\": 135259.336107,\r\n                \"tariffPreferenceClaimedCode\": null,\r\n                \"govtProcedureClaimedCode\": null,\r\n                \"containerReferences\": [\r\n                    \"2434355\"\r\n                ],\r\n                \"numberPackages\": 10000,\r\n                \"grossWeight\": 10000,\r\n                \"netWeight\": null,\r\n                \"vehicles\": [],\r\n                \"containers\": [\r\n                    {\r\n                        \"containerType\": \"10BU\",\r\n                        \"containerNumber\": \"2434355\",\r\n                        \"seals\": \"444\"\r\n                    }\r\n                ],\r\n                \"manufacture\": \"Godi Cheese With Vegetable Oil\",\r\n                \"modelVehicles\": [],\r\n                \"insuranceLocal\": 135259.336107,\r\n                \"packageOfVolM3\": 1,\r\n                \"deductionsLocal\": 0,\r\n                \"extFreightLocal\": 135831.732,\r\n                \"insuranceFxRate\": 67.62966805330029,\r\n                \"otherCostsLocal\": 0,\r\n                \"valuationMethod\": \"1\",\r\n                \"deductedQuantity\": null,\r\n                \"deductionsFxRate\": 0,\r\n                \"descriptionGoods\": \"-- Whales, dolphins and porpoises (mammals of the order Cetacea); manatees and dugongs (mammals of the order Sirenia); seals, sea lions and walruses (mammals of the suborder Pinnipedia)\",\r\n                \"extFreightFxRate\": 67.91586582541548,\r\n                \"insuranceForeign\": 2000,\r\n                \"lineCurrencyCode\": \"USD\",\r\n                \"lineExchangeRate\": 67.62966805330029,\r\n                \"netWeightUOMCode\": null,\r\n                \"otherCostsFxRate\": 0,\r\n                \"deductionsForeign\": 0,\r\n                \"extFreightForeign\": 2000,\r\n                \"otherCostsForeign\": 0,\r\n                \"grossWeightUOMCode\": \"KGM\",\r\n                \"governmentProcedure\": \"3051\",\r\n                \"linePackageTypeCode\": \"4A\",\r\n                \"statisticalQuantity\": 1014445.0208,\r\n                \"statisticalUnitCode\": \"MND\",\r\n                \"valuationMethodCode\": \"1\",\r\n                \"valueForeignCurrency\": 15000,\r\n                \"insuranceCurrencyCode\": \"USD\",\r\n                \"deductionsCurrencyCode\": 0,\r\n                \"extFreightCurrencyCode\": \"USD\",\r\n                \"otherCostsCurrencyCode\": 0,\r\n                \"associatedGovtProcedure\": false,\r\n                \"valuationAdjustmentRate\": 1,\r\n                \"valuationAdjustmentValue\": 0,\r\n                \"intFreightFxRate\": \"\",\r\n                \"intFreightLocal\": 0,\r\n                \"shippingMark\": \"HH\"\r\n            }\r\n        ],\r\n        \"containers\": [\r\n            {\r\n                \"containerType\": \"10BU\",\r\n                \"containerNumber\": \"2434355\",\r\n                \"seals\": \"444\"\r\n            }\r\n        ],\r\n        \"attachments\": [],\r\n        \"totalNetWeight\": 0,\r\n        \"totalVehicles\": 0,\r\n        \"totalContainers\": 1,\r\n       \"facilities\": [\r\n            {\r\n                \"code\": \"{{facilityCode}}\",\r\n                \"name\": \"{{facilityName}}\"\r\n            }\r\n        ],\r\n        \"securityDetails\": null,\r\n        \"selfDeclared\": true,\r\n        \"agentId\": \"7d4e0dcb-0e3e-4fbb-87fb-acb555ae4edd\",\r\n        \"agentBlacklistedLatest\": false,\r\n        \"reasons\": [],\r\n        \"rejectReasons\": null,\r\n        \"cancelReasons\": null,\r\n        \"inquiries\": null,\r\n        \"errorReason\": null,\r\n        \"\": null,\r\n        \"agent\": \"90184561\",\r\n        \"trader\": \"90184561\",\r\n        \"parties\": [\r\n            {\r\n                \"name\": \"Godi Cheese With Vegetable Oil\",\r\n                \"type\": \"NOTIFY_PARTIES\",\r\n                \"address\": \"1001 Industry Rd, Suite AKenner, LA 70062\",\r\n                \"communication\": \"TE\",\r\n                \"communicationReference\": \"973172696\"\r\n            }\r\n        ],\r\n        \"remarks\": null,\r\n        \"version\": 0,\r\n        \"packages\": [\r\n            {\r\n                \"total\": 1000,\r\n                \"packageType\": \"1A\"\r\n            }\r\n        ],\r\n        \"traderId\": \"7d4e0dcb-0e3e-4fbb-87fb-acb555ae4edd\",\r\n        \"consignor\": \"7258461309\",\r\n        \"check10000\": null,\r\n        \"expiryDate\": \"2025-02-24T09:37:01.134Z\",\r\n        \"totalLines\": 1,\r\n        \"arrivalDate\": \"2022-08-13T00:00:00.000Z\",\r\n        \"carrierCode\": \"44440001\",\r\n        \"incotermCode\": \"CFR\",\r\n        \"totalFreight\": 0,\r\n        \"consignorName\": null,\r\n        \"totalPackages\": 10000,\r\n        \"totalInsurance\": 135259.336107,\r\n        \"ecvrOptionalFee\": false,\r\n        \"invoiceDocument\": [],\r\n        \"officeEntryCode\": \"SAJED\",\r\n        \"consignorAddress\": null,\r\n        \"consignorCountry\": null,\r\n        \"hlevyOptionalFee\": false,\r\n        \"officeExportCode\": \"SAJED\",\r\n        \"totalGrossWeight\": 10000,\r\n        \"typeMeansTadCode\": \"1\",\r\n        \"completionTempDec\": true,\r\n        \"htt001OptionalFee\": false,\r\n        \"incotermPlaceCode\": \"SAJED\",\r\n        \"incotermPlaceName\": \"Port of JEDDAH\",\r\n        \"additionalDocument\": [],\r\n        \"placeDischargeCode\": \"SAJED\",\r\n        \"previousDocumentNo\": \"{{RegistrationReference_TemporaryIM}}\",\r\n        \"totalInvoiceAmount\": 15000,\r\n        \"transportDocuments\": [],\r\n        \"nationalMeansTavCode\": \"IN\",\r\n        \"natureTransactionCode\": \"1\",\r\n        \"officeDeclarationCode\": \"GHABK\",\r\n        \"totalInsuranceForeign\": 2000,\r\n        \"consignorCommunication\": null,\r\n        \"freightApportQualifier\": \"VOL\",\r\n        \"identificationMeansTav\": \"SA578\",\r\n        \"totalExtFreightForeign\": 2000,\r\n        \"declarationCurrencyCode\": \"AFN\",\r\n        \"traderBlacklistedLatest\": false,\r\n        \"freightApportQualifierCode\": null,\r\n        \"consignorCommunicationReference\": null,\r\n        \"totalIntFreightForeign\": 0,\r\n        \"consignee\": \"7632890145\",\r\n        \"consigneeName\": \"SHREE KRISHNA RICE MILLS\",\r\n        \"consigneeCommunication\": \"AH\",\r\n        \"consigneeAddress\": \"Galb Kheri Road, Pakhana\",\r\n        \"consigneeCountry\": \"IN\",\r\n        \"consigneeCommunicationReference\": \"abc.com\",\r\n        \"countryExportCode\": \"AD\",\r\n        \"loadingPlaceCode\": \"SAJED\",\r\n        \"nationalMeansTadCode\": \"AD\",\r\n        \"identificationMeansTad\": \"5454\",\r\n        \"countryDestinationCode\": \"AD\",\r\n        \"goodsLocationCode\": \"114466CCA\",\r\n        \"totalDocuments\": 0,\r\n        \"agentBlacklisted\": false,\r\n        \"traderBlacklisted\": false,\r\n        \"depositPeriod\": 120\r\n    }\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://bv-{{evn}}.ttekglobal.com/api/gateway/v1/decman/requests",
					"protocol": "https",
					"host": [
						"bv-{{evn}}",
						"ttekglobal",
						"com"
					],
					"path": [
						"api",
						"gateway",
						"v1",
						"decman",
						"requests"
					]
				}
			},
			"response": []
		}
	]
}